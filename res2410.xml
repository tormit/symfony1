<?xml version="1.0" encoding="UTF-8"?>
<testsuites failures="21" errors="0" tests="5883" assertions="5883" skipped="457">
  <testsuite name="ActionRedirectTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/ActionRedirectTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="AdminGenTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/AdminGenTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="EnvironmentSetupTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/EnvironmentSetupTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="FormGeneratorTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/FormGeneratorTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="FormTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/FormTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="I18nTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/I18nTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="PagerTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/PagerTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="RouteTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/RouteTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="SchemaMergeTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/SchemaMergeTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="5269Test" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/Ticket/5269Test.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="7774Test" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/Ticket/7774Test.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="UniqueTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/UniqueTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="UploadTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/UploadTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfDoctrineRecordTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/functional/sfDoctrineRecordTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="autoloaderTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/autoloaderTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="autoloader loads &quot;Doctrine&quot;" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/autoloaderTest.php" line="15" assertions="1"/>
  </testsuite>
  <testsuite name="sfFormDoctrineTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/form/sfFormDoctrineTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfFormFilterDoctrineTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/form/sfFormFilterDoctrineTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfDoctrinePagerTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/pager/sfDoctrinePagerTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfDoctrineRecordTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/record/sfDoctrineRecordTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfDoctrineColumnTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" failures="0" errors="0" skipped="0" tests="23" assertions="23">
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="47" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="48" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="49" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="50" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="53" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="54" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="55" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="57" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="58" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="59" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="60" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="61" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="62" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="63" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="67" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="68" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="69" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="73" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="77" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="78" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="79" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="80" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineColumnTest.php" line="83" assertions="1"/>
  </testsuite>
  <testsuite name="sfDoctrineDatabaseTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineDatabaseTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="initialize() - creates a valid doctrine configuration from parameters" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineDatabaseTest.php" line="32" assertions="1"/>
    <testcase name="initialize() - setups doctrine attributes - attribute value is not a string" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineDatabaseTest.php" line="33" assertions="1"/>
    <testcase name="initialize() - setups doctrine attributes - attribute value is a string and constant exists" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineDatabaseTest.php" line="34" assertions="1"/>
    <testcase name="initialize() - setups doctrine attributes - attribute value is a string and constant not exists" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/sfDoctrineDatabaseTest.php" line="35" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorDoctrineChoiceTest" file="/mnt/hgfs/www/symfony1/lib/plugins/sfDoctrinePlugin/test/unit/validator/sfValidatorDoctrineChoiceTest.php" failures="1" errors="0" skipped="0" tests="1" assertions="1"/>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="18" assertions="18">
    <testcase name="request parameter &quot;module&quot; is &quot;auth&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;basic&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;401&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#user&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#password&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#msg&quot; matches &quot;KO&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;auth&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;basic&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#user&quot; matches &quot;foo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#password&quot; matches &quot;bar&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#msg&quot; matches &quot;OK&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;auth&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;basic&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;401&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#user&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#password&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#msg&quot; matches &quot;KO&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="1" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="request parameter &quot;module&quot; is &quot;autoload&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;myAutoload&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body div&quot; matches &quot;foo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="&quot;sfAutoload&quot; is case insensitive" file="/mnt/hgfs/www/symfony1/test/functional/autoloadTest.php" line="34" assertions="1">
      <failure type="lime"/>
    </testcase>
    <testcase name="plugin lib directory added to autoload" file="/mnt/hgfs/www/symfony1/test/functional/autoloadTest.php" line="36" assertions="1"/>
    <testcase name="plugin class can be replaced by project" file="/mnt/hgfs/www/symfony1/test/functional/autoloadTest.php" line="38" assertions="1"/>
    <testcase name="plugin autoload sets class paths" file="/mnt/hgfs/www/symfony1/test/functional/autoloadTest.php" line="39" assertions="1"/>
    <testcase name="plugin autoload excludes directories" file="/mnt/hgfs/www/symfony1/test/functional/autoloadTest.php" line="40" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="531" assertions="531">
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;page&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="117" assertions="1"/>
    <testcase name="image (with layout/page cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;page&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="117" assertions="1"/>
    <testcase name="image (with layout/page cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="image (with layout/action cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="image (with layout/action cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;page&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="117" assertions="1"/>
    <testcase name="image (no layout/page cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;page&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="117" assertions="1"/>
    <testcase name="image (no layout/page cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="image (no layout/action cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="image (no layout/action cache) in cache is not decorated when web_debug is on" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="21" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multiBis&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/main_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/main_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/another_partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/another_partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/component_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/component_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#partial_slot_content&quot; matches &quot;Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#another_partial_slot_content&quot; matches &quot;Another Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component_slot_content&quot; matches &quot;Component&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/main_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/main_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/another_partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/another_partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/component_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/component_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#partial_slot_content&quot; matches &quot;Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#another_partial_slot_content&quot; matches &quot;Another Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component_slot_content&quot; matches &quot;Component&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/main_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/main_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/another_partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/another_partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/component_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/component_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;#partial_slot_content&quot; matches &quot;Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#another_partial_slot_content&quot; matches &quot;Another Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component_slot_content&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;anotherPartial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/main_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/main_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/partial_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/partial_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/another_partial_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/another_partial_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/component_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/component_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;#partial_slot_content&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#another_partial_slot_content&quot; matches &quot;Another Partial&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component_slot_content&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;component&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/main_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/main_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/partial_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/partial_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/another_partial_css&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/another_partial_js&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;/component_css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;script[src*=&quot;/component_js&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#partial_slot_content&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#another_partial_slot_content&quot; matches &quot;&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component_slot_content&quot; matches &quot;Component&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;cache/list&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;cache/list?page=10&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#page&quot; matches &quot;10&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;cache/list?page=20&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#page&quot; matches &quot;20&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="status code is &quot;304&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;default&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;nocache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/nocache/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;page&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/page in cache/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;page&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="117" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;forward&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/page in cache/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multi&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#partial .partial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualPartial .contextualPartial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartialVarParam .contextualCacheablePartial_varParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component .component__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#componentVarParam .component_varParam_componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponent .contextualComponent__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponentVarParam .contextualComponent_varParam_componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponentVarParam .contextualCacheableComponent_varParam_componentParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multi&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#partial .partial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualPartial .contextualPartial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartialVarParam .contextualCacheablePartial_varParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component .component__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#componentVarParam .component_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponent .contextualComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponentVarParam .contextualComponent_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponentVarParam .contextualCacheableComponent_varParam_componentParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponent .cacheableComponent__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponentVarParam .cacheableComponent_varParam_componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartial .cacheablePartial__&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartialVarParam .cacheablePartial_varParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multi&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#partial .partial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualPartial .contextualPartial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartialVarParam .contextualCacheablePartial_varParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component .component__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#componentVarParam .component_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponent .contextualComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponentVarParam .contextualComponent_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponentVarParam .contextualCacheableComponent_varParam_componentParam_requestParam&quot; matches &quot;Param: requestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponent .cacheableComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponentVarParam .cacheableComponent_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartial .cacheablePartial__requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartialVarParam .cacheablePartial_varParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multi&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#partial .partial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualPartial .contextualPartial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartialVarParam .contextualCacheablePartial_varParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component .component__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#componentVarParam .component_varParam_componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponent .contextualComponent__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponentVarParam .contextualComponent_varParam_componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponentVarParam .contextualCacheableComponent_varParam_componentParam_&quot; matches &quot;Param: &quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponent .cacheableComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponentVarParam .cacheableComponent_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartial .cacheablePartial__requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartialVarParam .cacheablePartial_varParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multi&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#partial .partial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualPartial .contextualPartial&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__anotherRequestParam&quot; matches &quot;Param: anotherRequestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartialVarParam .contextualCacheablePartial_varParam_anotherRequestParam&quot; matches &quot;Param: anotherRequestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#component .component__componentParam_anotherRequestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#componentVarParam .component_varParam_componentParam_anotherRequestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponent .contextualComponent__componentParam_anotherRequestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualComponentVarParam .contextualComponent_varParam_componentParam_anotherRequestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_anotherRequestParam&quot; matches &quot;Param: anotherRequestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponentVarParam .contextualCacheableComponent_varParam_componentParam_anotherRequestParam&quot; matches &quot;Param: anotherRequestParam&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_partial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualPartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheablePartial&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_component&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=fd9fc792285d39e20447b19ae7182fe2&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=426086e77cb4b0500a3eec4bb80233e9&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponent .cacheableComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponentVarParam .cacheableComponent_varParam_componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartial .cacheablePartial__requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartialVarParam .cacheablePartial_varParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;multiBis&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#cacheablePartial .cacheablePartial__requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheablePartial .contextualCacheablePartial__&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#cacheableComponent .cacheableComponent__componentParam_requestParam&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;#contextualCacheableComponent .contextualCacheableComponent__componentParam_&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=40cd750bba9870f18aada2478b24840a&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;specificCacheKey&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is not in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheablePartial&amp;sf_cache_key=cacheablePartial&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=contextualCacheableComponent&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_cacheableComponent&amp;sf_cache_key=cacheableComponent&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;@sf_cache_partial?module=cache&amp;action=_contextualCacheableComponent&amp;sf_cache_key=contextualCacheableComponent&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;action&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="action is executed when not in cache" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="291" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;cache&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;action&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="cache is configured properly" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="101" assertions="1"/>
    <testcase name="&quot;action&quot; is in cache" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="104" assertions="1"/>
    <testcase name="content in cache is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterViewCache.class.php" line="123" assertions="1"/>
    <testcase name="action is not executed when in cache" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="309" assertions="1"/>
    <testcase name="response content is the same" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="316" assertions="1"/>
    <testcase name="response content type is the same" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="317" assertions="1"/>
    <testcase name="response http headers are the same" file="/mnt/hgfs/www/symfony1/test/functional/cacheTest.php" line="318" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="15" assertions="15">
    <testcase name="request parameter &quot;module&quot; is &quot;escaping&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;on&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h1&gt;Lorem &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt; dolor sit amet.&lt;/h1&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h2&gt;Lorem &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt; dolor sit amet.&lt;/h2&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h3&gt;Lorem &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt; dolor sit amet.&lt;/h3&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h4&gt;Lorem &lt;strong&gt;ipsum&lt;/strong&gt; dolor sit amet.&lt;/h4&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h5&gt;Lorem &amp;lt;strong&amp;gt;ipsum&amp;lt;/strong&amp;gt; dolor sit amet.&lt;/h5&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h6&gt;Lorem &lt;strong&gt;ipsum&lt;/strong&gt; dolor sit amet.&lt;/h6&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response selector &quot;span.no&quot; matches &quot;2&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;escaping&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;off&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h1&gt;Lorem &lt;strong&gt;ipsum&lt;/strong&gt; dolor sit amet.&lt;/h1&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;#&lt;h2&gt;Lorem &lt;strong&gt;ipsum&lt;/strong&gt; dolor sit amet.&lt;/h2&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="10" assertions="10">
    <testcase name="request parameter &quot;module&quot; is &quot;filter&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;div[class=&quot;before&quot;]&quot; matches &quot;1&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
    <testcase name="response selector &quot;div[class=&quot;after&quot;]&quot; matches &quot;1&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;filter&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;indexWithForward&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;div[class=&quot;before&quot;]&quot; matches &quot;2&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
    <testcase name="response selector &quot;div[class=&quot;after&quot;]&quot; matches &quot;1&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="51" assertions="51">
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;js&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;application/javascript&quot; (application/javascript)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response content does not match regex &quot;/&lt;body&gt;/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="393" assertions="1"/>
    <testcase name="response content matches regex &quot;/Some js headers/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;/This is a js file/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;css&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/css; charset=utf-8&quot; (text/css; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response content matches regex &quot;/This is a css file/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;html&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/html; charset=utf-8&quot; (text/html; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response selector &quot;body #content&quot; matches &quot;This is an HTML file&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;xml&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/xml; charset=utf-8&quot; (text/xml; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response selector &quot;sentences sentence:first&quot; matches &quot;This is a XML file&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;foo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/html; charset=utf-8&quot; (text/html; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;x-foo&quot; is &quot;true&quot; (true)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response selector &quot;body #content&quot; matches &quot;This is an HTML file&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;js&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;js&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;application/javascript&quot; (application/javascript)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response content matches regex &quot;/A js file/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;forTheIPhone&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request format is &quot;iphone&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="62" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/html; charset=utf-8&quot; (text/html; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response selector &quot;#content&quot; matches &quot;This is an HTML file for the iPhone&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;link[href*=&quot;iphone.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;format&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;Exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="response exception message matches regex &quot;/message/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="402" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="73" assertions="73">
    <testcase name="request parameter &quot;module&quot; is &quot;default&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/css/main.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/css/multiple_media.css&quot;][media=&quot;print,handheld&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="response content matches regex &quot;#\&lt;\!\-\-\[if lte IE 6\]\&gt;\&lt;link rel\=&quot;stylesheet&quot; type\=&quot;text/css&quot; media\=&quot;screen&quot; href\=&quot;/css/ie6\.css&quot; /\&gt;\&lt;\!\[endif\]\-\-\&gt;#&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;notfound&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/404/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;notfound&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/404/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;disabled&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/module is unavailable/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;body&quot; does not match regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="100" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/no layout/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;head title&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;login&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/Login Required/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches &quot;1&quot; times" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="93" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;login&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/Login Required/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;login&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/Login Required/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response exception message matches regex &quot;/Too many forwards have been detected for this request/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="402" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/in a filter/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;body&quot; does not match regex &quot;/congratulation/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="100" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;head link[rel=&quot;stylesheet&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="response selector &quot;head script[type=&quot;text/javascript&quot;]&quot; does not exist" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="85" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#lib1&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#lib2&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#lib3&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#lib4&quot; matches &quot;nopong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#lib1&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#lib2&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#lib3&quot; matches &quot;pong&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response content matches regex &quot;/foo/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;Content-Type&quot; is &quot;text/html; charset=utf-8&quot; (text/html; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response selector &quot;head title&quot; matches &quot;foo title&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response header &quot;Content-Type&quot; is &quot;text/plain; charset=utf-8&quot; (text/plain; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response content matches regex &quot;/&lt;head&gt;/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response content matches regex &quot;/plaintext/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;Content-Type&quot; is &quot;image/jpg&quot; (image/jpg)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response content matches regex &quot;/image/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#foo&quot; matches &quot;foo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#foo_bis&quot; matches &quot;foo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestFunctionalBase.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" failures="0" errors="0" skipped="0" tests="16" assertions="16">
    <testcase name="response header &quot;Last-Modified&quot; matches &quot;/^24 Oct 2013 10\:/&quot; (Thu, 24 Oct 2013 10:22:01 GMT)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;ETag&quot; is &quot;1&quot; (&quot;9448d823d671c30530ddf0b4eb727f5a&quot;)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Expires&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Cache-Control&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Last-Modified&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;ETag&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Expires&quot; matches &quot;/^25 Oct 2013 10\:/&quot; (Fri, 25 Oct 2013 10:22:01 GMT)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;Cache-Control&quot; matches &quot;/max-age=86400/&quot; (max-age=86400)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;Last-Modified&quot; matches &quot;/^23 Oct 2013 10\:/&quot; (Wed, 23 Oct 2013 10:22:01 GMT)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;ETag&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Expires&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Cache-Control&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Last-Modified&quot; matches &quot;/^23 Oct 2013 10\:/&quot; (Wed, 23 Oct 2013 10:22:01 GMT)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;ETag&quot; is &quot;1&quot; (&quot;9448d823d671c30530ddf0b4eb727f5a&quot;)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Expires&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;Cache-Control&quot; is &quot;&quot; ()" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="27" assertions="27">
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;i18nForm&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="user culture is &quot;en&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;First name&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Last name&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Email address&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;td&quot; matches regex &quot;/Put your first name here/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;ul li&quot; matches &quot;Required.&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;ul li&quot; matches &quot;foo/bar is an invalid email address&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;i18nForm&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="user culture is &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Prénom&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Nom&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Adresse email&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;td&quot; matches regex &quot;/Mettez votre prénom ici/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;ul li&quot; matches &quot;Champ requis.&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;ul li&quot; matches &quot;foo/bar est une adresse email invalide&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;i18nCustomCatalogueForm&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="user culture is &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Prénom!!!&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Nom!!!&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;label&quot; matches &quot;Adresse email!!!&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="44" assertions="44">
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#action&quot; matches regex &quot;/an english sentence/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template&quot; matches regex &quot;/an english sentence/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="user culture is &quot;en&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="user culture is &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="response selector &quot;#action&quot; matches regex &quot;/une phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template&quot; matches regex &quot;/une phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_local&quot; matches regex &quot;/une phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_local&quot; matches regex &quot;/une phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_other&quot; matches regex &quot;/une autre phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_other&quot; matches regex &quot;/une autre phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_other_local&quot; matches regex &quot;/une autre phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_other_local&quot; matches regex &quot;/une autre phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;i18n&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;indexForFr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="user culture is &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="response selector &quot;#action&quot; matches regex &quot;/une phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template&quot; matches regex &quot;/une phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_local&quot; matches regex &quot;/une phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_local&quot; matches regex &quot;/une phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_other&quot; matches regex &quot;/une autre phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_other&quot; matches regex &quot;/une autre phrase en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_other_local&quot; matches regex &quot;/une autre phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_other_local&quot; matches regex &quot;/une autre phrase locale en français/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;sfI18NPlugin&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="user culture is &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterUser.class.php" line="78" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;#action&quot; matches regex &quot;/une phrase en français - from plugin/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template&quot; matches regex &quot;/une phrase en français - from plugin/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_local&quot; matches regex &quot;/une phrase locale en français - from plugin/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_local&quot; matches regex &quot;/une phrase locale en français - from plugin/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_other&quot; matches regex &quot;/une autre phrase en français - from plugin but translation overridden in the module/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_other&quot; matches regex &quot;/une autre phrase en français - from plugin but translation overridden in the module/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_yetAnother&quot; matches regex &quot;/encore une autre phrase en français - from plugin but translation overridden in the application/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_yetAnother&quot; matches regex &quot;/encore une autre phrase en français - from plugin but translation overridden in the application/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#action_testForPluginI18N&quot; matches regex &quot;/une phrase en français depuis un plugin - global/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="response selector &quot;#template_testForPluginI18N&quot; matches regex &quot;/une phrase en français depuis un plugin - global/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="23" assertions="23">
    <testcase name="request parameter &quot;module&quot; is &quot;default&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;default&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;index&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; matches regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="104" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;error404&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; does not match regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="100" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;error404&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; does not match regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="100" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
    <testcase name="request is forwarded to the &quot;default&quot; module (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="62" assertions="1"/>
    <testcase name="request is forwarded to the &quot;error404&quot; action (last)" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctional.class.php" line="63" assertions="1"/>
    <testcase name="status code is &quot;404&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response selector &quot;body&quot; does not match regex &quot;/congratulations/i&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="100" assertions="1"/>
    <testcase name="response selector &quot;link[href=&quot;/sf/sf_default/css/screen.css&quot;]&quot; exists" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="89" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestBrowser.class" file="/mnt/hgfs/www/symfony1/lib/test/sfTestBrowser.class.php" failures="0" errors="0" skipped="0" tests="96" assertions="96">
    <testcase name="browser can connect to context.load_factories" file="/mnt/hgfs/www/symfony1/test/functional/sfTestBrowserTest.php" line="31" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;noException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response content matches regex &quot;/foo/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;Exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;Exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="response exception message matches regex &quot;/Exception message/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="402" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;Exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="response exception message matches regex &quot;/message/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="402" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response exception message does not match regex &quot;!/sfException/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="398" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsSfException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;sfException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;exception&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;throwsSfException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;500&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response returns an exception of class &quot;sfException&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="391" assertions="1"/>
    <testcase name="response exception message is &quot;sfException message&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTestFunctionalBase.class.php" line="407" assertions="1"/>
    <testcase name="response content matches regex &quot;/html/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="response selector &quot;h1&quot; matches &quot;html&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response content matches regex &quot;/text/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="397" assertions="1"/>
    <testcase name="The DOM is not accessible if the response content type is not HTML" file="/mnt/hgfs/www/symfony1/test/functional/sfTestBrowserTest.php" line="115" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; is &quot;text/plain; charset=utf-8&quot; (text/plain; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; matches &quot;#text/plain#&quot; (text/plain; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="297" assertions="1"/>
    <testcase name="response header &quot;content-type&quot; matches &quot;!#text/html#&quot; (text/plain; charset=utf-8)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="323" assertions="1"/>
    <testcase name="response header &quot;foo&quot; is &quot;bar&quot; (bar, foobar)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="response header &quot;foo&quot; is &quot;foobar&quot; (bar, foobar)" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="314" assertions="1"/>
    <testcase name="cookie &quot;foofoo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="147" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content matches regex &quot;/a/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="142" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content does not match regex &quot;!/z/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="138" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;bar.foo-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="147" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content matches regex &quot;/a/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="142" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content does not match regex &quot;!/z/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="138" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;bar.foo-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;bar&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;.foo-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;bar&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;.-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="147" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content matches regex &quot;/a/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="142" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content does not match regex &quot;!/z/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="138" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;bar.foo-barfoo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content is ok" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="147" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content matches regex &quot;/a/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="142" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; content does not match regex &quot;!/z/&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="138" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;bar.foo-barfoo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;bar&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;.foo-barfoo&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;bar&quot; exists." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="107" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;.foo-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="cookie &quot;foo&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="cookie &quot;bar&quot; does not exist." file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="99" assertions="1"/>
    <testcase name="response selector &quot;p&quot; matches &quot;.-&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request method is &quot;GET&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="76" assertions="1"/>
    <testcase name="request method is &quot;POST&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="76" assertions="1"/>
    <testcase name="request method is &quot;PUT&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="76" assertions="1"/>
    <testcase name="response selector &quot;#test&quot; matches &quot;template&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#test&quot; matches &quot;template 1&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="response selector &quot;#test&quot; matches &quot;template&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="110" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;browser&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;redirect1&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;302&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;browser&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;redirectTarget1&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;browser&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;redirect2&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;302&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
    <testcase name="request parameter &quot;module&quot; is &quot;browser&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="request parameter &quot;action&quot; is &quot;redirectTarget2&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterRequest.class.php" line="48" assertions="1"/>
    <testcase name="status code is &quot;200&quot;" file="/mnt/hgfs/www/symfony1/lib/test/sfTesterResponse.class.php" line="412" assertions="1"/>
  </testsuite>
  <testsuite name="sfComponentTest" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;initialize() takes a sfContext object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;initialize() takes a sfContext object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;getContext() returns the current context" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;getRequest() returns the current request" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;getResponse() returns the current response" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="47" assertions="1"/>
    <testcase name="__set() populates component variables" file="/mnt/hgfs/www/symfony1/test/unit/action/sfComponentTest.php" line="53" assertions="1"/>
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfPagerTest" file="/mnt/hgfs/www/symfony1/test/unit/addon/sfPagerTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="iterating first time will invoke on all items" file="/mnt/hgfs/www/symfony1/test/unit/addon/sfPagerTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;rewind will allow reiterating" file="/mnt/hgfs/www/symfony1/test/unit/addon/sfPagerTest.php" line="43" assertions="1"/>
  </testsuite>
  <testsuite name="sfCoreAutoloadTest" file="/mnt/hgfs/www/symfony1/test/unit/autoload/sfCoreAutoloadTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="&quot;sfCoreAutoload&quot; is case-insensitive" file="/mnt/hgfs/www/symfony1/test/unit/autoload/sfCoreAutoloadTest.php" line="16" assertions="1"/>
  </testsuite>
  <testsuite name="sfSimpleAutoloadTest" file="/mnt/hgfs/www/symfony1/test/unit/autoload/sfSimpleAutoloadTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="&quot;sfSimpleAutoload&quot; is case insensitive" file="/mnt/hgfs/www/symfony1/test/unit/autoload/sfSimpleAutoloadTest.php" line="19" assertions="1"/>
  </testsuite>
  <testsuite name="sfAPCCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" failures="0" errors="0" skipped="64" tests="64" assertions="64">
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have APC installed and enabled to use sfAPCCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfAPCCacheTest.php" line="22" assertions="1"/>
  </testsuite>
  <testsuite name="sfCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;initialize() takes an array of options as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheTest.php" line="35" assertions="1"/>
  </testsuite>
  <testsuite name="sfEAcceleratorCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" failures="0" errors="0" skipped="64" tests="64" assertions="64">
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have EAccelerator installed and enabled to use sfEAcceleratorCache class (or perhaps you forgot to add --with-eaccelerator-shared-memory when installing)." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfEAcceleratorCacheTest.php" line="22" assertions="1"/>
  </testsuite>
  <testsuite name="sfFileCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFileCacheTest.php" failures="0" errors="0" skipped="0" tests="65" assertions="65">
    <testcase name="-&gt;initialize() throws an sfInitializationException exception if you don't pass a &quot;cache_dir&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFileCacheTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;set() returns true if data are stored in cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="17" assertions="1"/>
    <testcase name="-&gt;get() retrieves data form the cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="18" assertions="1"/>
    <testcase name="-&gt;has() returns true if the cache exists" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="19" assertions="1"/>
    <testcase name="-&gt;set() takes a lifetime as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="21" assertions="1"/>
    <testcase name="-&gt;get() returns the default value if cache has expired" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="22" assertions="1"/>
    <testcase name="-&gt;has() returns true if the cache exists" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="23" assertions="1"/>
    <testcase name="-&gt;get() returns null if the cache does not exist" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="25" assertions="1"/>
    <testcase name="-&gt;get() takes a default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="26" assertions="1"/>
    <testcase name="-&gt;has() returns false if the cache does not exist" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="27" assertions="1"/>
    <testcase name="-&gt;set() overrides previous data stored in the cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="30" assertions="1"/>
    <testcase name="-&gt;get() retrieves the latest data form the cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="31" assertions="1"/>
    <testcase name="-&gt;set() false data are stored in the cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;has() returns true if the cache exists with false value" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;get() retrieves the latest data form the cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;get() does not return default value if false is stored" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="37" assertions="1"/>
    <testcase name="-&gt;set() accepts a &quot;namespaced&quot; cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="43" assertions="1"/>
    <testcase name="-&gt;set() accepts a &quot;namespaced&quot; cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="44" assertions="1"/>
    <testcase name="-&gt;set() accepts a &quot;namespaced&quot; cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="45" assertions="1"/>
    <testcase name="-&gt;clean() cleans old cache key if given the sfCache::OLD argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;clean() cleans old cache key if given the sfCache::OLD argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="55" assertions="1"/>
    <testcase name="-&gt;clean() cleans all cache key if given the sfCache::ALL argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="61" assertions="1"/>
    <testcase name="-&gt;clean() cleans all cache key if given the sfCache::ALL argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="62" assertions="1"/>
    <testcase name="-&gt;clean() cleans all cache key if given no argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="68" assertions="1"/>
    <testcase name="-&gt;clean() cleans all cache key if given no argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="69" assertions="1"/>
    <testcase name="-&gt;remove() takes a cache key as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="86" assertions="1"/>
    <testcase name="-&gt;remove() takes a cache key as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="87" assertions="1"/>
    <testcase name="-&gt;remove() takes a cache key as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="88" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="115" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="116" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="117" assertions="1"/>
    <testcase name="-&gt;removePattern() takes a pattern as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="118" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns the timeout time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="128" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns the timeout time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="128" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns the timeout time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="132" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns the timeout time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="140" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns the timeout time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="140" assertions="1"/>
    <testcase name="-&gt;getTimeout() returns 0 if the cache key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="143" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="152" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="152" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="156" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="165" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time for a given cache key" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="165" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns 0 if the cache key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="168" assertions="1"/>
    <testcase name="-&gt;getMany() gets many keys in one call" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfCacheDriverTests.class.php" line="177" assertions="1"/>
  </testsuite>
  <testsuite name="sfFunctionCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" failures="0" errors="0" skipped="0" tests="15" assertions="15">
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;call() works with functions" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="90" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;call() stores the function call in cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="92" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="93" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;call() works with static method calls" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="97" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;call() stores the function call in cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="99" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="100" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;call() works with object methods" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="106" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;call() stores the function call in cache" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="108" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfFunctionCacheTest.php" line="109" assertions="1"/>
  </testsuite>
  <testsuite name="sfMemcacheCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" failures="0" errors="0" skipped="73" tests="73" assertions="73">
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP Memcache needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfMemcacheCacheTest.php" line="18" assertions="1"/>
  </testsuite>
  <testsuite name="sfNoCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;get() always returns &quot;null&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;set() always returns &quot;true&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;has() always returns &quot;false&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;remove() always returns &quot;true&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;removePattern() always returns &quot;true&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() always returns &quot;true&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;getLastModified() always returns &quot;0&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;getTimeout() always returns &quot;0&quot;" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfNoCacheTest.php" line="28" assertions="1"/>
  </testsuite>
  <testsuite name="sfSQLiteCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" failures="0" errors="0" skipped="129" tests="129" assertions="129">
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite extension not loaded, skipping tests" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfSQLiteCacheTest.php" line="19" assertions="1"/>
  </testsuite>
  <testsuite name="sfXCacheCacheTest" file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" failures="0" errors="0" skipped="64" tests="64" assertions="64">
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
    <testcase name="# SKIP You must have XCache installed and enabled to use sfXCacheCache class." file="/mnt/hgfs/www/symfony1/test/unit/cache/sfXCacheCacheTest.php" line="22" assertions="1"/>
  </testsuite>
  <testsuite name="sfCommandArgumentSetTest" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" failures="0" errors="0" skipped="0" tests="21" assertions="21">
    <testcase name="__construct() creates a new sfCommandArgumentSet object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="23" assertions="1"/>
    <testcase name="__construct() takes an array of sfCommandArgument objects as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;setArguments() sets the array of sfCommandArgument objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;setArguments() clears all sfCommandArgument objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;addArguments() adds an array of sfCommandArgument objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;addArguments() does not clear existing sfCommandArgument objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;addArgument() adds a sfCommandArgument object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;addArgument() adds a sfCommandArgument object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;addArgument() throws a sfCommandException if another argument is already registered with the same name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;addArgument() throws a sfCommandException if there is an array parameter already registered" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;addArgument() throws an exception if you try to add a required argument after an optional one" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="86" assertions="1"/>
    <testcase name="-&gt;getArgument() returns a sfCommandArgument by its name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;getArgument() throws an exception if the Argument name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;hasArgument() returns true if a sfCommandArgument exists for the given name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;hasArgument() returns false if a sfCommandArgument exists for the given name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;getArgumentRequiredCount() returns the number of required arguments" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;getArgumentRequiredCount() returns the number of required arguments" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;getArgumentCount() returns the number of arguments" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;getArgumentCount() returns the number of arguments" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;getDefaults() return the default values for each argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="136" assertions="1"/>
    <testcase name="-&gt;getDefaults() return the default values for each argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentSetTest.php" line="142" assertions="1"/>
  </testsuite>
  <testsuite name="sfCommandArgumentTest" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" failures="0" errors="0" skipped="0" tests="16" assertions="16">
    <testcase name="__construct() takes a name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="18" assertions="1"/>
    <testcase name="__construct() gives a &quot;sfCommandArgument::OPTIONAL&quot; mode by default" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="22" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandArgument::OPTIONAL&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="25" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandArgument::PARAMETER_OPTIONAL&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="28" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandArgument::PARAMETER_REQUIRED&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="31" assertions="1"/>
    <testcase name="__construct() throws an sfCommandException if the mode is not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;isArray() returns true if the argument can be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;isArray() returns true if the argument can be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;isArray() returns false if the argument can not be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;getHelp() return the message help" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;getDefault() return the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;setDefault() can reset the default value by passing null" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;setDefault() changes the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;setDefault() changes the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;setDefault() throws an sfCommandException if you give a default value for a required argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;setDefault() throws an sfCommandException if you give a default value which is not an array for a IS_ARRAY option" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandArgumentTest.php" line="93" assertions="1"/>
  </testsuite>
  <testsuite name="sfCommandManagerTest" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" failures="0" errors="0" skipped="0" tests="41" assertions="41">
    <testcase name="__construct() creates a new sfCommandArgumentsSet if none given" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="21" assertions="1"/>
    <testcase name="__construct() creates a new sfCommandOptionSet if none given" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="22" assertions="1"/>
    <testcase name="__construct() takes a sfCommandArgumentSet as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="25" assertions="1"/>
    <testcase name="__construct() takes a sfCommandArgumentSet as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="26" assertions="1"/>
    <testcase name="__construct() can take a sfCommandOptionSet as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;setArgumentSet() sets the manager argument set" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;setOptionSet() sets the manager option set" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;process() processes CLI options" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;process() processes CLI options" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;process() processes CLI options" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() returns the value for the given option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getOptionValue() throws a sfCommandException if the option name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;getArgumentValue() returns the value for the given argument name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;getArgumentValue() returns the value for the given argument name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;getArgumentValue() throws a sfCommandException if the argument name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="133" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="160" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the options are not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;getErrors() returns an array of errors" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandManagerTest.php" line="166" assertions="1"/>
  </testsuite>
  <testsuite name="sfCommandOptionSetTest" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" failures="0" errors="0" skipped="0" tests="20" assertions="20">
    <testcase name="__construct() creates a new sfCommandOptionSet object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="23" assertions="1"/>
    <testcase name="__construct() takes an array of sfCommandOption objects as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;setOptions() sets the array of sfCommandOption objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;setOptions() clears all sfCommandOption objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;setOptions() clears all sfCommandOption objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;addOptions() adds an array of sfCommandOption objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;addOptions() does not clear existing sfCommandOption objects" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;addOption() adds a sfCommandOption object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;addOption() adds a sfCommandOption object" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;addOption() throws a sfCommandException if the another option is already registered with the same name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;addOption() throws a sfCommandException if the another option is already registered with the same shortcut" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;getOption() returns a sfCommandOption by its name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;getOption() throws an exception if the option name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;hasOption() returns true if a sfCommandOption exists for the given name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;hasOption() returns false if a sfCommandOption exists for the given name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;hasShortcut() returns true if a sfCommandOption exists for the given shortcut" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;hasShortcut() returns false if a sfCommandOption exists for the given shortcut" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;getOptionForShortcut() returns a sfCommandOption by its shortcut" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;getOption() throws an exception if the shortcut does not exist" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;getDefaults() returns the default values for all options" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionSetTest.php" line="144" assertions="1"/>
  </testsuite>
  <testsuite name="sfCommandOptionTest" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" failures="0" errors="0" skipped="0" tests="34" assertions="34">
    <testcase name="__construct() takes a name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="18" assertions="1"/>
    <testcase name="__construct() removes the leading -- of the option name" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="20" assertions="1"/>
    <testcase name="__construct() can take a shortcut as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="24" assertions="1"/>
    <testcase name="__construct() removes the leading - of the shortcut" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="26" assertions="1"/>
    <testcase name="__construct() gives a &quot;sfCommandOption::PARAMETER_NONE&quot; mode by default" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="30" assertions="1"/>
    <testcase name="__construct() gives a &quot;sfCommandOption::PARAMETER_NONE&quot; mode by default" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="31" assertions="1"/>
    <testcase name="__construct() gives a &quot;sfCommandOption::PARAMETER_NONE&quot; mode by default" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="32" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="35" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="36" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="37" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="40" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="41" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_NONE&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="42" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_REQUIRED&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="45" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_REQUIRED&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="46" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_REQUIRED&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="47" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_OPTIONAL&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="50" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_OPTIONAL&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="51" assertions="1"/>
    <testcase name="__construct() can take &quot;sfCommandOption::PARAMETER_OPTIONAL&quot; as its mode" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="52" assertions="1"/>
    <testcase name="__construct() throws an sfCommandException if the mode is not valid" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;isArray() returns true if the option can be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;isArray() returns true if the option can be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;isArray() returns false if the option can not be an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;getHelp() returns the help message" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;getDefault() returns the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;getDefault() returns the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;getDefault() returns null if no default value is configured" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;getDefault() returns an empty array if option is an array" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;getDefault() returns false if the option does not take a parameter" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;setDefault() can reset the default value by passing null" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;setDefault() changes the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;setDefault() changes the default value" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;setDefault() throws an sfCommandException if you give a default value for a PARAMETER_NONE option" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;setDefault() throws an sfCommandException if you give a default value which is not an array for a IS_ARRAY option" file="/mnt/hgfs/www/symfony1/test/unit/command/sfCommandOptionTest.php" line="126" assertions="1"/>
  </testsuite>
  <testsuite name="sfConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;initialize() takes an array of parameters as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="26" assertions="1"/>
    <testcase name="::replaceConstants() replaces constants enclosed in %" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="31" assertions="1"/>
    <testcase name="::replaceConstants() does not replace unknown constants" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="33" assertions="1"/>
    <testcase name="::replaceConstants() replaces constants in arrays recursively" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="43" assertions="1"/>
    <testcase name="::replaceConstants() replaces constants in arrays recursively" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;getParameterHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;replacePath() prefix a relative path with &quot;sf_app_dir&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;replacePath() prefix a relative path with &quot;sf_app_dir&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigHandlerTest.php" line="54" assertions="1"/>
  </testsuite>
  <testsuite name="sfConfigTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="::get() returns the value of key config" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="20" assertions="1"/>
    <testcase name="::get() takes a default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="21" assertions="1"/>
    <testcase name="::has() returns false if the key config does not exist" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="26" assertions="1"/>
    <testcase name="::has() returns true if the key config exists" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="28" assertions="1"/>
    <testcase name="::add() adds an array of config parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="38" assertions="1"/>
    <testcase name="::add() adds an array of config parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="39" assertions="1"/>
    <testcase name="::add() adds an array of config parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="40" assertions="1"/>
    <testcase name="::getAll() returns all config parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="48" assertions="1"/>
    <testcase name="::clear() removes all config parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfConfigTest.php" line="53" assertions="1"/>
  </testsuite>
  <testsuite name="sfDefineEnvironmentConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfDefineEnvironmentConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/config/sfDefineEnvironmentConfigHandlerTest.php" line="33" assertions="1"/>
  </testsuite>
  <testsuite name="sfFilterConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="filters.yml must have a &quot;class&quot; section for each filter entry" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="33" assertions="1"/>
    <testcase name="filters.yml must have a filter of type &quot;execution&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="50" assertions="1"/>
    <testcase name="filters.yml must have a filter of type &quot;rendering&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="50" assertions="1"/>
    <testcase name="filters.yml must keep all filters when inheriting from a master filters configuration file" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="68" assertions="1"/>
    <testcase name="you can disable a filter by settings &quot;enabled&quot; to false" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="77" assertions="1"/>
    <testcase name="you can add a &quot;condition&quot; key to the filter parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="86" assertions="1"/>
    <testcase name="you can add a &quot;condition&quot; key to the filter parameters" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="89" assertions="1"/>
    <testcase name="core filters.yml can be overriden" file="/mnt/hgfs/www/symfony1/test/unit/config/sfFilterConfigHandlerTest.php" line="100" assertions="1"/>
  </testsuite>
  <testsuite name="sfGeneratorConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="generator.yml must have a &quot;class&quot; section" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" line="35" assertions="1"/>
    <testcase name="generator.yml must have a &quot;generator&quot; section" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" line="50" assertions="1"/>
    <testcase name="generator.yml can have a &quot;fields&quot; section but only under &quot;param&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" line="65" assertions="1"/>
    <testcase name="generator.yml can have a &quot;list&quot; section but only under &quot;param&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" line="80" assertions="1"/>
    <testcase name="generator.yml can have a &quot;edit&quot; section but only under &quot;param&quot;" file="/mnt/hgfs/www/symfony1/test/unit/config/sfGeneratorConfigHandlerTest.php" line="95" assertions="1"/>
  </testsuite>
  <testsuite name="sfPluginConfigurationTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="-&gt;guessRootDir() guesses plugin root directory" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;guessName() guesses plugin name" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds all plugin tests" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds functional plugin tests" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds functional plugin tests when a controller is specified" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds functional plugin tests when a nested controller is specified" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds unit plugin tests" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds unit plugin tests when a name is specified" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;filterTestFiles() adds unit plugin tests when a nested name is specified" file="/mnt/hgfs/www/symfony1/test/unit/config/sfPluginConfigurationTest.php" line="76" assertions="1"/>
  </testsuite>
  <testsuite name="sfProjectConfigurationTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" failures="0" errors="0" skipped="0" tests="6" assertions="6">
    <testcase name="-&gt;setPlugins() throws an exception if called too late" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;disablePlugins() throws an exception if called too late" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;enablePlugins() throws an exception if called too late" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;enableAllPluginsExcept() throws an exception if called too late" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;enablePlugins() can enable plugins passed as arguments instead of array" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;__construct() throws an exception if a non-existant plugin is enabled" file="/mnt/hgfs/www/symfony1/test/unit/config/sfProjectConfigurationTest.php" line="71" assertions="1"/>
  </testsuite>
  <testsuite name="sfSimpleYamlConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfSimpleYamlConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;execute() returns configuration file as an array" file="/mnt/hgfs/www/symfony1/test/unit/config/sfSimpleYamlConfigHandlerTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;execute() returns configuration file as an array" file="/mnt/hgfs/www/symfony1/test/unit/config/sfSimpleYamlConfigHandlerTest.php" line="24" assertions="1"/>
  </testsuite>
  <testsuite name="sfViewConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="22" assertions="22">
    <testcase name="addHtmlAsset() adds stylesheets to the response" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="42" assertions="1"/>
    <testcase name="addHtmlAsset() adds stylesheets to the response" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="53" assertions="1"/>
    <testcase name="addHtmlAsset() adds JavaScript to the response" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="64" assertions="1"/>
    <testcase name="addHtmlAsset() adds JavaScript to the response" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="75" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific stylesheets after application-wide assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="93" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific stylesheets after application-wide assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="108" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific stylesheets after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="123" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific stylesheets after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="138" assertions="1"/>
    <testcase name="addHtmlAsset() adds application-specific stylesheets after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="153" assertions="1"/>
    <testcase name="addHtmlAsset() adds application-specific stylesheets after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="168" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific javascripts after application-wide assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="186" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific javascripts after application-wide assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="201" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific javascripts after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="216" assertions="1"/>
    <testcase name="addHtmlAsset() adds view-specific javascripts after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="231" assertions="1"/>
    <testcase name="addHtmlAsset() adds application-specific javascripts after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="246" assertions="1"/>
    <testcase name="addHtmlAsset() adds application-specific javascripts after default assets" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="261" assertions="1"/>
    <testcase name="addHtmlAsset() supports the - option to remove one stylesheet previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="279" assertions="1"/>
    <testcase name="addHtmlAsset() supports the - option to remove one javascript previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="294" assertions="1"/>
    <testcase name="addHtmlAsset() supports the -* option to remove all stylesheets previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="305" assertions="1"/>
    <testcase name="addHtmlAsset() supports the -* option to remove all javascripts previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="316" assertions="1"/>
    <testcase name="addHtmlAsset() supports the -* option to remove all assets previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="330" assertions="1"/>
    <testcase name="addHtmlAsset() supports the -* option to remove all assets previously added" file="/mnt/hgfs/www/symfony1/test/unit/config/sfViewConfigHandlerTest.php" line="351" assertions="1"/>
  </testsuite>
  <testsuite name="sfYamlConfigHandlerTest" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;mergeConfigValue() merges values for a given key under a given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;mergeConfigValue() merges values for a given key under a given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;mergeConfigValue() merges values for a given key under a given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;getConfigValue() returns the value for the key in the given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;getConfigValue() returns the value for the key in the given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;getConfigValue() returns the value for the key in the &quot;all&quot; category if the key does not exist in the given category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;getConfigValue() returns the default value if key is not found in the category and in the &quot;all&quot; category" file="/mnt/hgfs/www/symfony1/test/unit/config/sfYamlConfigHandlerTest.php" line="85" assertions="1"/>
  </testsuite>
  <testsuite name="sfControllerTest" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfControllerTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfWebControllerTest" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" failures="0" errors="0" skipped="0" tests="21" assertions="21">
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?id=12)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?id=12&amp;)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?id=12&amp;test=4&amp;toto=9)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?id=12&amp;test=4&amp;5&amp;6&amp;7&amp;&amp;toto=9)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?test=value1&amp;value2&amp;toto=9)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?test=value1&amp;value2)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?test=value1=value2&amp;toto=9)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?test=value1=value2)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (module/action?test=4&amp;5&amp;6&amp;7&amp;&amp;toto=9&amp;id=)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (@test?test=4)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (@test)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (@test?id=12&amp;foo=bar)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() converts a symfony internal URI to an array of parameters (@test?id=foo%26bar&amp;foo=bar%3Dfoo)" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;convertUrlStringToParameters() throw a sfParseException if it cannot parse the query string" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;redirect() adds a refresh meta in the content" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;redirect() adds a Location HTTP header" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="176" assertions="1"/>
    <testcase name="-&gt;redirect() throw an InvalidArgumentException when the url argument is null" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;redirect() throw an InvalidArgumentException when the url argument is an empty string" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="201" assertions="1"/>
    <testcase name="-&gt;genUrl() accepts a string or an array as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="210" assertions="1"/>
    <testcase name="-&gt;genUrl() accepts an empty string" file="/mnt/hgfs/www/symfony1/test/unit/controller/sfWebControllerTest.php" line="214" assertions="1"/>
  </testsuite>
  <testsuite name="sfDatabaseTest" file="/mnt/hgfs/www/symfony1/test/unit/database/sfDatabaseTest.php" failures="0" errors="0" skipped="0" tests="10" assertions="10">
    <testcase name="-&gt;getParameterHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns false if the parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the default value if parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns true if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the value of the parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getParameter() does not return the default value if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
  </testsuite>
  <testsuite name="sfDebugTest" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfDebugTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="::removeObjects() converts objects to String representations using the class name" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfDebugTest.php" line="19" assertions="1"/>
  </testsuite>
  <testsuite name="sfDebugTest" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfDebugTest.php" failures="0" errors="0" skipped="0" tests="" assertions=""/>
  <testsuite name="sfTimerTest" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" failures="0" errors="0" skipped="0" tests="6" assertions="6">
    <testcase name="-&gt;getCalls() returns the amount of addTime() calls" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;getElapsedTime() returns a value greater than zero. No precision is tested by the unit test to avoid false alarms" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="21" assertions="1"/>
    <testcase name="::getTimer() returns an sfTimer instance" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="26" assertions="1"/>
    <testcase name="::getTimers() returns an array with the timers created by the timer manager" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="28" assertions="1"/>
    <testcase name="::getTimers() returns an array with keys being the timer name" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="29" assertions="1"/>
    <testcase name="::clearTimers() empties the list of the timer instances" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfTimerTest.php" line="31" assertions="1"/>
  </testsuite>
  <testsuite name="sfWebDebugTest" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" failures="0" errors="0" skipped="0" tests="10" assertions="10">
    <testcase name="-&gt;injectToolbar() adds styles" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds javascript" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds the toolbar" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;injectToolbar() does not add styles if there is no head" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;injectToolbar() does not add javascripts if there is no body" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds the toolbar if there is no body" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds styles once" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds javascripts once" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;injectToolbar() adds styles once" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;injectToolbar() leaves inner pages untouched" file="/mnt/hgfs/www/symfony1/test/unit/debug/sfWebDebugTest.php" line="58" assertions="1"/>
  </testsuite>
  <testsuite name="sfOutputEscaperArrayDecoratorTest" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="-&gt;getRaw() returns the raw value" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="34" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="38" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="39" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="40" assertions="1"/>
    <testcase name="The escaped object behaves like an array (isset)" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="42" assertions="1"/>
    <testcase name="The escaped object is read only (unset)" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="52" assertions="1"/>
    <testcase name="The escaped object is read only (set)" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="62" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="72" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="75" assertions="1"/>
    <testcase name="The escaped object behaves like an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;valid() returns true if called before iteration" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperArrayDecoratorTest.php" line="91" assertions="1"/>
  </testsuite>
  <testsuite name="sfOutputEscaperObjectDecoratorTest" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="The escaped object behaves like the real object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="50" assertions="1"/>
    <testcase name="The escaped object behaves like the real object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="53" assertions="1"/>
    <testcase name="The escaped object behaves like the real object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;__toString() is compatible with SimpleXMLElement" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;count() returns 1 if the embedded object does not implement the Countable interface" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;count() returns the count() for the embedded object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;__isset() asks the wrapped object whether a property is set" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;__isset() asks the wrapped object whether a property is set" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperObjectDecoratorTest.php" line="98" assertions="1"/>
  </testsuite>
  <testsuite name="sfOutputEscaperSafeTest" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" failures="0" errors="0" skipped="0" tests="13" assertions="13">
    <testcase name="-&gt;getValue() returns the embedded value" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;__get() returns the object parameter" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;__set() sets the object parameter" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;__call() invokes the embedded method" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;__isset() returns true if the property is not null" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;__isset() returns false if the property is null" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;__isset() returns false if the property does not exist" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;__unset() unsets the embedded property" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="67" assertions="1"/>
    <testcase name="&quot;Iterator&quot; implementation imitates an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="80" assertions="1"/>
    <testcase name="&quot;ArrayAccess&quot; implementation returns a value from the embedded array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="87" assertions="1"/>
    <testcase name="&quot;ArrayAccess&quot; implementation sets a value on the embedded array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="89" assertions="1"/>
    <testcase name="&quot;ArrayAccess&quot; checks if a value is set on the embedded array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="90" assertions="1"/>
    <testcase name="&quot;ArrayAccess&quot; unsets a value on the embedded array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperSafeTest.php" line="92" assertions="1"/>
  </testsuite>
  <testsuite name="sfOutputEscaperTest" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" failures="0" errors="0" skipped="0" tests="39" assertions="39">
    <testcase name="::escape() returns null if the value to escape is null" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="50" assertions="1"/>
    <testcase name="::escape() returns false if the value to escape is false" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="51" assertions="1"/>
    <testcase name="::escape() returns true if the value to escape is true" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="52" assertions="1"/>
    <testcase name="::escape() takes an escaping strategy function name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="55" assertions="1"/>
    <testcase name="::escape() returns an escaped string if the value to escape is a string" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="58" assertions="1"/>
    <testcase name="::escape() returns an escaped string if the value to escape is a string" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="59" assertions="1"/>
    <testcase name="::escape() returns a sfOutputEscaperArrayDecorator object if the value to escape is an array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="67" assertions="1"/>
    <testcase name="::escape() escapes all elements of the original array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="68" assertions="1"/>
    <testcase name="::escape() is recursive" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;getRawValue() returns the unescaped value" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="70" assertions="1"/>
    <testcase name="::escape() returns a sfOutputEscaperObjectDecorator object if the value to escape is an object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="75" assertions="1"/>
    <testcase name="::escape() escapes all methods of the original object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="76" assertions="1"/>
    <testcase name="::escape() escapes all properties of the original object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="77" assertions="1"/>
    <testcase name="::escape() is recursive" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getRawValue() returns the unescaped value" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="79" assertions="1"/>
    <testcase name="::escape() does not double escape an object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="81" assertions="1"/>
    <testcase name="::escape() returns a sfOutputEscaperIteratorDecorator object if the value to escape is an object that implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="82" assertions="1"/>
    <testcase name="::escape() returns the original value if it is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="85" assertions="1"/>
    <testcase name="::escape() returns the original value if the object class is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="88" assertions="1"/>
    <testcase name="::escape() returns the original value if one of the object parent class is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="89" assertions="1"/>
    <testcase name="::escape() throws an InvalidArgumentException if the value cannot be escaped" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="100" assertions="1"/>
    <testcase name="::unescape() returns null if the value to unescape is null" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="106" assertions="1"/>
    <testcase name="::unescape() returns false if the value to unescape is false" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="107" assertions="1"/>
    <testcase name="::unescape() returns true if the value to unescape is true" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="108" assertions="1"/>
    <testcase name="::unescape() returns an unescaped string if the value to unescape is a string" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="111" assertions="1"/>
    <testcase name="::unescape() returns an unescaped string if the value to unescape is a string" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="112" assertions="1"/>
    <testcase name="::unescape() returns an array if the input is a sfOutputEscaperArrayDecorator object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="120" assertions="1"/>
    <testcase name="::unescape() unescapes all elements of the original array" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="121" assertions="1"/>
    <testcase name="::unescape() is recursive" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="122" assertions="1"/>
    <testcase name="::unescape() returns the original object when a sfOutputEscaperObjectDecorator object is passed" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="128" assertions="1"/>
    <testcase name="::unescape() unescapes all methods of the original object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="129" assertions="1"/>
    <testcase name="::unescape() unescapes all properties of the original object" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="130" assertions="1"/>
    <testcase name="::unescape() is recursive" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="131" assertions="1"/>
    <testcase name="::unescape() unescapes sfOutputEscaperIteratorDecorator objects" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="133" assertions="1"/>
    <testcase name="::unescape() returns the original value if it is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="136" assertions="1"/>
    <testcase name="::unescape() returns the original value if the object class is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="139" assertions="1"/>
    <testcase name="::unescape() returns the original value if one of the object parent class is marked as being safe" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="140" assertions="1"/>
    <testcase name="::unescape() do nothing to resources" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="144" assertions="1"/>
    <testcase name="::unescape() unescapes values with some escaped and unescaped values" file="/mnt/hgfs/www/symfony1/test/unit/escaper/sfOutputEscaperTest.php" line="158" assertions="1"/>
  </testsuite>
  <testsuite name="sfExceptionsTest" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" failures="0" errors="0" skipped="0" tests="24" assertions="24">
    <testcase name="&quot;sfCacheException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfConfigurationException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfControllerException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfDatabaseException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfError404Exception&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfFactoryException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfFileException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfFilterException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfForwardException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfInitializationException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfParseException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfRenderException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfSecurityException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfStopException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfStorageException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="&quot;sfViewException&quot; inherits from sfException" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="23" assertions="1"/>
    <testcase name="formatArgs() can format a single argument" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="36" assertions="1"/>
    <testcase name="formatArgs() can format an array of arguments" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="37" assertions="1"/>
    <testcase name="formatArgs() can format an objet instance" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="38" assertions="1"/>
    <testcase name="formatArgs() can format a null" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="39" assertions="1"/>
    <testcase name="formatArgs() can format an integer" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="40" assertions="1"/>
    <testcase name="formatArgs() can format a nested array" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="41" assertions="1"/>
    <testcase name="formatArgs() escapes strings" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="43" assertions="1"/>
    <testcase name="formatArgs() escapes strings for keys and values in arrays" file="/mnt/hgfs/www/symfony1/test/unit/exception/sfExceptionsTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="sfFilterTest" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" failures="0" errors="0" skipped="0" tests="17" assertions="17">
    <testcase name="-&gt;initialize() takes a sfContext object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of parameters as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;getContext() returns the current context" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;isFirstCall() returns true if this is the first call with this argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;isFirstCall() returns false if this is not the first call with this argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;isFirstCall() returns false if this is not the first call with this argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;isFirstCall() returns false if this is not the first call with this argument" file="/mnt/hgfs/www/symfony1/test/unit/filter/sfFilterTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getParameterHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns false if the parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the default value if parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns true if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the value of the parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getParameter() does not return the default value if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
  </testsuite>
  <testsuite name="sfFormSymfonyTest" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;__construct() notifies one event" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;__construct() notifies the &quot;form.post_configure&quot; event" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;bind() notifies one event when validation is successful" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;bind() notifies the &quot;form.filter_values&quot; event" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;bind() filters the tainted values" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;bind() notifies two events when validation fails" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;bind() notifies the &quot;form.validation_error&quot; event" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;bind() notifies the error schema" file="/mnt/hgfs/www/symfony1/test/unit/form/addon/sfFormSymfonyTest.php" line="85" assertions="1"/>
  </testsuite>
  <testsuite name="sfFormFieldSchemaTest" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="sfFormField implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="41" assertions="1"/>
    <testcase name="sfFormField implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="42" assertions="1"/>
    <testcase name="sfFormField implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="43" assertions="1"/>
    <testcase name="sfFormField implements the ArrayAccess interface but in read-only mode" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="51" assertions="1"/>
    <testcase name="sfFormField implements the ArrayAccess interface but in read-only mode" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="61" assertions="1"/>
    <testcase name="sfFormField implements the ArrayAccess interface but in read-only mode" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="71" assertions="1"/>
    <testcase name="sfFormFieldSchema implements the Countable interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="81" assertions="1"/>
    <testcase name="sfFormFieldSchema implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="92" assertions="1"/>
    <testcase name="sfFormFieldSchema implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="93" assertions="1"/>
    <testcase name="sfFormFieldSchema implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="94" assertions="1"/>
    <testcase name="sfFormFieldSchema keeps the order" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldSchemaTest.php" line="105" assertions="1"/>
  </testsuite>
  <testsuite name="sfFormFieldTest" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" failures="0" errors="0" skipped="0" tests="31" assertions="31">
    <testcase name="-&gt;getWidget() returns the form field widget" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;getName() returns the form field name" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;getValue() returns the form field value" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;getParent() returns the form field parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;getError() returns the form field error" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;hasError() returns true if the form field has some error" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;hasError() returns false if the form field has no error" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="54" assertions="1"/>
    <testcase name="__toString() renders the form field with default HTML attributes" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;render() renders the form field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;renderRow() renders a row" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;renderRow() can take an array of HTML attributes as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;renderRow() can take a label name as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;renderRow() can take a help message as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;renderRow() renders a row when the widget has a parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;renderRow() throws an LogicException if the form field has no parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="137" assertions="1"/>
    <testcase name="-&gt;renderLabel() renders the label as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="142" assertions="1"/>
    <testcase name="-&gt;renderLabel() renders optional HTML attributes" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;renderLabel() throws an LogicException if the form field has no parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;renderLabelName() renders the label name" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;renderLabelName() throws an LogicException if the form field has no parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;renderName() renders the name attribute of the field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="169" assertions="1"/>
    <testcase name="-&gt;renderName() renders the name attribute of the field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="170" assertions="1"/>
    <testcase name="-&gt;renderId() renders the id attribute of the field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;renderId() renders the id attribute of the field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;isHidden() is a proxy method to the isHidden() method of the widget" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;renderError() renders errors as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="189" assertions="1"/>
    <testcase name="-&gt;renderRow() renders errors as HTML when the widget has a parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="190" assertions="1"/>
    <testcase name="-&gt;renderRow() renders errors as HTML when the widget has a parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="197" assertions="1"/>
    <testcase name="-&gt;renderError() throws an LogicException if the form field has no parent" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="206" assertions="1"/>
    <testcase name="-&gt;renderError() renders global errors as expected (global errors, hidden field errors, non existent field errors)" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="228" assertions="1"/>
    <testcase name="-&gt;render() uses the parent id format" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormFieldTest.php" line="233" assertions="1"/>
  </testsuite>
  <testsuite name="sfFormTest" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" failures="0" errors="0" skipped="0" tests="165" assertions="165">
    <testcase name="__construct() creates an empty validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="115" assertions="1"/>
    <testcase name="__construct() creates an empty widget form schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="116" assertions="1"/>
    <testcase name="__construct() can take an array of default values as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="119" assertions="1"/>
    <testcase name="__construct() takes a CSRF secret as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="123" assertions="1"/>
    <testcase name="__construct() takes a CSRF secret as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="124" assertions="1"/>
    <testcase name="__construct() can disable the CSRF protection by passing false as the second argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="128" assertions="1"/>
    <testcase name="__construct() uses CSRF protection if null is passed as the second argument and it's enabled globally" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="131" assertions="1"/>
    <testcase name="__construct takes an option array as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="136" assertions="1"/>
    <testcase name="-&gt;setOption() changes the value of an option" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;getOptions() returns all options" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="139" assertions="1"/>
    <testcase name="setDefaults() sets the form default values" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="147" assertions="1"/>
    <testcase name="setDefault() sets a default value" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="149" assertions="1"/>
    <testcase name="hasDefault() returns true if the form has a default value for the given field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="150" assertions="1"/>
    <testcase name="hasDefault() returns false if the form does not have a default value for the given field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="151" assertions="1"/>
    <testcase name="getDefault() returns a default value for a given field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="152" assertions="1"/>
    <testcase name="getDefault() returns null if the form does not have a default value for a given field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;getDefaults() keeps the CSRF token default value" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;setDefaults() does not set the CSRF token if CSRF is disabled" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;getName() returns false if the name format is not an array" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="170" assertions="1"/>
    <testcase name="-&gt;getName() returns false if the name format is not an array" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="172" assertions="1"/>
    <testcase name="-&gt;getName() returns the name under which user data can be retrieved" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="174" assertions="1"/>
    <testcase name="::enableCSRFProtection() enabled CSRF protection for all future forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="180" assertions="1"/>
    <testcase name="::disableCSRFProtection() disables CSRF protection for all future forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="183" assertions="1"/>
    <testcase name="::enableCSRFProtection() enabled CSRF protection for all future forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="184" assertions="1"/>
    <testcase name="::disableCSRFProtection() disables CSRF protection for all future forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;isCSRFProtected() returns true if the form is CSRF protected" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="189" assertions="1"/>
    <testcase name="::enableCSRFProtection() can take a secret argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="194" assertions="1"/>
    <testcase name="-&gt;disableLocalCSRFProtection() disabled CSRF protection for the current form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="200" assertions="1"/>
    <testcase name="-&gt;disableLocalCSRFProtection() disabled CSRF protection for the current form, even if the global CSRF protection is enabled" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="202" assertions="1"/>
    <testcase name="-&gt;disableLocalCSRFProtection() disabled CSRF protection for the current form, even a CSRF secret is provided in the constructor" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="204" assertions="1"/>
    <testcase name="-&gt;enableLocalCSRFProtection() enables CSRF protection when passed null and global CSRF is disabled" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;enableLocalCSRFProtection() enables CSRF protection when passed a string global CSRF is disabled" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="209" assertions="1"/>
    <testcase name="::setCSRFFieldName() changes the CSRF token field name" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="217" assertions="1"/>
    <testcase name="::getCSRFFieldName() returns the CSRF token field name" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="218" assertions="1"/>
    <testcase name="-&gt;isMultipart() returns false if the form does not need a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="223" assertions="1"/>
    <testcase name="-&gt;isMultipart() returns true if the form needs a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;setValidatorSchema() sets the current validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="236" assertions="1"/>
    <testcase name="-&gt;setValidators() sets field validators" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="239" assertions="1"/>
    <testcase name="-&gt;setValidators() sets field validators" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="240" assertions="1"/>
    <testcase name="-&gt;setValidator() sets a validator for a field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;setWidgetSchema() sets the current widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="253" assertions="1"/>
    <testcase name="-&gt;setWidgets() sets field widgets" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="257" assertions="1"/>
    <testcase name="-&gt;setWidgets() sets field widgets" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="258" assertions="1"/>
    <testcase name="-&gt;setWidget() sets a widget for a field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="261" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="280" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="281" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation does not permit to set a form field" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="290" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="292" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="294" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes form defaults" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="295" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes the widget and the validator" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="297" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes the widget and the validator" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="299" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation throws a LogicException if the form field does not exist" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="307" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="311" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes bound values" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="318" assertions="1"/>
    <testcase name="&quot;sfForm&quot; ArrayAccess implementation removes tainted values" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="320" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the Countable interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="330" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="344" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="345" assertions="1"/>
    <testcase name="&quot;sfForm&quot; implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="346" assertions="1"/>
    <testcase name="-&gt;useFields() removes all fields except the ones given as an argument" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="357" assertions="1"/>
    <testcase name="-&gt;useFields() reorders the fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="364" assertions="1"/>
    <testcase name="-&gt;useFields() does not reorder the fields if the second argument is false" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="371" assertions="1"/>
    <testcase name="-&gt;useFields() does not remove hidden fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="379" assertions="1"/>
    <testcase name="-&gt;isBound() returns false if the form is not bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="388" assertions="1"/>
    <testcase name="-&gt;getValues() returns an empty array if the form is not bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="389" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the form is not bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="390" assertions="1"/>
    <testcase name="-&gt;hasErrors() returns false if the form is not bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="391" assertions="1"/>
    <testcase name="-&gt;getValue() returns null if the form is not bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="393" assertions="1"/>
    <testcase name="-&gt;isBound() returns true if the form is bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="395" assertions="1"/>
    <testcase name="-&gt;getValues() returns an array of cleaned values if the form is bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="396" assertions="1"/>
    <testcase name="-&gt;isValid() returns true if the form passes the validation" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="397" assertions="1"/>
    <testcase name="-&gt;hasErrors() returns false if the form passes the validation" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="398" assertions="1"/>
    <testcase name="-&gt;getValue() returns the cleaned value for a field name if the form is bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="399" assertions="1"/>
    <testcase name="-&gt;getValue() returns null when non-existant param is requested" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="400" assertions="1"/>
    <testcase name="-&gt;isValid() returns false if the form does not pass the validation" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="403" assertions="1"/>
    <testcase name="-&gt;isValid() returns true if the form does not pass the validation" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="404" assertions="1"/>
    <testcase name="-&gt;getValues() returns an empty array if the form does not pass the validation" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="405" assertions="1"/>
    <testcase name="-&gt;getErrorSchema() returns an error schema object with all errors" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="406" assertions="1"/>
    <testcase name="-&gt;bind() behaves correctly when field names are numeric" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="415" assertions="1"/>
    <testcase name="-&gt;bind() behaves correctly with files" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="428" assertions="1"/>
    <testcase name="-&gt;bind() second argument is mandatory if the form is multipart" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="437" assertions="1"/>
    <testcase name="-&gt;bind() behaves correctly with files in embed form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="456" assertions="1"/>
    <testcase name="-&gt;renderGlobalErrors() renders global errors as an HTML list" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="483" assertions="1"/>
    <testcase name="-&gt;__toString() renders the form as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="511" assertions="1"/>
    <testcase name="-&gt;render() renders the form as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="523" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="524" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="525" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="526" assertions="1"/>
    <testcase name="-&gt;__toString() renders the form as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="545" assertions="1"/>
    <testcase name="-&gt;render() renders the form as HTML" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="557" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="558" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="559" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns a sfFormField" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="560" assertions="1"/>
    <testcase name="renderUsing() renders the widget schema using the given form formatter" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="573" assertions="1"/>
    <testcase name="renderUsing() does not persist form formatter name for the current form instance" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="574" assertions="1"/>
    <testcase name="renderUsing() renders a custom form formatter" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="578" assertions="1"/>
    <testcase name="renderUsing() throws an exception if formatter name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="587" assertions="1"/>
    <testcase name="renderHiddenFields() renders all hidden fields, no visible fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="599" assertions="1"/>
    <testcase name="renderHiddenFields() does not modify the form fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="600" assertions="1"/>
    <testcase name="renderHiddenFields() renders hidden fields from embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="611" assertions="1"/>
    <testcase name="renderHiddenFields() does not render hidden fields from embedded forms if the first parameter is &quot;false&quot;" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="614" assertions="1"/>
    <testcase name="-&gt;embedForm() embeds the validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="639" assertions="1"/>
    <testcase name="-&gt;embedForm() embeds the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="642" assertions="1"/>
    <testcase name="-&gt;embedForm() merges default values from the embedded form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="643" assertions="1"/>
    <testcase name="-&gt;embedForm() removes the CSRF token for the embedded form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="644" assertions="1"/>
    <testcase name="-&gt;embedForm() removes the CSRF token for the embedded form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="645" assertions="1"/>
    <testcase name="-&gt;embedForm() changes the name format to reflect the embedding" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="647" assertions="1"/>
    <testcase name="-&gt;embedForm() changes the name format to reflect the embedding" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="648" assertions="1"/>
    <testcase name="-&gt;embedForm() generates a correct id in embedded form fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="654" assertions="1"/>
    <testcase name="-&gt;embedForm() generates a correct label id correctly in embedded form fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="655" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() embeds the validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="667" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() embeds the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="670" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() merges default values from the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="671" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() removes the CSRF token for the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="672" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() removes the CSRF token for the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="673" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() embeds the validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="667" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() embeds the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="670" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() merges default values from the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="671" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() removes the CSRF token for the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="672" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() removes the CSRF token for the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="673" assertions="1"/>
    <testcase name="-&gt;embedFormForEach() changes the name format to reflect the embedding" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="676" assertions="1"/>
    <testcase name="&quot;sfFormFieldSchema&quot; is given an error schema when an extra embedded form is bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="693" assertions="1"/>
    <testcase name="&quot;sfFormFieldSchema&quot; renders when an extra embedded form is bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="697" assertions="1"/>
    <testcase name="-&gt;getEmbeddedForms() returns the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="707" assertions="1"/>
    <testcase name="-&gt;getEmbeddedForms() returns the embedded forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="708" assertions="1"/>
    <testcase name="-&gt;getEmbeddedForm() return an embedded form" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="709" assertions="1"/>
    <testcase name="-&gt;getEmbeddedForm() throws an exception if the embedded form does not exist" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="717" assertions="1"/>
    <testcase name="::convertFileInformation() converts $_FILES to be coherent with $_GET and $_POST naming convention" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="738" assertions="1"/>
    <testcase name="::convertFileInformation() converts $_FILES to be coherent with $_GET and $_POST naming convention" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="782" assertions="1"/>
    <testcase name="::convertFileInformation() only changes the input array if needed" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="783" assertions="1"/>
    <testcase name="::convertFileInformation() converts $_FILES to be coherent with $_GET and $_POST naming convention" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="855" assertions="1"/>
    <testcase name="::convertFileInformation() converts $_FILES to be coherent with $_GET and $_POST naming convention" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="856" assertions="1"/>
    <testcase name="-&gt;renderFormTag() renders the form tag" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="861" assertions="1"/>
    <testcase name="-&gt;renderFormTag() adds a hidden input tag if the method is not GET or POST" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="862" assertions="1"/>
    <testcase name="-&gt;renderFormTag() adds the enctype attribute if the form is multipart" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="864" assertions="1"/>
    <testcase name="__clone() clones the validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="875" assertions="1"/>
    <testcase name="__clone() clones the validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="876" assertions="1"/>
    <testcase name="__clone() clones the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="878" assertions="1"/>
    <testcase name="__clone() clones the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="879" assertions="1"/>
    <testcase name="__clone() clones the error schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="881" assertions="1"/>
    <testcase name="__clone() clones the error schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="882" assertions="1"/>
    <testcase name="mergeForm() merges a widget form schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="893" assertions="1"/>
    <testcase name="mergeForm() merges a validator schema" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="894" assertions="1"/>
    <testcase name="mergeForms() merges the correct widgets" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="895" assertions="1"/>
    <testcase name="mergeForms() merges the correct validators" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="896" assertions="1"/>
    <testcase name="mergeForm() merges labels correctly" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="897" assertions="1"/>
    <testcase name="mergeForm() merges helps correctly" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="898" assertions="1"/>
    <testcase name="mergeForm() overrides original form widget" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="899" assertions="1"/>
    <testcase name="mergeForm() overrides original form validator" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="900" assertions="1"/>
    <testcase name="mergeForm() merges pre validator" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="901" assertions="1"/>
    <testcase name="mergeForm() merges post validator" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="902" assertions="1"/>
    <testcase name="mergeForm() disallows merging already bound forms" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="912" assertions="1"/>
    <testcase name="mergeForm() merges errors after having been bound" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="916" assertions="1"/>
    <testcase name="iterating on form takes in account -&gt;moveField() operations." file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="924" assertions="1"/>
    <testcase name="mergeForm() merges fields in the correct order" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="931" assertions="1"/>
    <testcase name="-&gt;mergeForm() merges numeric defaults" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="937" assertions="1"/>
    <testcase name="-&gt;mergeForm() merges numeric labels" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="938" assertions="1"/>
    <testcase name="-&gt;mergeForm() merges numeric helps" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="939" assertions="1"/>
    <testcase name="-&gt;getJavaScripts() returns the stylesheets of all widgets" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="972" assertions="1"/>
    <testcase name="-&gt;getStylesheets() returns the JavaScripts of all widgets" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="973" assertions="1"/>
    <testcase name="-&gt;getFormFieldSchema() includes default numeric fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="979" assertions="1"/>
    <testcase name="-&gt;getFormFieldSchema() includes bound numeric fields" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="981" assertions="1"/>
    <testcase name="Cannot fake a file upload with a POST" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="1000" assertions="1"/>
    <testcase name="Cannot fake a file upload with a POST" file="/mnt/hgfs/www/symfony1/test/unit/form/sfFormTest.php" line="1023" assertions="1"/>
  </testsuite>
  <testsuite name="sfGeneratorTest" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfGeneratorTest.php" failures="0" errors="0" skipped="0" tests="0" assertions="0"/>
  <testsuite name="sfModelGeneratorConfigurationFieldTest" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" failures="0" errors="0" skipped="0" tests="12" assertions="12">
    <testcase name="-&gt;isPartial() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;isComponent() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;isLink() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;isPartial() returns true if flag is &quot;_&quot;" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;isComponent() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;isLink() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;isPartial() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;isComponent() returns true if flag is &quot;~&quot;" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;isLink() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;isPartial() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;isComponent() defaults to false" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;isLink() returns true if flag is &quot;=&quot;" file="/mnt/hgfs/www/symfony1/test/unit/generator/sfModelGeneratorConfigurationFieldTest.php" line="36" assertions="1"/>
  </testsuite>
  <testsuite name="AssetHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" failures="0" errors="0" skipped="0" tests="68" assertions="68">
    <testcase name="_compute_public_path() converts a string to a web path" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="61" assertions="1"/>
    <testcase name="_compute_public_path() can create absolute links" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="62" assertions="1"/>
    <testcase name="_compute_public_path() does not add suffix if one already exists" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="63" assertions="1"/>
    <testcase name="_compute_public_path() takes into account the relative url root configuration" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="65" assertions="1"/>
    <testcase name="_compute_public_path() takes into account query strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="67" assertions="1"/>
    <testcase name="_compute_public_path() takes into account query strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="68" assertions="1"/>
    <testcase name="image_tag() returns nothing when called without arguments" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="72" assertions="1"/>
    <testcase name="image_tag() takes an image name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="73" assertions="1"/>
    <testcase name="image_tag() can take an image name with an extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="74" assertions="1"/>
    <testcase name="image_tag() can take an absolute image path" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="75" assertions="1"/>
    <testcase name="image_tag() can take an absolute image path without extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="76" assertions="1"/>
    <testcase name="image_tag() can take an image name with an extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="77" assertions="1"/>
    <testcase name="image_tag() takes an array of options as its second argument to override alt" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="78" assertions="1"/>
    <testcase name="image_tag() takes a size option" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="79" assertions="1"/>
    <testcase name="image_tag() can take an absolute parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="80" assertions="1"/>
    <testcase name="image_tag() takes whatever option you want" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="81" assertions="1"/>
    <testcase name="image_tag() takes an array of options as its second argument to create alt and title" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="82" assertions="1"/>
    <testcase name="image_tag() takes an array of options as its second argument to create alt and title" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="83" assertions="1"/>
    <testcase name="stylesheet_tag() takes a stylesheet name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="89" assertions="1"/>
    <testcase name="stylesheet_tag() can takes n stylesheet names as its arguments" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="93" assertions="1"/>
    <testcase name="stylesheet_tag() can take a media option" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="96" assertions="1"/>
    <testcase name="stylesheet_tag() can take an absolute option to output an absolute file name" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="99" assertions="1"/>
    <testcase name="stylesheet_tag() can take a raw_name option to bypass file name decoration" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="102" assertions="1"/>
    <testcase name="stylesheet_tag() can take a condition option" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="105" assertions="1"/>
    <testcase name="javascript_include_tag() takes a javascript name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="111" assertions="1"/>
    <testcase name="javascript_include_tag() can takes n javascript file names as its arguments" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="115" assertions="1"/>
    <testcase name="javascript_include_tag() can take an absolute option to output an absolute file name" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="118" assertions="1"/>
    <testcase name="javascript_include_tag() can take a raw_name option to bypass file name decoration" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="121" assertions="1"/>
    <testcase name="javascript_include_tag() can take additional html options like defer" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="124" assertions="1"/>
    <testcase name="javascript_include_tag() can take a condition option" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="127" assertions="1"/>
    <testcase name="javascript_path() decorates a relative filename with js dir name and extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="131" assertions="1"/>
    <testcase name="javascript_path() does not decorate absolute file names with js dir name" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="132" assertions="1"/>
    <testcase name="javascript_path() does not decorate file names with extension with .js" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="133" assertions="1"/>
    <testcase name="javascript_path() accepts a second parameter to output an absolute resource path" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="134" assertions="1"/>
    <testcase name="stylesheet_path() decorates a relative filename with css dir name and extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="138" assertions="1"/>
    <testcase name="stylesheet_path() does not decorate absolute file names with css dir name" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="139" assertions="1"/>
    <testcase name="stylesheet_path() does not decorate file names with extension with .css" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="140" assertions="1"/>
    <testcase name="stylesheet_path() accepts a second parameter to output an absolute resource path" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="141" assertions="1"/>
    <testcase name="image_path() decorates a relative filename with images dir name and png extension" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="145" assertions="1"/>
    <testcase name="image_path() does not decorate absolute file names with images dir name" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="146" assertions="1"/>
    <testcase name="image_path() does not decorate file names with extension with .png" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="147" assertions="1"/>
    <testcase name="image_path() accepts a second parameter to output an absolute resource path" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="148" assertions="1"/>
    <testcase name="get_javascripts() returns a javascript previously added by use_javascript()" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="155" assertions="1"/>
    <testcase name="use_javascript() accepts an array of options as a third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="159" assertions="1"/>
    <testcase name="use_javascript() accepts an array of options as a third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="163" assertions="1"/>
    <testcase name="get_javascripts() returns all the javascripts previously added by use_javascript()" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="168" assertions="1"/>
    <testcase name="get_stylesheets() returns a stylesheet previously added by use_stylesheet()" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="175" assertions="1"/>
    <testcase name="use_stylesheet() accepts an array of options as a third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="179" assertions="1"/>
    <testcase name="use_stylesheet() accepts an array of options as a third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="183" assertions="1"/>
    <testcase name="get_stylesheets() returns all the stylesheets previously added by use_stylesheet()" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="188" assertions="1"/>
    <testcase name="_dynamic_path() converts an internal URI to a URL" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="192" assertions="1"/>
    <testcase name="_dynamic_path() converts an internal URI to a URL" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="193" assertions="1"/>
    <testcase name="_dynamic_path() converts an internal URI to a URL" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="194" assertions="1"/>
    <testcase name="dynamic_javascript_include_tag() returns a tag relative to the given action" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="198" assertions="1"/>
    <testcase name="dynamic_javascript_include_tag() takes an absolute boolean as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="199" assertions="1"/>
    <testcase name="dynamic_javascript_include_tag() takes an array of HTML attributes as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="200" assertions="1"/>
    <testcase name="use_dynamic_javascript() register a dynamic javascript in the response" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="210" assertions="1"/>
    <testcase name="use_dynamic_stylesheet() register a dynamic stylesheet in the response" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="218" assertions="1"/>
    <testcase name="get_javascripts_for_form() returns script tags" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="241" assertions="1"/>
    <testcase name="get_stylesheets_for_form() returns link tags" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="247" assertions="1"/>
    <testcase name="use_stylesheets_for_form() adds stylesheets to the response" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="257" assertions="1"/>
    <testcase name="use_javascripts_for_form() adds javascripts to the response" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="261" assertions="1"/>
    <testcase name="javascript_path() decorates a relative filename with js dir name and extension with custom js dir" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="267" assertions="1"/>
    <testcase name="javascript_include_tag() takes a javascript name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="270" assertions="1"/>
    <testcase name="stylesheet_path() decorates a relative filename with css dir name and extension with custom css dir" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="273" assertions="1"/>
    <testcase name="stylesheet_tag() takes a stylesheet name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="276" assertions="1"/>
    <testcase name="image_path() decorates a relative filename with images dir name and png extension with custom images dir" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="279" assertions="1"/>
    <testcase name="image_tag() takes an image name as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/AssetHelperTest.php" line="280" assertions="1"/>
  </testsuite>
  <testsuite name="DateHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" failures="0" errors="0" skipped="0" tests="592" assertions="592">
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="41" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="42" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="43" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="44" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="45" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="46" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="48" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="49" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="50" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="51" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="52" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="53" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="55" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="56" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="58" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="59" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="61" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="62" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="63" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="65" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="66" assertions="1"/>
    <testcase name="distance_of_time_in_words() format a distance of time in words!" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="67" assertions="1"/>
    <testcase name="format_date() format a numerical date according to the user culture" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="72" assertions="1"/>
    <testcase name="format_date() format a string date according to the user culture" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="73" assertions="1"/>
    <testcase name="format_date() format a string date with two digit year according to the user culture" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="74" assertions="1"/>
    <testcase name="format_date() formats pre-epoch dates" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="75" assertions="1"/>
    <testcase name="format_date() takes a format string as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="78" assertions="1"/>
    <testcase name="format_date() takes a culture as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="81" assertions="1"/>
    <testcase name="format_datetime() format a numerical date time according to the user culture" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="86" assertions="1"/>
    <testcase name="format_datetime() format a string date time according to the user culture" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="87" assertions="1"/>
    <testcase name="formats timestamps correctly" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="88" assertions="1"/>
    <testcase name="pre-epoch date from en_US to iso" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="92" assertions="1"/>
    <testcase name="pre-epoch date-time from en_US to iso with getInputPattern()" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="93" assertions="1"/>
    <testcase name="format two digit year from fr to iso" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="95" assertions="1"/>
    <testcase name="&quot;af&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;af&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;af_NA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;af_NA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;af_ZA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;af_ZA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;am&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;am&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;am_ET&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;am_ET&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_AE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_AE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_BH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_BH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_DZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_DZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_EG&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_EG&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_IQ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_IQ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_JO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_JO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_KW&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_KW&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_LB&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_LB&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_LY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_LY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_MA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_MA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_OM&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_OM&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_QA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_QA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_SA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_SA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_SD&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_SD&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_SY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_SY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_TN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_TN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ar_YE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ar_YE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;as&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;as&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;as_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;as_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;az&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;az&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;az_AZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;az_AZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;be&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;be&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;be_BY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;be_BY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bg&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bg&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bg_BG&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bg_BG&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bn&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bn&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bn_BD&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bn_BD&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bn_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bn_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bo&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bo&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bo_CN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bo_CN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;bo_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;bo_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ca&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ca&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ca_ES&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ca_ES&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;cs&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;cs&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;cs_CZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;cs_CZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;cy&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;cy&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;cy_GB&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;cy_GB&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;da&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;da&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;da_DK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;da_DK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_AT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_AT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_BE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_BE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_CH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_CH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_DE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_DE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_LI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_LI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;de_LU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;de_LU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;el&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;el&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;el_CY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;el_CY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;el_GR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;el_GR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_AU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_AU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_BE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_BE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_BW&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_BW&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_BZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_BZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_CA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_CA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_GB&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_GB&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_HK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_HK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_IE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_IE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_JM&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_JM&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_MH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_MH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_MT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_MT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_NA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_NA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_NZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_NZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_PH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_PH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_PK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_PK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_RH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_RH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_SG&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_SG&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_TT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_TT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_US&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_US&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_US_POSIX&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_US_POSIX&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_VI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_VI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_ZA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_ZA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;en_ZW&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;en_ZW&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;eo&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;eo&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_AR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_AR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_BO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_BO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_CL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_CL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_CO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_CO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_CR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_CR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_DO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_DO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_EC&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_EC&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_ES&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_ES&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_GT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_GT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_HN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_HN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_MX&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_MX&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_NI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_NI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_PA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_PA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_PE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_PE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_PR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_PR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_PY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_PY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_SV&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_SV&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_US&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_US&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_UY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_UY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;es_VE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;es_VE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;et&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;et&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;et_EE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;et_EE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;eu&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;eu&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;eu_ES&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;eu_ES&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fa&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fa&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fa_AF&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fa_AF&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fa_IR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fa_IR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fi&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fi&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fi_FI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fi_FI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fo&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fo&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fo_FO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fo_FO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_BE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_BE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_CA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_CA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_CH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_CH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_FR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_FR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_LU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_LU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_MC&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_MC&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;fr_SN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;fr_SN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ga&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ga&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ga_IE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ga_IE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gl&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gl&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gl_ES&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gl_ES&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gu&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gu&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gu_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gu_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gv&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gv&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;gv_GB&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;gv_GB&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ha&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ha&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ha_GH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ha_GH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ha_NE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ha_NE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ha_NG&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ha_NG&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;he&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;he&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;he_IL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;he_IL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hi&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hi&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hi_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hi_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hr&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hr&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hr_HR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hr_HR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hu&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hu&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hu_HU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hu_HU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hy&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hy&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;hy_AM&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;hy_AM&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;id&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;id&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;id_ID&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;id_ID&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ii&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ii&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ii_CN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ii_CN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;in&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;in&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;in_ID&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;in_ID&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;is&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;is&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;is_IS&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;is_IS&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;it&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;it&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;it_CH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;it_CH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;it_IT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;it_IT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;iw&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;iw&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;iw_IL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;iw_IL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ja&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ja&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ja_JP&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ja_JP&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ka&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ka&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ka_GE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ka_GE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kk&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kk&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kk_KZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kk_KZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kl&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kl&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kl_GL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kl_GL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;km&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;km&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;km_KH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;km_KH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kn&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kn&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kn_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kn_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ko&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ko&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ko_KR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ko_KR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kw&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kw&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;kw_GB&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;kw_GB&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;lt&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;lt&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;lt_LT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;lt_LT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;lv&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;lv&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;lv_LV&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;lv_LV&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mk&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mk&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mk_MK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mk_MK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ml&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ml&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ml_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ml_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mr&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mr&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mr_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mr_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ms&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ms&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ms_BN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ms_BN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ms_MY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ms_MY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mt&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mt&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;mt_MT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;mt_MT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nb&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nb&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nb_NO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nb_NO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ne&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ne&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ne_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ne_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ne_NP&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ne_NP&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nl&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nl&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nl_BE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nl_BE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nl_NL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nl_NL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nn&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nn&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;nn_NO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;nn_NO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;no&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;no&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;no_NO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;no_NO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;no_NO_NY&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;no_NO_NY&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;om&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;om&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;om_ET&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;om_ET&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;om_KE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;om_KE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;or&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;or&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;or_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;or_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pa&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pa&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pa_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pa_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pa_PK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pa_PK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pl&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pl&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pl_PL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pl_PL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ps&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ps&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ps_AF&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ps_AF&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pt&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pt&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pt_BR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pt_BR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;pt_PT&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;pt_PT&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ro&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ro&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ro_MD&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ro_MD&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ro_RO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ro_RO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ru&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ru&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ru_RU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ru_RU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ru_UA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ru_UA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sh&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sh&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sh_BA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sh_BA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sh_CS&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sh_CS&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sh_YU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sh_YU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;si&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;si&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;si_LK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;si_LK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sk&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sk&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sk_SK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sk_SK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sl&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sl&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sl_SI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sl_SI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;so&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;so&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;so_DJ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;so_DJ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;so_ET&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;so_ET&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;so_KE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;so_KE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;so_SO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;so_SO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sq&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sq&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sq_AL&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sq_AL&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr_BA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr_BA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr_CS&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr_CS&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr_ME&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr_ME&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr_RS&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr_RS&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sr_YU&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sr_YU&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sv&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sv&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sv_FI&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sv_FI&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sv_SE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sv_SE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sw&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sw&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sw_KE&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sw_KE&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;sw_TZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;sw_TZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ta&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ta&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ta_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ta_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;te&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;te&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;te_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;te_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;th&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;th&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;th_TH&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;th_TH&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ti&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ti&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ti_ER&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ti_ER&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ti_ET&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ti_ET&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;tr&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;tr&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;tr_TR&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;tr_TR&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;uk&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;uk&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;uk_UA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;uk_UA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ur&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ur&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ur_IN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ur_IN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;ur_PK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;ur_PK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;uz&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;uz&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;uz_AF&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;uz_AF&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;uz_UZ&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;uz_UZ&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;vi&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;vi&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;vi_VN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;vi_VN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh_CN&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh_CN&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh_HK&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh_HK&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh_MO&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh_MO&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh_SG&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh_SG&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zh_TW&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zh_TW&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zu&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zu&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
    <testcase name="&quot;zu_ZA&quot;: conversion &quot;d&quot; to &quot;i&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="104" assertions="1"/>
    <testcase name="&quot;zu_ZA&quot;: Conversion &quot;g&quot; to &quot;I&quot;" file="/mnt/hgfs/www/symfony1/test/unit/helper/DateHelperTest.php" line="106" assertions="1"/>
  </testsuite>
  <testsuite name="EscapingHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="esc_entities() does not escape integers" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="21" assertions="1"/>
    <testcase name="esc_entities() does not escape booleans" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="22" assertions="1"/>
    <testcase name="esc_entities() only escapes strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="23" assertions="1"/>
    <testcase name="esc_entities() only escapes strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="24" assertions="1"/>
    <testcase name="esc_raw() returns the first argument as is" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="28" assertions="1"/>
    <testcase name="esc_js() escapes javascripts" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="32" assertions="1"/>
    <testcase name="esc_js_no_entities() escapes javascripts" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="36" assertions="1"/>
    <testcase name="esc_js_no_entities() handles slashes correctly" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="37" assertions="1"/>
    <testcase name="esc_js_no_entities() preserves utf-8" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="38" assertions="1"/>
    <testcase name="esc_js_no_entities() handles linebreaks correctly" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="43" assertions="1"/>
    <testcase name="esc_js_no_entities() handles linebreaks correctly" file="/mnt/hgfs/www/symfony1/test/unit/helper/EscapingHelperTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="JavascriptBaseHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="boolean_for_javascript() makes a javascript representation of the boolean if the param is boolean" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="19" assertions="1"/>
    <testcase name="boolean_for_javascript() makes a javascript representation of the boolean if the param is boolean" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="20" assertions="1"/>
    <testcase name="boolean_for_javascript() makes a javascript representation of the boolean if the param is boolean" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="21" assertions="1"/>
    <testcase name="boolean_for_javascript() makes a javascript representation of the boolean if the param is boolean" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="22" assertions="1"/>
    <testcase name="options_for_javascript() makes a javascript representation of the passed array" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="26" assertions="1"/>
    <testcase name="options_for_javascript() works with nested arrays" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="27" assertions="1"/>
    <testcase name="javascript_tag() takes the content as string parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="38" assertions="1"/>
    <testcase name="link_to_function generates a link with onClick handler for function" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="42" assertions="1"/>
    <testcase name="link_to_function works fine with confirm dialog" file="/mnt/hgfs/www/symfony1/test/unit/helper/JavascriptBaseHelperTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="NumberHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" failures="0" errors="0" skipped="1" tests="12" assertions="12">
    <testcase name="format_number() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="18" assertions="1"/>
    <testcase name="# TODO format_number() takes the current user culture if no second argument is given" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="21" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="24" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="25" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="26" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="27" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="28" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="30" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="31" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="35" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="36" assertions="1"/>
    <testcase name="format_currency() takes a number as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/NumberHelperTest.php" line="37" assertions="1"/>
  </testsuite>
  <testsuite name="PartialHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="get_partial() uses the class specified in partial_view_class for the given module" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="38" assertions="1"/>
    <testcase name="get_partial() accepts a case-insensitive module name" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="39" assertions="1"/>
    <testcase name="get_slot() retrieves default slot content" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="45" assertions="1"/>
    <testcase name="get_slot() retrieves slot content" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="47" assertions="1"/>
    <testcase name="has_slot() checks if a slot exists" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="50" assertions="1"/>
    <testcase name="has_slot() checks if a slot does not exist" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="51" assertions="1"/>
    <testcase name="include_slot() prints out the content of an existing slot" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="56" assertions="1"/>
    <testcase name="include_slot() does not print out the content of an unexisting slot" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="60" assertions="1"/>
    <testcase name="include_slot() prints out the default content specified for an unexisting slot" file="/mnt/hgfs/www/symfony1/test/unit/helper/PartialHelperTest.php" line="64" assertions="1"/>
  </testsuite>
  <testsuite name="TagHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" failures="0" errors="0" skipped="0" tests="21" assertions="21">
    <testcase name="tag() returns an empty string with empty input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="22" assertions="1"/>
    <testcase name="tag() takes a tag as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="23" assertions="1"/>
    <testcase name="tag() takes a boolean parameter as its third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="24" assertions="1"/>
    <testcase name="tag() takes an array of options as its second parameters" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="25" assertions="1"/>
    <testcase name="tag() takes a string of options as its second parameters" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="26" assertions="1"/>
    <testcase name="tag() takes a boolean parameter as its third parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="27" assertions="1"/>
    <testcase name="content_tag() returns an empty string with empty input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="32" assertions="1"/>
    <testcase name="content_tag() returns an empty string with empty input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="33" assertions="1"/>
    <testcase name="content_tag() takes a content as its second parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="34" assertions="1"/>
    <testcase name="content_tag() takes a tag as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="35" assertions="1"/>
    <testcase name="cdata_section() returns a string wrapped into a CDATA section" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="39" assertions="1"/>
    <testcase name="cdata_section() returns a string wrapped into a CDATA section" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="40" assertions="1"/>
    <testcase name="escape_javascript() escapes JavaScript scripts" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="44" assertions="1"/>
    <testcase name="_get_option() returns the value for the given key" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="52" assertions="1"/>
    <testcase name="_get_option() removes the key from the original array" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="53" assertions="1"/>
    <testcase name="_get_option() returns the default value if the key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="54" assertions="1"/>
    <testcase name="escape_once() escapes an HTML strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="58" assertions="1"/>
    <testcase name="escape_once() does not escape an already escaped string" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="59" assertions="1"/>
    <testcase name="escape_once() does not escape an already escaped string" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="60" assertions="1"/>
    <testcase name="escape_once() does not escape simple quotes but escape double quotes" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="61" assertions="1"/>
    <testcase name="fix_double_escape() fixes double escaped strings" file="/mnt/hgfs/www/symfony1/test/unit/helper/TagHelperTest.php" line="65" assertions="1"/>
  </testsuite>
  <testsuite name="TextHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" failures="0" errors="0" skipped="0" tests="56" assertions="56">
    <testcase name="text_truncate() does nothing on an empty string" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="20" assertions="1"/>
    <testcase name="text_truncate() truncates to 30 characters by default" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="22" assertions="1"/>
    <testcase name="text_truncate() adds ... to truncated text" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="26" assertions="1"/>
    <testcase name="text_truncate() takes the max length as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="30" assertions="1"/>
    <testcase name="text_truncate() takes the ... text as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="34" assertions="1"/>
    <testcase name="text_truncate() accepts a truncate lastspace boolean as its fourth argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="39" assertions="1"/>
    <testcase name="text_truncate() accepts a truncate lastspace boolean as its fourth argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="40" assertions="1"/>
    <testcase name="text_truncate() handles unicode characters using mbstring if available" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="45" assertions="1"/>
    <testcase name="text_truncate() sets back the internal encoding in case it changes it" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="46" assertions="1"/>
    <testcase name="text_highlighter() highlights a word given as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="58" assertions="1"/>
    <testcase name="text_highlighter() highlights all occurrences of a word given as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="63" assertions="1"/>
    <testcase name="text_highlighter() takes a pattern as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="68" assertions="1"/>
    <testcase name="text_highlighter() returns an empty string if input is empty" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="70" assertions="1"/>
    <testcase name="text_highlighter() returns an empty string if input is empty" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="71" assertions="1"/>
    <testcase name="text_highlighter() does nothing is string to highlight is not present" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="72" assertions="1"/>
    <testcase name="text_highlighter() returns input if string to highlight is not present" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="73" assertions="1"/>
    <testcase name="text_highlighter() escapes search string to be safe in a regex" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="75" assertions="1"/>
    <testcase name="text_highlighter() escapes search string to be safe in a regex" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="76" assertions="1"/>
    <testcase name="text_highlighter() escapes search string to be safe in a regex" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="77" assertions="1"/>
    <testcase name="text_highlighter() escapes search string to be safe in a regex" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="79" assertions="1"/>
    <testcase name="text_excerpt() return an empty string if argument is empty" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="83" assertions="1"/>
    <testcase name="text_excerpt() return an empty string if phrase is empty" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="84" assertions="1"/>
    <testcase name="text_excerpt() creates an excerpt of a text" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="85" assertions="1"/>
    <testcase name="text_excerpt() creates an excerpt of a text" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="86" assertions="1"/>
    <testcase name="text_excerpt() creates an excerpt of a text" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="87" assertions="1"/>
    <testcase name="text_excerpt() takes a fifth argument allowing excerpt on whitespace" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="88" assertions="1"/>
    <testcase name="text_excerpt() takes a fifth argument allowing excerpt on whitespace" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="89" assertions="1"/>
    <testcase name="text_excerpt() takes a fifth argument allowing excerpt on whitespace" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="90" assertions="1"/>
    <testcase name="text_excerpt() does nothing if the search string is not in input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="91" assertions="1"/>
    <testcase name="wrap_text() wraps long lines with a default of 80" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="96" assertions="1"/>
    <testcase name="wrap_text() takes a line length as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="97" assertions="1"/>
    <testcase name="wrap_text() takes a line length as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="98" assertions="1"/>
    <testcase name="text_simple_format() replaces \n by &lt;br /&gt;" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="102" assertions="1"/>
    <testcase name="text_simple_format() replaces \n\n by &lt;p&gt;" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="103" assertions="1"/>
    <testcase name="text_simple_format() replaces \n\n\n\n by &lt;p&gt;" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="104" assertions="1"/>
    <testcase name="text_simple_format() wrap all string with &lt;p&gt;" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="105" assertions="1"/>
    <testcase name="text_simple_format() Ticket #6824" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="106" assertions="1"/>
    <testcase name="text_strip_links() strips all links in input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="110" assertions="1"/>
    <testcase name="text_strip_links() strips all links in input" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="111" assertions="1"/>
    <testcase name="auto_link_text() converts emails to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="122" assertions="1"/>
    <testcase name="auto_link_text() converts absolute URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="123" assertions="1"/>
    <testcase name="auto_link_text() takes a second parameter" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="124" assertions="1"/>
    <testcase name="auto_link_text() converts emails and URLs if no second argument is given" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="125" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="126" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="127" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links even if link does not start with http://" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="128" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="129" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="130" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="131" assertions="1"/>
    <testcase name="auto_link_text() converts URLs to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="132" assertions="1"/>
    <testcase name="auto_link_text() truncates URLs in links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="133" assertions="1"/>
    <testcase name="auto_link_text() takes truncation parameters" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="134" assertions="1"/>
    <testcase name="auto_link_text() converts URLs with complex fragments to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="135" assertions="1"/>
    <testcase name="auto_link_text() converts URLs with complex fragments and trailing text to links" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="136" assertions="1"/>
    <testcase name="auto_link_text() does not double-link emails" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="137" assertions="1"/>
    <testcase name="auto_link_text() does not double-link emails" file="/mnt/hgfs/www/symfony1/test/unit/helper/TextHelperTest.php" line="138" assertions="1"/>
  </testsuite>
  <testsuite name="UrlHelperTest" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" failures="0" errors="0" skipped="0" tests="44" assertions="44">
    <testcase name="url_for() converts an internal URI to a web URI" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="61" assertions="1"/>
    <testcase name="url_for() can take an absolute boolean as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="62" assertions="1"/>
    <testcase name="url_for() can take an absolute boolean as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="63" assertions="1"/>
    <testcase name="link_to() returns an HTML &quot;a&quot; tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="67" assertions="1"/>
    <testcase name="link_to() can take an &quot;absolute&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="68" assertions="1"/>
    <testcase name="link_to() can take an &quot;absolute&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="69" assertions="1"/>
    <testcase name="link_to() can take a &quot;query_string&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="70" assertions="1"/>
    <testcase name="link_to() can take an &quot;anchor&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="71" assertions="1"/>
    <testcase name="link_to() takes the url as the link name if the first argument is empty" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="72" assertions="1"/>
    <testcase name="link_to() includes CSRF token from BaseForm" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="73" assertions="1"/>
    <testcase name="button_to() returns an HTML &quot;input&quot; tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="77" assertions="1"/>
    <testcase name="button_to() returns an HTML &quot;input&quot; tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="78" assertions="1"/>
    <testcase name="button_to() returns an HTML &quot;input&quot; tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="79" assertions="1"/>
    <testcase name="button_to() returns an HTML &quot;input&quot; tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="80" assertions="1"/>
    <testcase name="button_to() accepts options as string" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="81" assertions="1"/>
    <testcase name="button_to() works with confirm option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="82" assertions="1"/>
    <testcase name="button_to() works with confirm and popup option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="83" assertions="1"/>
    <testcase name="button_to() includes CSRF token from BaseForm" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="84" assertions="1"/>
    <testcase name="link_to() can take an object as its first argument if __toString() method is defined" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="98" assertions="1"/>
    <testcase name="link_to() can take an object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="109" assertions="1"/>
    <testcase name="link_to_if() returns an HTML &quot;a&quot; tag if the condition is true" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="113" assertions="1"/>
    <testcase name="link_to_if() returns an HTML &quot;span&quot; tag by default if the condition is false" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="114" assertions="1"/>
    <testcase name="link_to_if() takes a &quot;tag&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="115" assertions="1"/>
    <testcase name="link_to_if() removes &quot;tag&quot; option (given as string) in true case" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="116" assertions="1"/>
    <testcase name="link_to_if() removes &quot;tag&quot; option (given as array) in true case" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="117" assertions="1"/>
    <testcase name="link_to_if() returns an HTML &quot;span&quot; tag by default if the condition is false" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="118" assertions="1"/>
    <testcase name="link_to_if() accepts link_to2 compatible usage" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="119" assertions="1"/>
    <testcase name="link_to_if() accepts link_to2 compatible usage" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="120" assertions="1"/>
    <testcase name="link_to_unless() returns an HTML &quot;a&quot; tag if the condition is false" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="124" assertions="1"/>
    <testcase name="link_to_unless() returns an HTML &quot;span&quot; tag by default if the condition is true" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="125" assertions="1"/>
    <testcase name="link_to_unless() accepts link_to2 compatible usage" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="126" assertions="1"/>
    <testcase name="link_to_unless() accepts link_to2 compatible usage" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="127" assertions="1"/>
    <testcase name="public_path() returns the public path" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="131" assertions="1"/>
    <testcase name="public_path() returns the public path if starting with slash" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="132" assertions="1"/>
    <testcase name="public_path() returns the public path" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="133" assertions="1"/>
    <testcase name="mail_to() creates a mailto a tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="137" assertions="1"/>
    <testcase name="mail_to() creates a mailto a tag" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="138" assertions="1"/>
    <testcase name="mail_to() can encode the email address" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="140" assertions="1"/>
    <testcase name="mail_to with only given email works" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="143" assertions="1"/>
    <testcase name="mail_to with given email and title works" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="144" assertions="1"/>
    <testcase name="mail_to with encoding works" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="145" assertions="1"/>
    <testcase name="mail_to() works with given default values in array form" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="147" assertions="1"/>
    <testcase name="mail_to() works with given default values in string form" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="148" assertions="1"/>
    <testcase name="mail_to() works with given default value with spaces" file="/mnt/hgfs/www/symfony1/test/unit/helper/UrlHelperTest.php" line="149" assertions="1"/>
  </testsuite>
  <testsuite name="dataTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" failures="0" errors="0" skipped="0" tests="92" assertions="92">
    <testcase name="i18n data files may contain a &quot;Countries&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Currencies&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Languages&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;LocaleScript&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;NumberPatterns&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Scripts&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Types&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Variants&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;Version&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;calendar&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="i18n data files may contain a &quot;zoneStrings&quot; entry" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="21" assertions="1"/>
    <testcase name="&quot;Countries&quot; contains country names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="26" assertions="1"/>
    <testcase name="&quot;Countries&quot; contains country names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="27" assertions="1"/>
    <testcase name="&quot;Currencies&quot; contains currency names and symbols" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="31" assertions="1"/>
    <testcase name="&quot;Currencies&quot; contains currency names and symbols" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="32" assertions="1"/>
    <testcase name="&quot;Languages&quot; contains language names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="36" assertions="1"/>
    <testcase name="&quot;Languages&quot; contains language names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="37" assertions="1"/>
    <testcase name="&quot;NumberPatterns&quot; contains patterns to format numbers" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="41" assertions="1"/>
    <testcase name="&quot;NumberPatterns&quot; contains patterns to format numbers" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="42" assertions="1"/>
    <testcase name="&quot;NumberPatterns&quot; contains patterns to format numbers" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="43" assertions="1"/>
    <testcase name="&quot;NumberPatterns&quot; contains patterns to format numbers" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="44" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="51" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="52" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="53" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="54" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="55" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="56" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="57" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="58" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains date time patterns" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="59" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="65" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="70" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains day names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="75" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains era names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="79" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains abrreviated month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="85" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains narrow month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="90" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;calendar&quot; contains month names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="95" assertions="1"/>
    <testcase name="&quot;zoneStrings&quot; contains time zone names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="103" assertions="1"/>
    <testcase name="&quot;zoneStrings&quot; contains time zone names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="103" assertions="1"/>
    <testcase name="&quot;zoneStrings&quot; contains time zone names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="103" assertions="1"/>
    <testcase name="&quot;zoneStrings&quot; contains time zone names" file="/mnt/hgfs/www/symfony1/test/unit/i18n/dataTest.php" line="103" assertions="1"/>
  </testsuite>
  <testsuite name="sfI18nExtractTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nExtractTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="-&gt;initialize() initializes the current i18n messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nExtractTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getOldMessages() returns old messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nExtractTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;getNewMessages() returns new messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nExtractTest.php" line="56" assertions="1"/>
  </testsuite>
  <testsuite name="sfI18nPhpExtractorTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="sfI18nPhpExtractor implements the sfI18nExtractorInterface interface" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from PHP files" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;extract() takes into account the format_number_choice() helper" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;extract() takes into account calls in an action file" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from '' and &quot;&quot; quoted strings" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;extract() does not care if you add some whitespaces" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from HEREDOC quoted strings" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nPhpExtractorTest.php" line="83" assertions="1"/>
  </testsuite>
  <testsuite name="sfI18nYamlGeneratorExtractorTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlGeneratorExtractorTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="sfI18nYamlGeneratorExtractor implements the sfI18nExtractorInterface interface" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlGeneratorExtractorTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from generator.yml files" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlGeneratorExtractorTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from generator.yml files" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlGeneratorExtractorTest.php" line="63" assertions="1"/>
  </testsuite>
  <testsuite name="sfI18nYamlValidateExtractorTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlValidateExtractorTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="sfI18nYamlValidateExtractor implements the sfI18nExtractorInterface interface" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlValidateExtractorTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;extract() extracts strings from generator.yml files" file="/mnt/hgfs/www/symfony1/test/unit/i18n/extract/sfI18nYamlValidateExtractorTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="sfChoiceFormatTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" failures="0" errors="0" skipped="0" tests="90" assertions="90">
    <testcase name="-&gt;parse() takes a choice strings as its first parameters" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;parse() takes a choice strings as its first parameters" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;parse() takes a choice strings as its first parameters" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;parse() takes a choice strings as its first parameters" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;parse() takes a choice strings as its first parameters" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;isValid() determines if a given number belongs to the given set" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;isValid() throw an exception if the set is not valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;format() returns the string that match the number" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;format() returns the string that match the number" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;format() returns the string that match the number" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;format() returns the string that match the number" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;format() returns the string that match the number" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;format() does not take into account ranges that are not prefixed with |" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;format() can takes a set notation in the format string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;format() can takes a set notation in the format string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;format() can takes a set notation in the format string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;format() can takes a set notation in the format string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;format() can takes a set notation in the format string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with polish!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with russian!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;format() can deal with english!" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfChoiceFormatTest.php" line="161" assertions="1"/>
  </testsuite>
  <testsuite name="sfCultureInfoTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" failures="0" errors="0" skipped="0" tests="67" assertions="67">
    <testcase name="-&gt;__construct() returns an object with &quot;en&quot; as the default culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;__construct() takes a culture as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;__construct() returns an object with &quot;en&quot; as the default culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;__toString() returns the name of the culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;__construct() throws an exception if the culture is not valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;getLanguage() returns the language name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;getLanguage() returns the language name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getLanguage() throws an Exception if the given language is invalid." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;getCurrency() returns the currency name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;getCurrency() returns the currency name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;getCurrency() throws an Exception if the given currency is invalid." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;getCountry() returns the country name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;getCountry() returns the country name for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;getCountry() throws an Exception if the given country is invalid." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;getLanguages() returns a list of languages in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;getLanguages() returns a list of languages in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;getLanguages() is equivalent to -&gt;Languages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;getLanguages() takes an array of languages as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getLanguages() throws an Exception if the list of given languages contains some invalid ones." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;getCurrencies() returns a list of currencies in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getCurrencies() returns a list of currencies in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;getCurrencies() is equivalent to -&gt;Currencies" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;getCurrencies() takes an array of currencies as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;getCurrencies() throws an Exception if the list of given currencies contains some invalid ones." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;getCountries() returns a list of countries in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;getCountries() returns a list of countries in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;getCountries() is equivalent to -&gt;Countries" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;getCountries() takes an array of countries as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;getCountries() throws an Exception if the list of given countries contains some invalid ones." file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;getScripts() returns a list of scripts in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="160" assertions="1"/>
    <testcase name="-&gt;getScripts() returns a list of scripts in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;getScripts() is equivalent to -&gt;Scripts" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;getTimeZones() returns a list of time zones in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="169" assertions="1"/>
    <testcase name="-&gt;getTimeZones() returns a list of time zones in the language of the localized version" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="170" assertions="1"/>
    <testcase name="-&gt;getTimeZones() is equivalent to -&gt;TimeZones" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="171" assertions="1"/>
    <testcase name="-&gt;validCulture() returns true if the culture is valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;validCulture() returns true if the culture is valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="176" assertions="1"/>
    <testcase name="-&gt;validCulture() returns false if the culture does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;validCulture() returns false if the culture does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;validCulture() returns false if the culture does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="179" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="185" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="186" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="189" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="190" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="193" assertions="1"/>
    <testcase name="::getCultures() returns an array of all available cultures" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="194" assertions="1"/>
    <testcase name="-&gt;getParent() returns a sfCultureInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;getParent() returns the parent culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="200" assertions="1"/>
    <testcase name="-&gt;getParent() returns the invariant culture if the culture is neutral" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="202" assertions="1"/>
    <testcase name="-&gt;getIsNeutralCulture() returns false if the culture is specific" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;getIsNeutralCulture() returns true if the culture is neutral" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="209" assertions="1"/>
    <testcase name="-&gt;getEnglishName() returns the english name of the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;getEnglishName() returns the english name of the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="216" assertions="1"/>
    <testcase name="-&gt;getEnglishName() is equivalent to -&gt;EnglishName" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;getNativeName() returns the native name of the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;getNativeName() returns the native name of the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="224" assertions="1"/>
    <testcase name="-&gt;getNativeName() is equivalent to -&gt;NativeName" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;getCalendar() returns the default calendar" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="230" assertions="1"/>
    <testcase name="-&gt;getCalendar() is equivalent to -&gt;Calendar" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="231" assertions="1"/>
    <testcase name="__get() throws an exception if the property does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="242" assertions="1"/>
    <testcase name="__set() throws an exception if the property does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="254" assertions="1"/>
    <testcase name="-&gt;getDateTimeFormat() returns a sfDateTimeFormatInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="260" assertions="1"/>
    <testcase name="-&gt;setDateTimeFormat() sets the sfDateTimeFormatInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="266" assertions="1"/>
    <testcase name="-&gt;setDateTimeFormat() is equivalent to -&gt;DateTimeFormat = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="268" assertions="1"/>
    <testcase name="-&gt;getNumberFormat() returns a sfNumberFormatInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="273" assertions="1"/>
    <testcase name="-&gt;setNumberFormat() sets the sfNumberFormatInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="279" assertions="1"/>
    <testcase name="-&gt;setNumberFormat() is equivalent to -&gt;NumberFormat = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfCultureInfoTest.php" line="281" assertions="1"/>
  </testsuite>
  <testsuite name="sfI18NTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" failures="1" errors="0" skipped="0" tests="34" assertions="34">
    <testcase name="-&gt;initialize() connects to the user.change_culture event" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;initialize() sets the PHP locale when a &quot;culture&quot; option is provided" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="44" assertions="1">
      <failure type="lime">      'a:18:{s:13:"decimal_point";s:1:".";s:13:"thousands_sep";s:1:",";s:15:"int_curr_symbol";s:4:"USD ";s:15:"currency_symbol";s:1:"$";s:17:"mon_decimal_point";s:1:".";s:17:"mon_thousands_sep";s:1:",";s:13:"positive_sign";s:0:"";s:13:"negative_sign";s:1:"-";s:15:"int_frac_digits";i:2;s:11:"frac_digits";i:2;s:13:"p_cs_precedes";i:1;s:14:"p_sep_by_space";i:0;s:13:"n_cs_precedes";i:1;s:14:"n_sep_by_space";i:0;s:11:"p_sign_posn";i:1;s:11:"n_sign_posn";i:1;s:8:"grouping";a:2:{i:0;i:3;i:1;i:3;}s:12:"mon_grouping";a:2:{i:0;i:3;i:1;i:3;}}'
          ne
      'a:18:{s:13:"decimal_point";s:1:".";s:13:"thousands_sep";s:1:",";s:15:"int_curr_symbol";s:4:"USD ";s:15:"currency_symbol";s:1:"$";s:17:"mon_decimal_point";s:1:".";s:17:"mon_thousands_sep";s:1:",";s:13:"positive_sign";s:0:"";s:13:"negative_sign";s:1:"-";s:15:"int_frac_digits";i:2;s:11:"frac_digits";i:2;s:13:"p_cs_precedes";i:1;s:14:"p_sep_by_space";i:0;s:13:"n_cs_precedes";i:1;s:14:"n_sep_by_space";i:0;s:11:"p_sign_posn";i:1;s:11:"n_sign_posn";i:1;s:8:"grouping";a:2:{i:0;i:3;i:1;i:3;}s:12:"mon_grouping";a:2:{i:0;i:3;i:1;i:3;}}'</failure>
    </testcase>
    <testcase name="-&gt;getCulture() returns the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;setCulture() sets the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;__() translates a string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;__() translates an object with __toString()" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;__() takes an array of arguments as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;__() takes a catalogue as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;__() &quot;1 minute&quot; translated as &quot;1 menit&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;__() &quot;1&quot; translated as &quot;1&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;__() number 1 translated as &quot;1&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;__() translates a string" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;__() adds a prefix and a suffix on untranslated strings if debug is on" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;initialize() can change the default prefix and suffix dor untranslated strings" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;getCountry() returns the name of a country for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;getCountry() takes an optional culture as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;getNativeName() returns the name of a culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;getTimestampForCulture() returns the timestamp for a data formatted in the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;getTimestampForCulture() returns the timestamp for a data formatted in the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;getTimestampForCulture() can take a culture as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;getTimestampForCulture() can take a culture as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;getTimestampForCulture() returns the day, month and year for a data formatted in the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() returns the day, month and year for a data formatted in the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() can take a culture as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() returns null in case of conversion problem" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() returns null in case of conversion problem" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() returns the day, month and year for a data formatted in culture with dots as separators" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;getDateForCulture() returns null in case of conversion problem with dots as separators" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() returns the hour and minuter for a time formatted in the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() can take a culture as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() returns null in case of conversion problem" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() returns null in case of conversion problem" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() returns the hour and minuter for a time formatted in culture with dots as separators" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;getTimeForCulture() returns null in case of conversion problem with dots as separators" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfI18NTest.php" line="133" assertions="1"/>
  </testsuite>
  <testsuite name="sfMessageSourceTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSourceTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="::factory() returns a sfMessageSource instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSourceTest.php" line="28" assertions="1"/>
    <testcase name="-&gt;setCulture() changes the source culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSourceTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;getCulture() gets the current source culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSourceTest.php" line="35" assertions="1"/>
  </testsuite>
  <testsuite name="sfMessageSource_AggregateTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="-&gt;save() returns false if no message is saved" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;save() returns true if some messages are saved" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;save() saves new messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;save() saves new messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;update() returns true if the message has been updated" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;update() updates a message translation" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;delete() returns false if the message has not been deleted" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;delete() returns true if the message has been deleted" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;delete() deletes a message" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_AggregateTest.php" line="68" assertions="1"/>
  </testsuite>
  <testsuite name="sfMessageSource_FileTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;getCatalogueByDir() returns catalogues by directory" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;getCatalogueByDir() returns all catalogues for the current culture" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;getSource() returns the full path name to a specific variant" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;isValidSource() returns false if the source is not valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;isValidSource() returns true if the source is valid" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns 0 if the source does not exist" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;getLastModified() returns the last modified time of the source" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_FileTest.php" line="52" assertions="1"/>
  </testsuite>
  <testsuite name="sfMessageSource_SQLiteTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" failures="0" errors="0" skipped="10" tests="10" assertions="10">
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_SQLiteTest.php" line="18" assertions="1"/>
  </testsuite>
  <testsuite name="sfMessageSource_XLIFFTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="-&gt;loadData() loads messages from a XLIFF file" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;loadData() returns false if it cannot load the messages from the file" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;save() returns false if no message is saved" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;save() returns true if some messages are saved" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;save() saves new messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;save() saves new messages" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;update() returns true if the message has been updated" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;update() updates a message translation" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;delete() returns false if the message has not been deleted" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;delete() returns true if the message has been deleted" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;delete() deletes a message" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfMessageSource_XLIFFTest.php" line="70" assertions="1"/>
  </testsuite>
  <testsuite name="sfNumberFormatInfoTest" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" failures="0" errors="0" skipped="0" tests="75" assertions="75">
    <testcase name="__construct() takes a mandatory ICU array as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="24" assertions="1"/>
    <testcase name="::getInstance() returns an sfNumberFormatInfo instance" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="29" assertions="1"/>
    <testcase name="::getInstance() can take a sfCultureInfo instance as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="31" assertions="1"/>
    <testcase name="::getInstance() can take a culture as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="32" assertions="1"/>
    <testcase name="::getInstance() can take a formatting type as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;getPattern() -&gt;setPattern() changes the current pattern" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;setPattern() is equivalent to -&gt;Pattern = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;getPattern() is equivalent to -&gt;Pattern" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="52" assertions="1"/>
    <testcase name="::getCurrencyInstance() is a shortcut for ::getInstance() and type sfNumberFormatInfo::CURRENCY" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="56" assertions="1"/>
    <testcase name="::getPercentageInstance() is a shortcut for ::getInstance() and type sfNumberFormatInfo::PERCENTAGE" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="60" assertions="1"/>
    <testcase name="::getScientificInstance() is a shortcut for ::getInstance() and type sfNumberFormatInfo::SCIENTIFIC" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;getDecimalDigits() returns &quot;-1&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getDecimalSeparator() returns &quot;,&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getGroupSeparator() returns &quot; &quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getCurrencySymbol() returns &quot;$US&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNegativeInfinitySymbol() returns &quot;-∞&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPositiveInfinitySymbol() returns &quot;+∞&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNegativeSign() returns &quot;-&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPositiveSign() returns &quot;+&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNaNSymbol() returns &quot;NaN&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPercentSymbol() returns &quot;%&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPerMilleSymbol() returns &quot;‰&quot; for culture &quot;fr&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getDecimalDigits() returns &quot;-1&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getDecimalSeparator() returns &quot;.&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getGroupSeparator() returns &quot;,&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getCurrencySymbol() returns &quot;$&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNegativeInfinitySymbol() returns &quot;-∞&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPositiveInfinitySymbol() returns &quot;+∞&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNegativeSign() returns &quot;-&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPositiveSign() returns &quot;+&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getNaNSymbol() returns &quot;NaN&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPercentSymbol() returns &quot;%&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getPerMilleSymbol() returns &quot;‰&quot; for culture &quot;en&quot;" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;setDecimalDigits() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getDecimalDigits() is equivalent to -&gt;DecimalDigits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setDecimalDigits() is equivalent to -&gt;DecimalDigits = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setDecimalSeparator() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getDecimalSeparator() is equivalent to -&gt;DecimalSeparator" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setDecimalSeparator() is equivalent to -&gt;DecimalSeparator = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setGroupSeparator() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getGroupSeparator() is equivalent to -&gt;GroupSeparator" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setGroupSeparator() is equivalent to -&gt;GroupSeparator = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setCurrencySymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getCurrencySymbol() is equivalent to -&gt;CurrencySymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setCurrencySymbol() is equivalent to -&gt;CurrencySymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setNegativeInfinitySymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getNegativeInfinitySymbol() is equivalent to -&gt;NegativeInfinitySymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setNegativeInfinitySymbol() is equivalent to -&gt;NegativeInfinitySymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setPositiveInfinitySymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getPositiveInfinitySymbol() is equivalent to -&gt;PositiveInfinitySymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setPositiveInfinitySymbol() is equivalent to -&gt;PositiveInfinitySymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setNegativeSign() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getNegativeSign() is equivalent to -&gt;NegativeSign" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setNegativeSign() is equivalent to -&gt;NegativeSign = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setPositiveSign() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getPositiveSign() is equivalent to -&gt;PositiveSign" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setPositiveSign() is equivalent to -&gt;PositiveSign = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setNaNSymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getNaNSymbol() is equivalent to -&gt;NaNSymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setNaNSymbol() is equivalent to -&gt;NaNSymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setPercentSymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getPercentSymbol() is equivalent to -&gt;PercentSymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setPercentSymbol() is equivalent to -&gt;PercentSymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setPerMilleSymbol() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;getPerMilleSymbol() is equivalent to -&gt;PerMilleSymbol" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;setPerMilleSymbol() is equivalent to -&gt;PerMilleSymbol = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setGroupSizes() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;getGroupSizes() is equivalent to -&gt;GroupSizes" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;setGroupSizes() is equivalent to -&gt;GroupSizes = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;setNegativePattern() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;getNegativePattern() is equivalent to -&gt;NegativePattern" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;setNegativePattern() is equivalent to -&gt;NegativePattern = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;setPositivePattern() sets the current decimal digits" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;getPositivePattern() is equivalent to -&gt;PositivePattern" file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;setPositivePattern() is equivalent to -&gt;PositivePattern = " file="/mnt/hgfs/www/symfony1/test/unit/i18n/sfNumberFormatInfoTest.php" line="134" assertions="1"/>
  </testsuite>
  <testsuite name="sfAggregateLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" failures="0" errors="0" skipped="0" tests="6" assertions="6">
    <testcase name="-&gt;initialize() can take a &quot;loggers&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;initialize() can take a &quot;loggers&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;log() logs a message to all loggers" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;log() logs a message to all loggers" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;addLogger() adds a new sfLogger instance" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;addLoggers() adds an array of sfLogger instances" file="/mnt/hgfs/www/symfony1/test/unit/log/sfAggregateLoggerTest.php" line="51" assertions="1"/>
  </testsuite>
  <testsuite name="sfConsoleLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfConsoleLoggerTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="sfConsoleLogger logs messages to the console" file="/mnt/hgfs/www/symfony1/test/unit/log/sfConsoleLoggerTest.php" line="20" assertions="1"/>
  </testsuite>
  <testsuite name="sfFileLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;initialize() parameters must contains a &quot;file&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;log() logs a message to the file" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;log() logs a message to the file" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;initialize() can take a format option" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;initialize() can take a format option" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;initialize() can take a format option" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;initialize() can take a format option" file="/mnt/hgfs/www/symfony1/test/unit/log/sfFileLoggerTest.php" line="83" assertions="1"/>
  </testsuite>
  <testsuite name="sfLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" failures="0" errors="0" skipped="0" tests="136" assertions="136">
    <testcase name="-&gt;getOptions() returns the options for the logger instance" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;getLogLevel() gets the current log level" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;setLogLevel() sets the log level" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;setLogLevel() accepts a class constant or a string as its argument" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of options as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="46" assertions="1"/>
    <testcase name="::getPriorityName() returns the name of a priority class constant" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="50" assertions="1"/>
    <testcase name="::getPriorityName() throws an sfException if the priority constant does not exist" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;log() logs a message" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::EMERG &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ALERT &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::CRIT &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::ERR &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::WARNING &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::NOTICE &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::INFO &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;log() only logs if the level is &gt;= to the defined log level (sfLogger::DEBUG &gt;= sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;emerg($msg) is a shortcut for -&gt;log($msg, sfLogger::EMERG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;alert($msg) is a shortcut for -&gt;log($msg, sfLogger::ALERT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;crit($msg) is a shortcut for -&gt;log($msg, sfLogger::CRIT)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;err($msg) is a shortcut for -&gt;log($msg, sfLogger::ERR)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;warning($msg) is a shortcut for -&gt;log($msg, sfLogger::WARNING)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;notice($msg) is a shortcut for -&gt;log($msg, sfLogger::NOTICE)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;info($msg) is a shortcut for -&gt;log($msg, sfLogger::INFO)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;debug($msg) is a shortcut for -&gt;log($msg, sfLogger::DEBUG)" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerTest.php" line="103" assertions="1"/>
  </testsuite>
  <testsuite name="sfLoggerWrapperTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerWrapperTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="__construct() takes a logger that implements sfLoggerInterface as its argument" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerWrapperTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;log() logs a message with the wrapped logger" file="/mnt/hgfs/www/symfony1/test/unit/log/sfLoggerWrapperTest.php" line="43" assertions="1"/>
  </testsuite>
  <testsuite name="sfStreamLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfStreamLoggerTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="sfStreamLogger logs messages to a PHP stream" file="/mnt/hgfs/www/symfony1/test/unit/log/sfStreamLoggerTest.php" line="22" assertions="1"/>
  </testsuite>
  <testsuite name="sfVarLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" failures="0" errors="0" skipped="0" tests="9" assertions="9">
    <testcase name="sfVarLogger logs all messages into its instance" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="24" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the message" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="26" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the priority" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="27" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the priority name" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="28" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the type" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="29" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the message" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="31" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the priority" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="32" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the priority name" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="33" assertions="1"/>
    <testcase name="sfVarLogger returns an array with the type" file="/mnt/hgfs/www/symfony1/test/unit/log/sfVarLoggerTest.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfWebDebugLoggerTest" file="/mnt/hgfs/www/symfony1/test/unit/log/sfWebDebugLoggerTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;handlePhpError() works when message has a &quot;%&quot; character" file="/mnt/hgfs/www/symfony1/test/unit/log/sfWebDebugLoggerTest.php" line="25" assertions="1"/>
  </testsuite>
  <testsuite name="sfMailerTest" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" failures="0" errors="0" skipped="0" tests="34" assertions="34">
    <testcase name="__construct() throws an InvalidArgumentException exception if the strategy is not valid" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="32" assertions="1"/>
    <testcase name="__construct() passes the parameters to the main transport" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="41" assertions="1"/>
    <testcase name="__construct() passes the parameters to the main transport" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="51" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException exception if the spool_class option is not set with the spool delivery strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="61" assertions="1"/>
    <testcase name="__construct() recognizes the spool delivery strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="65" assertions="1"/>
    <testcase name="__construct() recognizes the spool delivery strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="66" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException exception if the delivery_address option is not set with the spool single_address strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="77" assertions="1"/>
    <testcase name="__construct() recognizes the single_address delivery strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="81" assertions="1"/>
    <testcase name="__construct() disables logging if the logging option is set to false" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="85" assertions="1"/>
    <testcase name="__construct() enables logging if the logging option is set to true" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;compose() returns a Swift_Message instance" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;compose() takes the from address as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;compose() takes the to address as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;compose() takes the subject as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;compose() takes the body as its fourth argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;composeAndSend() composes and sends the message" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;composeAndSend() takes the from address as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;composeAndSend() takes the to address as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;composeAndSend() takes the subject as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;composeAndSend() takes the body as its fourth argument" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;flushQueue() throws a LogicException exception if the delivery_strategy is not spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;flushQueue() sends messages in the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="135" assertions="1"/>
    <testcase name="-&gt;flushQueue() sends messages in the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="136" assertions="1"/>
    <testcase name="-&gt;flushQueue() sends messages in the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;flushQueue() sends messages in the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;sendNextImmediately() implements a fluid interface" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;sendNextImmediately() bypasses the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;sendNextImmediately() bypasses the spool" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;sendNextImmediately() bypasses the spool but only for the very next message" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="160" assertions="1"/>
    <testcase name="-&gt;sendNextImmediately() bypasses the spool but only for the very next message" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;setDeliveryAddress() sets the delivery address for the single_address strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="167" assertions="1"/>
    <testcase name="-&gt;setLogger() sets the mailer logger" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;getDeliveryStrategy() returns the delivery strategy" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="178" assertions="1"/>
    <testcase name="-&gt;setRealtimeTransport() sets the mailer transport" file="/mnt/hgfs/www/symfony1/test/unit/mailer/sfMailerTest.php" line="184" assertions="1"/>
  </testsuite>
  <testsuite name="sfPearEnvironmentTest" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearEnvironmentTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="-&gt;initialize() throws an exception if you don't pass a &quot;plugin_dir&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearEnvironmentTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;initialize() throws an exception if you don't pass a &quot;cache_dir&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearEnvironmentTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;registerChannel() registers a PEAR channel" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearEnvironmentTest.php" line="68" assertions="1"/>
  </testsuite>
  <testsuite name="sfPearRestPluginTest" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="-&gt;getPluginVersions() returns an array of stable versions for a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;getPluginVersions() accepts stability as a second parameter and returns an array of versions for a plugin based on stability" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;getPluginVersions() accepts stability as a second parameter and returns an array of versions for a plugin based on stability cascade (beta includes stable)" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;getPluginDependencies() returns an array of dependencies" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;getPluginDownloadURL() returns a plugin URL" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPearRestPluginTest.php" line="62" assertions="1"/>
  </testsuite>
  <testsuite name="sfPluginManagerTest" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" failures="0" errors="0" skipped="0" tests="40" assertions="40">
    <testcase name="-&gt;initialize() takes a sfPearEnvironment as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;installPlugin() installs the latest stable version" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;installPlugin() can take a stability option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;installPlugin() can take a version option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;installPlugin() throws an exception if you try to install a version that is not compatible with our main package" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;installPlugin() installs the latest stable version" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;installPlugin() takes a stability as its 4th argument" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="147" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns false if the plugin is not installed" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;installPlugin() throws an exception if the plugin does not exist" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;installPlugin() can install a PEAR package hosted on a website" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="170" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="171" assertions="1"/>
    <testcase name="-&gt;installPlugin() can install a local PEAR package" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() returns true if the plugin is properly uninstalled" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="176" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() uninstalls a plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="177" assertions="1"/>
    <testcase name="-&gt;getPluginVersion() returns the latest version available for the plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="182" assertions="1"/>
    <testcase name="-&gt;getPluginVersion() takes a stability as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;getPluginVersion() returns the latest version available for the plugin" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;getPluginVersion() takes a stability as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;getPluginVersion() takes a stability as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="187" assertions="1"/>
    <testcase name="-&gt;getInstalledPlugin() returns an array of installed packages" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="197" assertions="1"/>
    <testcase name="-&gt;getInstalledPlugin() returns an array of installed packages" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="198" assertions="1"/>
    <testcase name="-&gt;installPlugin() throws an exception if the plugin needs a dependency to be installed" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="209" assertions="1"/>
    <testcase name="-&gt;installPlugin() can take a install_deps option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;installPlugin() can take a install_deps option" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="215" assertions="1"/>
    <testcase name="-&gt;installPlugin() installs a plugin if all dependencies are installed" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="221" assertions="1"/>
    <testcase name="-&gt;installPlugin() installs a plugin if all dependencies are installed" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;uninstallPlugin() throws an exception if you try to uninstall a plugin that is needed for another one" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="236" assertions="1"/>
    <testcase name="-&gt;installPlugin() throws an exception if you try to install a plugin with a dependency that is installed but not in the right version" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="252" assertions="1"/>
    <testcase name="-&gt;installPlugin() installs a plugin if all dependencies are installed" file="/mnt/hgfs/www/symfony1/test/unit/plugin/sfPluginManagerTest.php" line="261" assertions="1"/>
  </testsuite>
  <testsuite name="sfRequestTest" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" failures="0" errors="0" skipped="0" tests="36" assertions="36">
    <testcase name="-&gt;initialize() takes a sfEventDispatcher object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of parameters as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;getOptions() returns options for request instance" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;getMethod() returns the current request method" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;setMethod() throws a sfException if the method is not valid" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;extractParameters() returns parameters" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;extractParameters() returns parameters for keys in its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;extractParameters() returns parameters for keys in its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns true if request parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns false if request parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns false if parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns parameter by name" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;offsetSet() sets parameter by name" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;offsetUnset() unsets parameter by name" file="/mnt/hgfs/www/symfony1/test/unit/request/sfRequestTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;getParameterHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns false if the parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the default value if parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns true if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the value of the parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getParameter() does not return the default value if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
    <testcase name="-&gt;getAttributeHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasAttribute() returns false if the attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getAttribute() returns the default value if attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasAttribute() returns true if the attribute exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getAttribute() returns the value of the attribute" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getAttribute() does not return the default value if the attribute exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;setAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfWebRequestTest" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" failures="0" errors="0" skipped="0" tests="73" assertions="73">
    <testcase name="-&gt;getLanguages() returns an empty array if the client do not send an ACCEPT_LANGUAGE header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;getLanguages() returns an empty array if the client send an empty ACCEPT_LANGUAGE header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;getLanguages() returns an array with all accepted languages" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;getPreferredCulture() returns the first given culture if the client do not send an ACCEPT_LANGUAGE header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;getPreferredCulture() returns the preferred culture" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;getPreferredCulture() returns the preferred culture" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getCharsets() returns an empty array if the client do not send an ACCEPT_CHARSET header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;getCharsets() returns an empty array if the client send an empty ACCEPT_CHARSET header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;getCharsets() returns an array with all accepted charsets" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getAcceptableContentTypes() returns an empty array if the client do not send an ACCEPT header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;getAcceptableContentTypes() returns an empty array if the client send an empty ACCEPT header" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;getAcceptableContentTypes() returns an array with all accepted content types" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() returns an empty array if the header is empty" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() returns an array of values" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() strips the q value" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() sorts values by the q value" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() sorts values by the q value including equal values" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() trims whitespaces" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;splitHttpAcceptHeader() removes values when q = 0 (as per the RFC)" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;getRequestFormat() returns null if the format is not defined in the request" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;getRequestFormat() returns the request format" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;setRequestFormat() sets the request format" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;getFormat() returns the format for the given mime type" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;setFormat() can take an array of mime types" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="133" assertions="1"/>
    <testcase name="-&gt;getFormat() returns null if the mime type does not exist" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;getMimeType() returns the first mime type for the given format" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;getMimeType() returns null if the format does not exist" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;isSecure() returns false if request is not secure" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTP_SSL_HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTP_SSL_HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTP_SSL_HTTPS&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="160" assertions="1"/>
    <testcase name="-&gt;isSecure() checks the &quot;HTTP_X_FORWARDED_PROTO&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() returns no port for standard http port" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() works fine with no port in HTTP_HOST" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() works for nonstandard http ports" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="177" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() returns no port for standard https port" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() works fine with no port in HTTP_HOST" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() works for nonstandard https ports" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="187" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() uses the &quot;SERVER_PORT&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() uses the &quot;SERVER_PORT&quot; environment variable" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="198" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() uses the configured port" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="203" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() uses the configured port" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="210" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() works on secure requests forwarded as non-secure requests" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;getUriPrefix() uses the configured port on secure requests forwarded as non-secure requests" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="224" assertions="1"/>
    <testcase name="-&gt;getRemoteAddress() returns the remote address" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;getForwardedFor() returns null if the request was not forwarded." file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="237" assertions="1"/>
    <testcase name="-&gt;getForwardedFor() returns the value from HTTP_X_FORWARDED_FOR" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="239" assertions="1"/>
    <testcase name="-&gt;getMethod() returns the &quot;sf_method&quot; parameter value if it exists and if the method is POST" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="247" assertions="1"/>
    <testcase name="-&gt;getMethod() returns the &quot;sf_method&quot; parameter value if it exists and if the method is POST" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="252" assertions="1"/>
    <testcase name="-&gt;getMethod() returns the &quot;sf_method&quot; parameter value if it exists and if the method is POST" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="257" assertions="1"/>
    <testcase name="-&gt;getScriptName() returns the script name" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="265" assertions="1"/>
    <testcase name="-&gt;getScriptName() returns the script name if SCRIPT_NAME not set it use ORIG_SCRIPT_NAME" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="270" assertions="1"/>
    <testcase name="-&gt;getScriptName() returns the script name if SCRIPT_NAME and ORIG_SCRIPT_NAME not set it return empty" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="274" assertions="1"/>
    <testcase name="check if default path_info_key is PATH_INFO" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="281" assertions="1"/>
    <testcase name="-&gt;getPathInfo() returns the url path value" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="286" assertions="1"/>
    <testcase name="-&gt;getPathInfo() returns the url path value use path_info_key" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="290" assertions="1"/>
    <testcase name="-&gt;getPathInfo() returns the url path value if it not exists use default REQUEST_URI" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="298" assertions="1"/>
    <testcase name="-&gt;getPathInfo() returns the url path value if it not exists use default REQUEST_URI without query" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="303" assertions="1"/>
    <testcase name="-&gt;getPathInfo() returns the url path value if it not exists use default /" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="307" assertions="1"/>
    <testcase name="-&gt;getRequestParameters() returns the request parameters default array" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="313" assertions="1"/>
    <testcase name="-&gt;getRequestParameters() returns the request parameters" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="316" assertions="1"/>
    <testcase name="-&gt;getRequestParameters() returns the request parameters allready exists" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="319" assertions="1"/>
    <testcase name="-&gt;getRequestParameters() returns the request parameters check fixParameters call for special _sf_ params" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="322" assertions="1"/>
    <testcase name="-&gt;getAttribute() check special param is set as attribute" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="323" assertions="1"/>
    <testcase name="-&gt;checkCSRFProtection() throws a validator error if CSRF protection fails" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="346" assertions="1"/>
    <testcase name="-&gt;checkCSRFProtection() checks token from BaseForm" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="354" assertions="1"/>
    <testcase name="-&gt;getContentType() returns the content type" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="366" assertions="1"/>
    <testcase name="-&gt;getContentType() strips the charset information by default" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="369" assertions="1"/>
    <testcase name="-&gt;getContentType() does not strip the charset information by defaultif you pass false as the first argument" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="370" assertions="1"/>
    <testcase name="-&gt;getHost() returns the last forwarded host" file="/mnt/hgfs/www/symfony1/test/unit/request/sfWebRequestTest.php" line="377" assertions="1"/>
  </testsuite>
  <testsuite name="sfResponseTest" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;initialize() takes an array of options as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;getOptions() returns options for response instance" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;getContent() returns the current response content which is null by default" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;setContent() sets the response content" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;sendContent() output the current response content" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="45" assertions="1"/>
    <testcase name="sfResponse implements the Serializable interface" file="/mnt/hgfs/www/symfony1/test/unit/response/sfResponseTest.php" line="49" assertions="1"/>
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfWebResponseTest" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" failures="0" errors="0" skipped="0" tests="83" assertions="83">
    <testcase name="-&gt;initialize() takes a &quot;charset&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;initialize() takes a &quot;content_type&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;getStatusCode() returns 200 by default" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;setStatusCode() sets status code" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;setStatusCode() also sets the status text associated with the status code if no message is given" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;setStatusCode() takes a message as its second argument as the status text" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;setStatusCode() takes a message as its second argument as the status text" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;hasHttpHeader() returns false if http header is not set" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;hasHttpHeader() returns true if http header is not set" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;hasHttpHeader() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;getHttpHeader() returns the current http header values" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;getHttpHeader() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;setHttpHeader() takes a replace argument as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;setHttpHeader() takes a replace argument as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;setHttpHeader() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;clearHttpHeaders() clears all current http headers" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;getHttpHeaders() return all current response http headers" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;normalizeHeaderName() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;getContentType() returns a sensible default value" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;getCharset() returns the current charset of the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;setContentType() adds a charset if none is given" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;setContentType() adds a charset if none is given" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;getCharset() returns the current charset of the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;setContentType() does not add a charset if the content-type is not text/*" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;setContentType() does nothing if a charset is given" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;getCharset() returns the current charset of the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;setContentType() does nothing if a charset is given" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;getCharset() returns the current charset of the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="129" assertions="1"/>
    <testcase name="-&gt;getContentType() is an alias for -&gt;getHttpHeader('content-type')" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;setContentType() overrides previous content type if replace is true" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="135" assertions="1"/>
    <testcase name="-&gt;getTitle() returns an empty string by default" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;setTitle() sets the title" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;setTitle() will leave encoding intact" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;addHttpMeta() takes a replace argument as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;addHttpMeta() also sets the corresponding http header" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;addHttpMeta() takes a replace argument as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;addHttpMeta() normalizes http header name" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="159" assertions="1"/>
    <testcase name="-&gt;addVaryHttpHeader() adds a new Vary header" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;addVaryHttpHeader() does not add the same header twice" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="167" assertions="1"/>
    <testcase name="-&gt;addVaryHttpHeader() respects ordering" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="169" assertions="1"/>
    <testcase name="-&gt;addCacheControlHttpHeader() adds a new Cache-Control header" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;addCacheControlHttpHeader() does not add the same header twice" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="177" assertions="1"/>
    <testcase name="-&gt;addCacheControlHttpHeader() respects ordering" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;copyProperties() merges http headers" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="191" assertions="1"/>
    <testcase name="-&gt;copyProperties() merges content type" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;copyProperties() merges titles" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="193" assertions="1"/>
    <testcase name="-&gt;addStylesheet() adds a new stylesheet for the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;addStylesheet() adds a new stylesheet for the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="201" assertions="1"/>
    <testcase name="-&gt;addStylesheet() takes a position as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="203" assertions="1"/>
    <testcase name="-&gt;addStylesheet() takes a position as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="205" assertions="1"/>
    <testcase name="-&gt;addStylesheet() takes an array of parameters as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="208" assertions="1"/>
    <testcase name="-&gt;addStylesheet() throws an InvalidArgumentException if the position is not first, the empty string, or last" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;getStylesheets() returns all current registered stylesheets ordered by position" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;getStylesheets() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="223" assertions="1"/>
    <testcase name="-&gt;getStylesheets() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="224" assertions="1"/>
    <testcase name="-&gt;getStylesheets() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;getStylesheets() removes a stylesheet from the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="229" assertions="1"/>
    <testcase name="-&gt;getStylesheets() removes a stylesheet from the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;addJavascript() adds a new javascript for the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="238" assertions="1"/>
    <testcase name="-&gt;addJavascript() adds a new javascript for the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="240" assertions="1"/>
    <testcase name="-&gt;addJavascript() takes a position as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;addJavascript() takes a position as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="244" assertions="1"/>
    <testcase name="-&gt;addJavascript() throws an InvalidArgumentException if the position is not first, the empty string, or last" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="253" assertions="1"/>
    <testcase name="-&gt;getJavascripts() returns all current registered javascripts ordered by position" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="258" assertions="1"/>
    <testcase name="-&gt;getJavascripts() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="259" assertions="1"/>
    <testcase name="-&gt;getJavascripts() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="260" assertions="1"/>
    <testcase name="-&gt;getJavascripts() takes a position as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="261" assertions="1"/>
    <testcase name="-&gt;removeJavascripts() removes a javascript file" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="265" assertions="1"/>
    <testcase name="-&gt;removeJavascripts() removes a javascript file" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="268" assertions="1"/>
    <testcase name="-&gt;setCookie() adds a cookie for the response" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="273" assertions="1"/>
    <testcase name="-&gt;isHeaderOnly() returns false if the content must be send to the client" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="278" assertions="1"/>
    <testcase name="-&gt;setHeaderOnly() changes the current value of header only" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="280" assertions="1"/>
    <testcase name="-&gt;sendContent() returns nothing if headerOnly is true" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="288" assertions="1"/>
    <testcase name="-&gt;sendContent() returns the response content if headerOnly is false" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="294" assertions="1"/>
    <testcase name="sfWebResponse implements the Serializable interface" file="/mnt/hgfs/www/symfony1/test/unit/response/sfWebResponseTest.php" line="300" assertions="1"/>
  </testsuite>
  <testsuite name="sfObjectRouteCollectionTest" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" failures="0" errors="0" skipped="0" tests="25" assertions="25">
    <testcase name="-&gt;__construct() throws an exception if no &quot;model&quot; option is provided" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;__construct() defaults &quot;column&quot; option to &quot;id&quot;" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;__construct() defaults &quot;requirements&quot; for column to &quot;\d+&quot;" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;__construct() does not set a default requirement for custom columns" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;__construct() adds passed request parameters to the related option" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;generateRoutes() generates a wildcard object route when &quot;with_wildcard_routes&quot; is true" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;generateRoutes() generates a wildcard collection route when &quot;with_wildcard_routes&quot; is true" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;generateRoutes() creates a wildcard object route that matches a URL it generates" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;generateRoutes() orders routes so URLs generated by the wildcard object route are matched by that route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;generateRoutes() creates a wildcard collection route that matches a URL it generates" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;generateRoutes() orders routes so URLs generated by the wildcard collection route are matched by that route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;generateRoutes() generates custom collection routes" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;generateRoutes() creates a collection action route that matches a URL it generates" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;generateRoutes() orders routes so URLs generated by the collection action route are matched by that route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;generateRoutes() orders routes so URLs generated by the wildcard collection and collection action routes do not conflict" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_export&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_new&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_create&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_edit&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_update&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_delete&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_show&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_object&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generateRoutes() dispatches the &quot;default_params&quot; option to the &quot;test_collection&quot; route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteCollectionTest.php" line="125" assertions="1"/>
  </testsuite>
  <testsuite name="sfObjectRouteTest" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;generate() generates a URL with the given parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfObjectRouteTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="sfPatternRoutingTest" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" failures="0" errors="0" skipped="0" tests="145" assertions="145">
    <testcase name="-&gt;getRoutes() returns all current routes" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;getRoutes() returns a hash indexed by route names" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;getRoutes() returns a hash indexed by route names" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;setRoutes() takes a routes array as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;clearRoutes() clears all current routing rules" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;hasRoutes() returns false if there is no route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;hasRoutes() returns true if some routes are registered" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;connect() automatically adds trailing / to route if missing" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;connect() detects empty routes" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;parse() /:module/:action route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;generate() /:module/:action url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;parse() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generate() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;parse() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="130" assertions="1"/>
    <testcase name="-&gt;generate() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;parse() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;generate() takes the first matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;generate() creates URL suffixed by &quot;sf_suffix&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;generate() creates URL with no suffix when route ends with ." file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="157" assertions="1"/>
    <testcase name="-&gt;generate() creates URL with no suffix when route ends with /" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;generate() creates URL with special suffix when route ends with .suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="159" assertions="1"/>
    <testcase name="-&gt;generate() creates URL with no special suffix when route ends with .:suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="160" assertions="1"/>
    <testcase name="-&gt;parse() finds route from URL suffixed by &quot;sf_suffix&quot;" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;parse() finds route with no suffix when route ends with ." file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="163" assertions="1"/>
    <testcase name="-&gt;parse() finds route with no suffix when route ends with /" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;parse() finds route with special suffix when route ends with .suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;parse() finds route with special suffix when route ends with .:suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="166" assertions="1"/>
    <testcase name="-&gt;parse() does not take query string into account" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="176" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route with missing parameter if parameter is set in the default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with missing parameter if parameter is set in the default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route with more than one missing parameter if default values are set" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="190" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with more than one missing parameter if default values are set" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;generate() parameters override the route default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="198" assertions="1"/>
    <testcase name="-&gt;parse() finds route with parameters distinct from the default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;generate() creates URL even if there is no default value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="205" assertions="1"/>
    <testcase name="-&gt;parse() finds route even when route has no default value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="206" assertions="1"/>
    <testcase name="-&gt;generate() routes have default parameters value that can be overriden" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="213" assertions="1"/>
    <testcase name="-&gt;parse() routes have default parameters value that can be overriden" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;generate() does not remove the last parameter if the parameter is default value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;parse() removes the last parameter if the parameter is default value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="218" assertions="1"/>
    <testcase name="-&gt;generate() does not remove last parameters if they have default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="224" assertions="1"/>
    <testcase name="-&gt;parse() removes last parameters if they have default values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;generate() merges parameters with defaults from &quot;sf_routing_defaults&quot;" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="233" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with no additional parameters when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route with no additional parameters when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="243" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with no additional parameters and trailing slash when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="247" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with additional parameters and trailing slash when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   with additional parameters when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="254" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route with additional parameters when route ends with unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="255" assertions="1"/>
    <testcase name="-&gt;parse() does not override named wildcards with parameters passed in unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="256" assertions="1"/>
    <testcase name="-&gt;parse() considers multiple separators as single in unnamed wildcard *" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="257" assertions="1"/>
    <testcase name="-&gt;parse() takes the first matching route but takes * into accounts" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="265" assertions="1"/>
    <testcase name="-&gt;generate() takes the first matching route but takes * into accounts" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="266" assertions="1"/>
    <testcase name="-&gt;parse() takes the first matching route but takes * into accounts" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="269" assertions="1"/>
    <testcase name="-&gt;generate() takes the first matching route but takes * into accounts" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="270" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL when no extra parameters are present in the URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="279" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when no extra parameters are added to the internal URI" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="280" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL when extra parameters are present in the URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="284" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when extra parameters are added to the internal URI" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="285" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL when no extra parameters are present in the URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="293" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when no extra parameters are added to the internal URI" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="294" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL when extra parameters are present in the URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="298" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when extra parameters are added to the internal URI" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="299" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   when parameters meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="309" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when parameters meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="310" assertions="1"/>
    <testcase name="-&gt;parse() ignore routes when parameters don't meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="314" assertions="1"/>
    <testcase name="-&gt;generate() ignore routes when parameters don't meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="315" assertions="1"/>
    <testcase name="-&gt;parse() finds route for URL   when parameters meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="322" assertions="1"/>
    <testcase name="-&gt;generate() creates URL for route when parameters meet requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="323" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by /" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="338" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with / separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="339" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by ;" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="342" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with ; separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="343" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by :" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="346" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with : separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="347" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by +" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="350" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with + separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="351" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by |" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="354" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with | separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="355" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by ." file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="358" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with . separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="359" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by -" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="362" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with - separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="363" assertions="1"/>
    <testcase name="-&gt;parse() recognizes parameters separated by mixed separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="366" assertions="1"/>
    <testcase name="-&gt;generate() creates routes with mixed separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="367" assertions="1"/>
    <testcase name="-&gt;parse() works without segment_separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="374" assertions="1"/>
    <testcase name="-&gt;generate() works without segment_separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="375" assertions="1"/>
    <testcase name="-&gt;parse() works without segment_separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="377" assertions="1"/>
    <testcase name="-&gt;generate() works without segment_separators" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="378" assertions="1"/>
    <testcase name="-&gt;parse() works with segment_separators which are not in url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="384" assertions="1"/>
    <testcase name="-&gt;generate() works with segment_separators which are not in url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="385" assertions="1"/>
    <testcase name="-&gt;parse() works with segment_separators which are not in url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="387" assertions="1"/>
    <testcase name="-&gt;generate() works with segment_separators which are not in url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="388" assertions="1"/>
    <testcase name="-&gt;parse() accepts token names composed of letters, digits and _" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="398" assertions="1"/>
    <testcase name="-&gt;generate() accepts token names composed of letters, digits and _" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="399" assertions="1"/>
    <testcase name="-&gt;parse() accepts token names starting with :" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="409" assertions="1"/>
    <testcase name="-&gt;generate() accepts token names starting with :" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="410" assertions="1"/>
    <testcase name="-&gt;parse() accepts token names starting with $" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="413" assertions="1"/>
    <testcase name="-&gt;generate() accepts token names starting with $" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="414" assertions="1"/>
    <testcase name="-&gt;parse() accepts token names starting with mixed : and $" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="417" assertions="1"/>
    <testcase name="-&gt;generate() accepts token names starting with mixed : and $" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="418" assertions="1"/>
    <testcase name="-&gt;generate() can take an empty route name as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="427" assertions="1"/>
    <testcase name="-&gt;generate() can take a route name as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="428" assertions="1"/>
    <testcase name="-&gt;generate() with named routes needs only parameters not defined in route default" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="429" assertions="1"/>
    <testcase name="-&gt;appendRoute() is an alias for -&gt;connect()" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="440" assertions="1"/>
    <testcase name="-&gt;prependRoute() adds new routes at the beginning of the existings ones" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="452" assertions="1"/>
    <testcase name="-&gt;insertRouteBefore() adds a new route before another existings one" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="466" assertions="1"/>
    <testcase name="-&gt;insertRouteBefore() throws an sfConfigurationException when trying to insert a route before a non existent one" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="476" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="487" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="489" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="491" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="504" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="505" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="506" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL using cache" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="513" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL using cache" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="515" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() returns the internal URI for last parsed URL using cache" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="517" assertions="1"/>
    <testcase name="-&gt;findRoute() returns information about matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="522" assertions="1"/>
    <testcase name="-&gt;findRoute() does not change the internal URI of sfPatternRouting" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="523" assertions="1"/>
    <testcase name="-&gt;findRoute() returns null on non-matching route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="524" assertions="1"/>
    <testcase name="-&gt;getCurrentInternalUri() reseted after negative match" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="531" assertions="1"/>
    <testcase name="-&gt;getCurrentRouteName() reseted after negative match" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="532" assertions="1"/>
    <testcase name="-&gt;generate() routes takes default values into account when matching a route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="540" assertions="1"/>
    <testcase name="-&gt;generate() routes takes default values into account when matching a route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="542" assertions="1"/>
    <testcase name="-&gt;generate() throws a sfConfigurationException if no route matches the params" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="551" assertions="1"/>
    <testcase name="-&gt;generate() throws a InvalidArgumentException if some mandatory parameters are not provided" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="566" assertions="1"/>
    <testcase name="-&gt;parse() overrides the default module/action if provided in the defaults" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="574" assertions="1"/>
    <testcase name="-&gt;generate() overrides the default module/action if provided in the defaults" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="575" assertions="1"/>
    <testcase name="-&gt;parse() decodes parameter values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="582" assertions="1"/>
    <testcase name="-&gt;parse() decodes parameter values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="583" assertions="1"/>
    <testcase name="-&gt;parse() /:module/:action route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="591" assertions="1"/>
    <testcase name="-&gt;parse() /customer/:param1/:action/* route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="595" assertions="1"/>
    <testcase name="-&gt;generate() first replaces the longest variable names" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="599" assertions="1"/>
    <testcase name="-&gt;generate() allows route to generate absolute urls" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="603" assertions="1"/>
    <testcase name="-&gt;generate() does not double-absolutize urls" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="604" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="611" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="612" assertions="1"/>
    <testcase name="-&gt;parse() returns all default parameters when provided suffix and generate_shortest_url enabled with / suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="613" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="617" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="618" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="619" assertions="1"/>
    <testcase name="-&gt;parse() returns all default parameters when provided suffix and generate_shortest_url enabled with .html suffix" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="621" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="627" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="628" assertions="1"/>
    <testcase name="-&gt;generate() creates URL when using suffix and generate_shortest_url" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfPatternRoutingTest.php" line="629" assertions="1"/>
  </testsuite>
  <testsuite name="sfRequestRouteTest" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;__construct() applies a default &quot;sf_method&quot; requirement of GET or HEAD" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;__construct() does not apply a default &quot;sf_method&quot; requirement if one is already set" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;__construct() converts a string &quot;sf_method&quot; requirement to an array" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="28" assertions="1"/>
    <testcase name="-&gt;matchesParameters() matches the &quot;sf_method&quot; parameter" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;matchesParameters() checks &quot;sf_method&quot; requirement case-insensitively" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;matchesParameters() checks &quot;sf_method&quot; requirement case-insensitively" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;matchesUrl() check &quot;sf_method&quot; requirement case-insensitively" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;matchesUrl() check &quot;sf_method&quot; requirement case-insensitively" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRequestRouteTest.php" line="49" assertions="1"/>
  </testsuite>
  <testsuite name="sfRouteTest" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" failures="0" errors="0" skipped="0" tests="65" assertions="65">
    <testcase name="-&gt;matchesUrl() takes a URL as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;matchesUrl() returns false if the route does not match" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;matchesUrl() returns default values for parameters not in the route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;matchesUrl() returns variables from the pattern" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;matchesUrl() overrides default value with pattern value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="28" assertions="1"/>
    <testcase name="-&gt;matchesUrl() matches routes with an optional parameter at the end" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;matchesUrl() matches routes with an optional parameter at the end, even if it is null" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;matchesUrl() matches routes with an optional parameter at the end, even if it is empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;matchesUrl() does not match routes with an empty parameter not at the end" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;matchesUrl() does not match routes with an empty parameter not at the end" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;matchesUrl() matches routes with an optional parameter at the end" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;matchesUrl() matches routes with multiple optionals parameters at the end" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;matchesUrl() gets default parameters from the routing object if it exists" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;matchesUrl() overrides routing default parameters with route default parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;matchesUrl() overrides routing default parameters with pattern parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;matchesUrl() enforces requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;matchesUrl() enforces requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;matchesParameters() returns false if the argument is not an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;matchesParameters() returns false if one of the pattern variable is not provided" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;matchesParameters() merges the default parameters with the provided parameters to match the route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;matchesParameters() matches if all variables are given as parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;matchesParameters() matches if optional parameters empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;matchesParameters() matches if optional parameters empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;matchesParameters() merges the routing default parameters with the provided parameters to match the route" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;matchesParameters() enforces requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;matchesParameters() enforces requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;matchesParameters() checks that there is no parameter that is not a pattern variable" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;matchesParameters() can override a parameter that is not a pattern variable if the value is the same as the default one" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;matchesParameters() can override a parameter that is not a pattern variable if the value is the same as the default one" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;generate() matches even if there are extra parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;generate() does not match if there are extra parameters if extra_parameters_as_query_string is set to false" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;generate() generates a URL with the given parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;generate() replaces longer variables first" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;generate() generates a route if a variable is empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;generate() generates a route if a variable is empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;generate() generates extra parameters as a query string" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;generate() ignores extra parameters if extra_parameters_as_query_string is false" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;generate() adds extra parameters if extra_parameters_as_query_string is true" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;generate() generates the shortest URL possible" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;generate() generates the longest URL possible if generate_shortest_url is false" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() parses * as key/value pairs" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="166" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() uses / as the key/value separator" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="167" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() returns no additional parameters if the * value is empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() cannot override special module/sction values" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="171" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() can override a default value" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() cannot override pattern variables" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="177" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() is able to parse a star in the middle of a rule" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="180" assertions="1"/>
    <testcase name="-&gt;parseStarParameter() is able to parse a star if it is empty" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="181" assertions="1"/>
    <testcase name="-&gt;generateStarParameter() replaces * with all the key/pair values that are not variables" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;tokenizeBufferBefore() allows to add a custom token" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="236" assertions="1"/>
    <testcase name="-&gt;compileForLabel() adds logic to generate a route for a custom token" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="237" assertions="1"/>
    <testcase name="__construct() creates an uncompiled instanceof sfRoute" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;isBound() returns false before binding" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="251" assertions="1"/>
    <testcase name="-&gt;isBound() returns true after binding" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="253" assertions="1"/>
    <testcase name="-&gt;getParameters() compiles the route and returns parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="254" assertions="1"/>
    <testcase name="-&gt;getParameters() compiles the route and returns parameters" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="255" assertions="1"/>
    <testcase name="-&gt;getPattern() compiles the route and returns the pattern" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="258" assertions="1"/>
    <testcase name="-&gt;getPattern() compiles the route and returns pattern" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="259" assertions="1"/>
    <testcase name="-&gt;getDefaults() compiles the route and returns the defaults" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="262" assertions="1"/>
    <testcase name="-&gt;getDefaults() compiles the route and returns defaults" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="263" assertions="1"/>
    <testcase name="-&gt;getRequirements() compiles the route and returns the requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="266" assertions="1"/>
    <testcase name="-&gt;getRequirements() compiles the route and returns requirements" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="267" assertions="1"/>
    <testcase name="-&gt;getOptions() compiles the route and returns the compiled options" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="271" assertions="1"/>
    <testcase name="-&gt;getOptions() compiles the route and returns many compiled options" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="272" assertions="1"/>
    <testcase name="-&gt;getOptions() compiles the route and returns compiled options" file="/mnt/hgfs/www/symfony1/test/unit/routing/sfRouteTest.php" line="273" assertions="1"/>
  </testsuite>
  <testsuite name="sfCacheSessionStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" failures="0" errors="0" skipped="8" tests="8" assertions="8">
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
    <testcase name="# SKIP APC must be enable on CLI to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfCacheSessionStorageTest.php" line="25" assertions="1"/>
  </testsuite>
  <testsuite name="sfMySQLStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" failures="0" errors="0" skipped="16" tests="16" assertions="16">
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLStorageTest.php" line="46" assertions="1"/>
  </testsuite>
  <testsuite name="sfMySQLiStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" failures="0" errors="0" skipped="12" tests="12" assertions="12">
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
    <testcase name="# SKIP Unable to connect to MySQL database, skipping" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfMySQLiStorageTest.php" line="48" assertions="1"/>
  </testsuite>
  <testsuite name="sfNoStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfNoStorageTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="sfNoStorage is an instance of sfStorage" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfNoStorageTest.php" line="18" assertions="1"/>
  </testsuite>
  <testsuite name="sfPDOSessionStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" failures="0" errors="0" skipped="15" tests="15" assertions="15">
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
    <testcase name="# SKIP SQLite needed to run these tests" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfPDOSessionStorageTest.php" line="19" assertions="1"/>
  </testsuite>
  <testsuite name="sfSessionStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;__construct() does not throw an exception when not provided with options" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="28" assertions="1"/>
    <testcase name="-&gt;__construct() is an instance of sfStorage" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;read() can read data that has been written to storage" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;regenerate(false) regenerated the session with a different session id - this class by default doesn't regen the id" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;regenerate(false) regenerated the session with a different session id" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;regenerate(true) regenerated the session with a different session id and destroyed data" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;regenerate(true) regenerated the session with a different session id" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;remove() removes data from the storage" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfSessionStorageTest.php" line="58" assertions="1"/>
  </testsuite>
  <testsuite name="sfStorageTest" file="/mnt/hgfs/www/symfony1/test/unit/storage/sfStorageTest.php" failures="0" errors="0" skipped="0" tests="0" assertions="0"/>
  <testsuite name="sfCacheClearTaskTest" file="/mnt/hgfs/www/symfony1/test/unit/task/cache/sfCacheClearTaskTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="The test file is in the cache" file="/mnt/hgfs/www/symfony1/test/unit/task/cache/sfCacheClearTaskTest.php" line="30" assertions="1"/>
    <testcase name="The test file is removed by the cache:clear task" file="/mnt/hgfs/www/symfony1/test/unit/task/cache/sfCacheClearTaskTest.php" line="35" assertions="1"/>
  </testsuite>
  <testsuite name="sfBaseTaskTest" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="no project classes are autoloaded before -&gt;initializeAutoload()" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;initializeAutoload() loads project classes" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;initializeAutoload() includes plugin classes" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;initializeAutoload() prefers project to plugin classes" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;initializeAutoload() prefers project to plugin classes after reload" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;run() creates an application configuration if none is set" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;run() creates an application configuration if only a project configuration is set" file="/mnt/hgfs/www/symfony1/test/unit/task/sfBaseTaskTest.php" line="94" assertions="1"/>
  </testsuite>
  <testsuite name="sfFilesystemTest" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;canonicalizePath() correctly resolves &quot;\..&quot; and &quot;\.&quot;" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() correctly calculates the relative path" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() correctly calculates the relative path for dirs that share chars" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() works without going up one dir" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() returns absolute path when no relative path possible" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() correctly calculates the relative path for dirs that share chars" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() correctly calculates the relative path for dirs that share chars" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;calculateRelativeDir() correctly calculates the relative path for dirs that share chars" file="/mnt/hgfs/www/symfony1/test/unit/task/sfFilesystemTest.php" line="64" assertions="1"/>
  </testsuite>
  <testsuite name="sfTaskTest" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" failures="0" errors="0" skipped="0" tests="15" assertions="15">
    <testcase name="-&gt;run() accepts an indexed array of arguments" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of arguments" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;run() accepts an unordered associative array of arguments" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;run() accepts a string of arguments" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of arguments when optional arguments are passed as null" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;run() accepts an unordered associative array of arguments when optional arguments are passed as null" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;run() accepts an indexed array of an IS_ARRAY argument" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of an IS_ARRAY argument" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;run() sets empty option values" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;run() accepts an indexed array of option values" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;run() accepts an indexed array of unflagged option values" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of option values" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of options when optional values are passed as empty" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;run() accepts a string of options" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;run() accepts an associative array of options with a scalar array option value" file="/mnt/hgfs/www/symfony1/test/unit/task/sfTaskTest.php" line="116" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestFunctionalTest" file="/mnt/hgfs/www/symfony1/test/unit/test/sfTestFunctionalTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;click() accepts a CSS selector" file="/mnt/hgfs/www/symfony1/test/unit/test/sfTestFunctionalTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;click() parses a CSS selector" file="/mnt/hgfs/www/symfony1/test/unit/test/sfTestFunctionalTest.php" line="70" assertions="1"/>
  </testsuite>
  <testsuite name="sfTestFunctionalTest" file="/mnt/hgfs/www/symfony1/test/unit/test/sfTestFunctionalTest.php" failures="0" errors="0" skipped="0" tests="" assertions=""/>
  <testsuite name="sfBasicSecurityUserTest" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" failures="0" errors="0" skipped="1" tests="47" assertions="47">
    <testcase name="# TODO -&gt;initialize() times out the user if no request made for a long time" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;getCredentials() returns user credentials as an array" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;isAuthenticated() returns false by default" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;isAuthenticated() returns true if the user is authenticated" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;setAuthenticated() accepts a boolean as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;setAuthenticated() regenerates the session id if the authentication changes" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;setAuthenticated() does not regenerate the session id if the authentication does not change" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;addCredential() regenerates the session id if a new credential is added" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;addCredential() does not regenerate the session id if the credential already exists" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;removeCredential() regenerates the session id if a credential is removed" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;removeCredential() does not regenerate the session id if the credential does not exist" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;isTimedOut() returns false if the session is not timed out" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;isTimedOut() returns true if the session is timed out" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;hasCredential() returns false if user has not the credential" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;addCredential() takes a credential as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;hasCredential() can takes an array of credential as a parameter" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="119" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="124" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="125" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="128" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="129" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="132" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="135" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="136" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;hasCrendential() supports numerical credentials" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;hasCrendential() supports numerical credentials" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;hasCrendential() supports numerical credentials" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="146" assertions="1"/>
    <testcase name="-&gt;hasCrendential() supports numerical credentials" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="147" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="152" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="157" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;initialize() times out the user if no request made for a long time" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;initialize() takes a timeout parameter which can be false to disable session timeout" file="/mnt/hgfs/www/symfony1/test/unit/user/sfBasicSecurityUserTest.php" line="167" assertions="1"/>
  </testsuite>
  <testsuite name="sfUserTest" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" failures="0" errors="0" skipped="0" tests="32" assertions="32">
    <testcase name="-&gt;initialize() sets the culture to &quot;en&quot; by default" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;initialize() sets the culture to the value of default_culture if available" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;initialize() reads the culture from the session data if available" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;initialize() serializes the culture to the session data" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;setCulture() changes the current user culture" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;setFlash() sets a flash variable" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;hasFlash() returns true if the flash variable exists" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;getFlash() returns a flash previously set" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;hasFlash() returns true if the flash variable exists" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="55" assertions="1"/>
    <testcase name="Flashes are automatically removed after the next request" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;hasFlash() returns true if the flash variable exists" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns true if user attribute exists" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns false if user attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns false if attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns attribute by name" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;offsetSet() sets attribute by name" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;offsetUnset() unsets attribute by name" file="/mnt/hgfs/www/symfony1/test/unit/user/sfUserTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;getAttributeHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasAttribute() returns false if the attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getAttribute() returns the default value if attribute does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasAttribute() returns true if the attribute exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getAttribute() returns the value of the attribute" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getAttribute() does not return the default value if the attribute exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;hasAttribute() takes a namespace as its second parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="47" assertions="1"/>
    <testcase name="-&gt;hasAttribute() takes a namespace as its second parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="48" assertions="1"/>
    <testcase name="-&gt;getAttribute() takes a namespace as its third parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="49" assertions="1"/>
    <testcase name="-&gt;setAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setAttribute() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfBrowserTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" failures="0" errors="0" skipped="0" tests="74" assertions="74">
    <testcase name="-&gt;click() throws an error if the name does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;click() clicks on button links" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;click() clicks on links" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="169" assertions="1"/>
    <testcase name="-&gt;click() can take a third argument to tell the position of the link to click on" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="172" assertions="1"/>
    <testcase name="-&gt;click() clicks on image links" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;click() clicks on submit link at position 2" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="178" assertions="1"/>
    <testcase name="-&gt;click() clicks on submit image link at position 3" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="181" assertions="1"/>
    <testcase name="-&gt;click() gets the form method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="184" assertions="1"/>
    <testcase name="-&gt;click() clicks on form submit buttons" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values (input)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values (input)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="187" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values (textarea)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="188" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values (select)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="189" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values (select - multiple)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="190" assertions="1"/>
    <testcase name="-&gt;click() recognizes array names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="191" assertions="1"/>
    <testcase name="-&gt;click() recognizes array names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;click() recognizes array names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="193" assertions="1"/>
    <testcase name="-&gt;click() populates button clicked" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="194" assertions="1"/>
    <testcase name="-&gt;click() do not populate buttons not clicked" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;click() recognizes array names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="196" assertions="1"/>
    <testcase name="-&gt;click() returns the value of the checkbox value attribute" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="197" assertions="1"/>
    <testcase name="-&gt;click() returns 1 if the checkbox has no value" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="198" assertions="1"/>
    <testcase name="-&gt;click() clicks on form buttons" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="201" assertions="1"/>
    <testcase name="-&gt;click() uses default form field values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="202" assertions="1"/>
    <testcase name="-&gt;click() populates button clicked" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="203" assertions="1"/>
    <testcase name="-&gt;click() do not populate buttons not clicked" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="204" assertions="1"/>
    <testcase name="-&gt;click() clicks on form buttons" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;click() gets the form method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="208" assertions="1"/>
    <testcase name="-&gt;click() defaults to get method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="211" assertions="1"/>
    <testcase name="-&gt;click() concatenates fields values with existing action parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;click() can click on submit button anywhere in a form" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;click() can click on image button in forms" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="220" assertions="1"/>
    <testcase name="-&gt;click() takes an array of parameters as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="234" assertions="1"/>
    <testcase name="-&gt;click() can override input fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="235" assertions="1"/>
    <testcase name="-&gt;click() can override textarea fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="236" assertions="1"/>
    <testcase name="-&gt;click() can override select fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="237" assertions="1"/>
    <testcase name="-&gt;click() can override select (multiple) fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="238" assertions="1"/>
    <testcase name="-&gt;click() can override array fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="239" assertions="1"/>
    <testcase name="-&gt;click() can override array fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="240" assertions="1"/>
    <testcase name="-&gt;click() recognizes array names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="241" assertions="1"/>
    <testcase name="-&gt;click() ignores disabled fields" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="245" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="246" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="247" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector and position option" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector and position option" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="251" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector and position option" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="252" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector for a submit input" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="255" assertions="1"/>
    <testcase name="-&gt;click() accepts a CSS selector for a submit input" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="256" assertions="1"/>
    <testcase name="-&gt;click() throws an error if a submit is clicked outside a form" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="265" assertions="1"/>
    <testcase name="-&gt;setField() overrides default form field values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="279" assertions="1"/>
    <testcase name="-&gt;setField() overrides default form field values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="280" assertions="1"/>
    <testcase name="-&gt;setField() overrides default form field values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="281" assertions="1"/>
    <testcase name="-&gt;setField() overrides default form field values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="282" assertions="1"/>
    <testcase name="-&gt;setField() is overriden by parameters from click call" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="289" assertions="1"/>
    <testcase name="-&gt;setField() is overriden by parameters from click call" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="290" assertions="1"/>
    <testcase name="-&gt;deselect() unckecks a checkbox" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="300" assertions="1"/>
    <testcase name="-&gt;select() ckecks a checkbox" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="301" assertions="1"/>
    <testcase name="-&gt;select() selects a radiobutton" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="302" assertions="1"/>
    <testcase name="-&gt;select() toggles radiobuttons" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="307" assertions="1"/>
    <testcase name="-&gt;deselect() cannot deselect radiobuttons" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="316" assertions="1"/>
    <testcase name="click accept css selectors without &quot;[&quot; or &quot;]&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="320" assertions="1"/>
    <testcase name="-&gt;call() detects secure requests" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="325" assertions="1"/>
    <testcase name="-&gt;call() preserves SSL information between requests" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="326" assertions="1"/>
    <testcase name="-&gt;call() preserve non-secure requests" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="328" assertions="1"/>
    <testcase name="file upload is using right method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="339" assertions="1"/>
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="340" assertions="1"/>
    <testcase name="file upload set up a _FILE entry for our test file" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="341" assertions="1"/>
    <testcase name="file upload returns correctly formatted array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="342" assertions="1"/>
    <testcase name="unexistent file does not exists (UPLOAD_ERR_NO_FILE)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="343" assertions="1"/>
    <testcase name="existent file exists (UPLOAD_ERR_OK)" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="348" assertions="1"/>
    <testcase name="name key ok" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="349" assertions="1"/>
    <testcase name="-&gt;click() overrides input elements defined several times" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="354" assertions="1"/>
    <testcase name="-&gt;click() overrides input elements defined several times" file="/mnt/hgfs/www/symfony1/test/unit/util/sfBrowserTest.php" line="355" assertions="1"/>
  </testsuite>
  <testsuite name="sfCallableTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="-&gt;call() calls the callable with the given arguments" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" line="18" assertions="1"/>
    <testcase name="-&gt;call() calls the callable with the given arguments" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;call() calls the callable with the given arguments" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;call() throws an sfException if the callable is not valid" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getCallable() returns the current callable" file="/mnt/hgfs/www/symfony1/test/unit/util/sfCallableTest.php" line="53" assertions="1"/>
  </testsuite>
  <testsuite name="sfClassManipulatorTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" failures="0" errors="0" skipped="0" tests="18" assertions="18">
    <testcase name="-&gt;wrapMethod() does nothing if the method does not exist." file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;wrapMethod() adds code before the beginning of a method." file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;wrapMethod() adds code after the end of a method." file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;wrapMethod() adds code to the previously manipulated code." file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;getCode() returns the source code when no manipulations has been done" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;getCode() returns the modified code" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;setFile() sets the name of the file associated with the source code" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="132" assertions="1"/>
    <testcase name="::fromFile() sets the file internally" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;save() saves the modified code if a file is associated with the instance" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="146" assertions="1"/>
    <testcase name="-&gt;filterMethod() does not change the code if the filter does nothing" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;filterMethod() filters each line of the method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="223" assertions="1"/>
    <testcase name="-&gt;filterMethod() modifies the method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;filterMethod() does not change the code if the filter does nothing" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="233" assertions="1"/>
    <testcase name="-&gt;filterMethod() filters each line of the method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;filterMethod() modifies the method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="244" assertions="1"/>
    <testcase name="-&gt;filterMethod() works when there are no line breaks" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="253" assertions="1"/>
    <testcase name="-&gt;filterMethod() works when there are no line breaks" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="254" assertions="1"/>
    <testcase name="-&gt;filterMethod() filters each line of a mixed EOL-style method" file="/mnt/hgfs/www/symfony1/test/unit/util/sfClassManipulatorTest.php" line="271" assertions="1"/>
  </testsuite>
  <testsuite name="sfContextTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" failures="0" errors="0" skipped="0" tests="17" assertions="17">
    <testcase name="::createInstance() takes an application configuration and returns application context instance" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="44" assertions="1"/>
    <testcase name="::createInstance() creates application name context instance" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="45" assertions="1"/>
    <testcase name="::getInstance() returns the named context if it already exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="50" assertions="1"/>
    <testcase name="::switchTo() changes the default context instance returned by ::getInstance()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="55" assertions="1"/>
    <testcase name="::switchTo() changes the default context instance returned by ::getInstance()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;has() returns false if no object of the given name exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;has() returns true if an object is stored for the given name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;get() returns the object associated with the given name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;get() throws an sfException if no object is stored for the given name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns true if context object exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;offsetExists() returns false if context object does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;offsetGet() returns attribute by name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;offsetSet() sets object by name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;offsetUnset() unsets object by name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="86" assertions="1"/>
    <testcase name="-&gt;__call() sets context objects by name using setName()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;__call() returns context objects by name using getName()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;__call() throws an sfException if factory / method does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfContextTest.php" line="101" assertions="1"/>
  </testsuite>
  <testsuite name="sfDomCssSelectorTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" failures="0" errors="0" skipped="0" tests="72" assertions="72">
    <testcase name="-&gt;matchAll() takes a CSS selector as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;matchAll() returns an array of matching texts" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by id" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by id for a tag name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;matchAll() can take a * to match every elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;matchAll() can take a * to match every elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;matchAll() can take a * to match every elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name for a tag name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name for a tag name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name for multi-class elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name for multi-class elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by class name for multi-class elements" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;matchAll() supports searching html elements by several selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;matchAll() returns an empty array if the id does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="110" assertions="1"/>
    <testcase name="Hyphenated class names are matched correctly" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute existence" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute word matching" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute word matching" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute word matching" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute starting with" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="119" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute ending with" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute with *" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute word matching" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;matchAll() supports checking attribute starting with value followed by optional hyphen" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;matchAll() supports chaining attribute selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;matchAll() supports chaining attribute selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;matchAll() support . # and spaces in attribute selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;matchAll() takes a CSS selectors separated by one or more spaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;matchAll() support &gt; combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;matchAll() support &gt; combinator with optional surrounding spaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="133" assertions="1"/>
    <testcase name="-&gt;matchAll() support + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;matchAll() support + combinator with optional surrounding spaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="135" assertions="1"/>
    <testcase name="-&gt;matchAll() takes a multiple CSS selectors separated by a ," file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="137" assertions="1"/>
    <testcase name="-&gt;matchAll() takes a multiple CSS selectors separated by a ," file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;matchAll() takes a multiple CSS selectors separated by a ," file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;matchAll() returns nodes only once for multiple selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;matchAll() returns nodes only once for multiple selectors" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;matchAll() mega example!" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;matchAll() :contains()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;matchAll() :eq()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="146" assertions="1"/>
    <testcase name="-&gt;matchAll() :last" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="147" assertions="1"/>
    <testcase name="-&gt;matchAll() :first" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;matchAll() :first" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;matchAll() :first" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;matchAll() :lt" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;matchAll() :gt" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;matchAll() :odd" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;matchAll() :even" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;matchAll() :first-child" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;matchAll() :nth-child" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;matchAll() :nth-child" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="157" assertions="1"/>
    <testcase name="-&gt;matchAll() :nth-child" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;matchAll() :last-child" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="159" assertions="1"/>
    <testcase name="-&gt;matchAll() :contains():contains()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;matchAll() :contains():last" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="163" assertions="1"/>
    <testcase name="-&gt;matchAll() :last:contains()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;matchAll() :contains() supports different quote styles" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;matchAll() returns a new sfDomCssSelector restricted to the result nodes" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="169" assertions="1"/>
    <testcase name="-&gt;matchSingle() returns a new sfDomCssSelector restricted to the first result node" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;getValues() returns all node values" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="177" assertions="1"/>
    <testcase name="-&gt;getValue() returns the first node value" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="181" assertions="1"/>
    <testcase name="-&gt;matchAll() suppports the + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;matchAll() suppports the + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="184" assertions="1"/>
    <testcase name="-&gt;matchAll() suppports the + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;matchAll() suppports the + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;matchAll() suppports the + combinator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="187" assertions="1"/>
    <testcase name="The object is an iterator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="196" assertions="1"/>
    <testcase name="The object is an iterator" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="199" assertions="1"/>
    <testcase name="sfDomCssSelector implements Countable" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="208" assertions="1"/>
    <testcase name="sfDomCssSelector implements Countable" file="/mnt/hgfs/www/symfony1/test/unit/util/sfDomCssSelectorTest.php" line="209" assertions="1"/>
  </testsuite>
  <testsuite name="sfFinderTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" failures="0" errors="0" skipped="0" tests="39" assertions="39">
    <testcase name="::type() returns a sfFinder instance" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="102" assertions="1"/>
    <testcase name="::type() takes a file, dir, or any as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="103" assertions="1"/>
    <testcase name="::type() takes a file, dir, or any as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="105" assertions="1"/>
    <testcase name="::type() takes a file, dir, or any as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="107" assertions="1"/>
    <testcase name="::type() takes a file, dir, or any as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;getType() returns the type of searched files" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;setType() implements a fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;name() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;name() can take a file name as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;name() can take a glob pattern as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="129" assertions="1"/>
    <testcase name="-&gt;name() can take a regexp as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="133" assertions="1"/>
    <testcase name="-&gt;name() can take a regexp with a modifier as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="137" assertions="1"/>
    <testcase name="-&gt;name() can take an array of patterns" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;name() can take patterns as arguments" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;name() can be called several times" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;not_name() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;not_name() can take a file name as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;not_name() can take a glob pattern as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;not_name() can take a regexp as an argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;not_name() can take an array of patterns" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="166" assertions="1"/>
    <testcase name="-&gt;not_name() can take patterns as arguments" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;not_name() can be called several times" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="170" assertions="1"/>
    <testcase name="-&gt;not_name() and -&gt;name() can be called in the same query" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;size() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;size() takes a size comparison string as its argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="182" assertions="1"/>
    <testcase name="-&gt;size() takes a size comparison string as its argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="184" assertions="1"/>
    <testcase name="-&gt;size() takes a size comparison string as its argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;mindepth() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="191" assertions="1"/>
    <testcase name="-&gt;maxdepth() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;mindepth() takes a minimum depth as its argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;maxdepth() takes a maximum depth as its argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="197" assertions="1"/>
    <testcase name="-&gt;maxdepth() and -&gt;mindepth() can be called in the same query" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;discard() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="203" assertions="1"/>
    <testcase name="-&gt;discard() can discard a file name" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;discard() can discard a glob pattern" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="211" assertions="1"/>
    <testcase name="-&gt;discard() can discard a regexp pattern" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="215" assertions="1"/>
    <testcase name="-&gt;prune() implements the fluent interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="219" assertions="1"/>
    <testcase name="-&gt;prune() ignore all files/directories under the given directory" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;in() ignores directories it cannot read" file="/mnt/hgfs/www/symfony1/test/unit/util/sfFinderTest.php" line="228" assertions="1"/>
  </testsuite>
  <testsuite name="sfInflectorTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="::camelize() upper-case the first letter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="19" assertions="1"/>
    <testcase name="::camelize() upper-case each letter after a _ and remove _" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="20" assertions="1"/>
    <testcase name="::underscore() lower-case the first letter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="24" assertions="1"/>
    <testcase name="::underscore() lower-case each upper-case letter and add a _ before" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="25" assertions="1"/>
    <testcase name="::underscore() lower-case all other letters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="26" assertions="1"/>
    <testcase name="::humanize() upper-case the first letter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="30" assertions="1"/>
    <testcase name="::humanize() replaces _ by a space" file="/mnt/hgfs/www/symfony1/test/unit/util/sfInflectorTest.php" line="31" assertions="1"/>
  </testsuite>
  <testsuite name="sfNamespacedParameterHolderTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" failures="0" errors="0" skipped="0" tests="50" assertions="50">
    <testcase name="-&gt;clear() clears all parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clear() clears all parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;get() returns the parameter value for the given key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;get() returns null if the key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;get() takes the default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;get() takes an optional namespace as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;get() can have the same key for several namespaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;getNames() returns all key names for the default namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;getNames() takes a namepace as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;getNamespaces() returns all non empty namespaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;setDefaultNamespace() sets the default namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;setDefaultNamespace() moves values from the old namespace to the new" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;setDefaultNamespace() moves values from the old namespace to the new" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;setDefaultNamespace() does not move old values to the new namespace if the second argument is false" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;setDefaultNamespace() does not move old values to the new namespace if the second argument is false" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;getAll() returns all parameters from the default namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;has() returns true if the key exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;has() returns false if the key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;has() returns false if the key exists but in another namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;has() returns true if the key exists in the namespace given as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;hasNamespace() returns true for the default namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;hasNamespace() returns true if the namespace exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;hasNamespace() returns false if the namespace does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters for a given namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;remove() takes a namespace as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;remove() takes a default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;removeNamespace() removes all keys and values from a namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;removeNamespace() removes all keys and values from a namespace" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="135" assertions="1"/>
    <testcase name="-&gt;removeNamespace() does not remove keys in other namepaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="136" assertions="1"/>
    <testcase name="-&gt;removeNamespace() removes all keys and values from the default namespace by default" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;removeNamespace() removes all keys and values from the default namespace by default" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;removeNamespace() does not remove keys in other namepaces" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;removeNamespace() takes a namespace as its first parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;removeNamespace() removes all the keys from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;set() sets the value for a key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;set() sets the value for a key, not a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="161" assertions="1"/>
    <testcase name="-&gt;set() takes a namespace as its third parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;setByRef() sets the value for a key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="172" assertions="1"/>
    <testcase name="-&gt;setByRef() sets the value for a key as a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="175" assertions="1"/>
    <testcase name="-&gt;setByRef() takes a namespace as its third parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="191" assertions="1"/>
    <testcase name="-&gt;add() takes a namespace as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="192" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters, not a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;add() takes a namespace as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="208" assertions="1"/>
    <testcase name="-&gt;add() adds a reference of an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="211" assertions="1"/>
    <testcase name="sfNamespacedParameterHolder implements the Serializable interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfNamespacedParameterHolderTest.php" line="215" assertions="1"/>
  </testsuite>
  <testsuite name="sfParameterHolderTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" failures="0" errors="0" skipped="0" tests="24" assertions="24">
    <testcase name="-&gt;clear() clears all parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clear() clears all parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;get() returns the parameter value for the given key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;get() returns null if the key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;get() returns a reference for the given key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;get() takes the default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;getNames() returns all key names" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;getAll() returns all parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;has() returns true if the key exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;has() returns false if the key does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;has() returns true if the key exist, even if the value is null" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;remove() takes a default value as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;remove() removes the key from parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;set() sets the value for a key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;set() sets the value for a key, not a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;setByRef() sets the value for a key" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;setByRef() sets the value for a key as a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters, not a reference" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;add() adds an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;add() adds a reference of an array of parameters" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="131" assertions="1"/>
    <testcase name="sfParameterHolder implements the Serializable interface" file="/mnt/hgfs/www/symfony1/test/unit/util/sfParameterHolderTest.php" line="135" assertions="1"/>
  </testsuite>
  <testsuite name="sfToolkitTest" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" failures="0" errors="0" skipped="0" tests="93" assertions="93">
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;stringToArray()" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="33" assertions="1"/>
    <testcase name="::isUTF8() returns true if the parameter is an UTF-8 encoded string" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="38" assertions="1"/>
    <testcase name="::isUTF8() returns true if the parameter is an UTF-8 encoded string" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="39" assertions="1"/>
    <testcase name="::isUTF8() returns false if the parameter is not an UTF-8 encoded string" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="40" assertions="1"/>
    <testcase name="::isUTF8() can operate on very large strings" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="43" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;true&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="49" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;TRUE&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="52" assertions="1"/>
    <testcase name="::literalize() returns true with &quot; true &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="54" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;on&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="49" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;ON&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="52" assertions="1"/>
    <testcase name="::literalize() returns true with &quot; on &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="54" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;+&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="49" assertions="1"/>
    <testcase name="::literalize() returns true with &quot; + &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="54" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;yes&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="49" assertions="1"/>
    <testcase name="::literalize() returns true with &quot;YES&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="52" assertions="1"/>
    <testcase name="::literalize() returns true with &quot; yes &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="54" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;false&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="59" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;FALSE&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="62" assertions="1"/>
    <testcase name="::literalize() returns false with &quot; false &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="64" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;off&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="59" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;OFF&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="62" assertions="1"/>
    <testcase name="::literalize() returns false with &quot; off &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="64" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;-&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="59" assertions="1"/>
    <testcase name="::literalize() returns false with &quot; - &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="64" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;no&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="59" assertions="1"/>
    <testcase name="::literalize() returns false with &quot;NO&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="62" assertions="1"/>
    <testcase name="::literalize() returns false with &quot; no &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="64" assertions="1"/>
    <testcase name="::literalize() returns null with &quot;null&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="69" assertions="1"/>
    <testcase name="::literalize() returns null with &quot;NULL&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="72" assertions="1"/>
    <testcase name="::literalize() returns null with &quot; null &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="74" assertions="1"/>
    <testcase name="::literalize() returns null with &quot;~&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="69" assertions="1"/>
    <testcase name="::literalize() returns null with &quot; ~ &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="74" assertions="1"/>
    <testcase name="::literalize() returns null with &quot;&quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="69" assertions="1"/>
    <testcase name="::literalize() returns null with &quot;  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="74" assertions="1"/>
    <testcase name="::replaceConstantsCallback() replaces constants enclosed in %" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="80" assertions="1"/>
    <testcase name="::replaceConstantsCallback() does not replace unknown constants" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="81" assertions="1"/>
    <testcase name="::replaceConstantsCallback() replaces constants enclosed in % even if value is null" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="83" assertions="1"/>
    <testcase name="::replaceConstantsCallback() returns the original string if the constant is not defined" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="84" assertions="1"/>
    <testcase name="::replaceConstantsCallback() returns the original string if the constant is not defined" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="85" assertions="1"/>
    <testcase name="::replaceConstantsCallback() returns the original string if the constant is not defined" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="86" assertions="1"/>
    <testcase name="::isPathAbsolute() returns true if path is absolute" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="90" assertions="1"/>
    <testcase name="::isPathAbsolute() returns true if path is absolute" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="91" assertions="1"/>
    <testcase name="::isPathAbsolute() returns true if path is absolute" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="92" assertions="1"/>
    <testcase name="::isPathAbsolute() returns true if path is absolute" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="93" assertions="1"/>
    <testcase name="::isPathAbsolute() returns false if path is relative" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="94" assertions="1"/>
    <testcase name="::isPathAbsolute() returns false if path is relative" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="95" assertions="1"/>
    <testcase name="::isPathAbsolute() returns false if path is relative" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="96" assertions="1"/>
    <testcase name="::stripComments() strip all comments from a php string" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="116" assertions="1"/>
    <testcase name="::stripComments() correctly handles comments within strings" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="125" assertions="1"/>
    <testcase name="::stripslashesDeep() strip slashes on string" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="130" assertions="1"/>
    <testcase name="::stripslashesDeep() strip slashes on array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="131" assertions="1"/>
    <testcase name="::stripslashesDeep() strip slashes on deep arrays" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="132" assertions="1"/>
    <testcase name="::stripslashesDeep() strip slashes on deep arrays" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="133" assertions="1"/>
    <testcase name="::clearDirectory() removes all directories from the directory parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="143" assertions="1"/>
    <testcase name="::clearDirectory() removes all directories from the directory parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="144" assertions="1"/>
    <testcase name="::clearDirectory() removes all directories from the directory parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="145" assertions="1"/>
    <testcase name="::clearGlob() removes all files and directories matching the pattern parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="158" assertions="1"/>
    <testcase name="::clearGlob() removes all files and directories matching the pattern parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="159" assertions="1"/>
    <testcase name="::clearGlob() removes all files and directories matching the pattern parameter" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="160" assertions="1"/>
    <testcase name="::arrayDeepMerge() merges linear arrays preserving literal keys" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="170" assertions="1"/>
    <testcase name="::arrayDeepMerge() recursively merges arrays preserving literal keys" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="175" assertions="1"/>
    <testcase name="::arrayDeepMerge() merges linear arrays preserving numerical keys" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="180" assertions="1"/>
    <testcase name="::arrayDeepMerge() recursively merges arrays preserving numerical keys" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="185" assertions="1"/>
    <testcase name="::getArrayValueForPath() returns the value of the path if it exists" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="204" assertions="1"/>
    <testcase name="::getArrayValueForPath() returns null if the path does not exist" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="205" assertions="1"/>
    <testcase name="::getArrayValueForPath() takes a default value as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="206" assertions="1"/>
    <testcase name="::getArrayValueForPath() works with deep paths" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="208" assertions="1"/>
    <testcase name="::getArrayValueForPath() works with deep paths" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="209" assertions="1"/>
    <testcase name="::getArrayValueForPath() works with deep paths" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="210" assertions="1"/>
    <testcase name="::getArrayValueForPath() accepts a [] at the end to check for an array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="212" assertions="1"/>
    <testcase name="::getArrayValueForPath() accepts a [] at the end to check for an array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="213" assertions="1"/>
    <testcase name="::getArrayValueForPath() accepts a [] at the end to check for an array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="214" assertions="1"/>
    <testcase name="::getArrayValueForPath() accepts a [] at the end to check for an array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="215" assertions="1"/>
    <testcase name="::getArrayValueForPath() can take an array indexed by integer" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="217" assertions="1"/>
    <testcase name="::getArrayValueForPath() can take an array indexed by integer" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="218" assertions="1"/>
    <testcase name="::getArrayValueForPath() can take an array indexed by integer" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="219" assertions="1"/>
    <testcase name="::getArrayValueForPath() is not fooled by php mistaking strings and array" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="221" assertions="1"/>
    <testcase name="::addIncludePath() returns the previous include_path" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="226" assertions="1"/>
    <testcase name="::addIncludePath() adds a path to the front of include_path" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="227" assertions="1"/>
    <testcase name="::addIncludePath() moves a path to the end of include_path" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="230" assertions="1"/>
    <testcase name="::addIncludePath() adds multiple paths the the front of include_path" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="236" assertions="1"/>
    <testcase name="::addIncludePath() adds multiple paths the the back of include_path" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="242" assertions="1"/>
    <testcase name="::addIncludePath() throws an exception if position is not valid" file="/mnt/hgfs/www/symfony1/test/unit/util/sfToolkitTest.php" line="251" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorI18nChoiceCountryTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceCountryTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="-&gt;configure() throws an InvalidArgumentException if a country does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceCountryTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;configure() can restrict the number of countries with the countries option" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceCountryTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;clean() cleans the input value" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceCountryTest.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorI18nChoiceLanguageTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceLanguageTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="-&gt;configure() throws an InvalidArgumentException if a language does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceLanguageTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;configure() can restrict the number of languages with the languages option" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceLanguageTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;clean() cleans the input value" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceLanguageTest.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorI18nChoiceTimezoneTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceTimezoneTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;clean() cleans the input value" file="/mnt/hgfs/www/symfony1/test/unit/validator/i18n/sfValidatorI18nChoiceTimezoneTest.php" line="21" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorAndTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" failures="0" errors="0" skipped="0" tests="25" assertions="25">
    <testcase name="-&gt;__construct() can take no argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;__construct() can take a validator as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;__construct() can take an array of validators as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="27" assertions="1"/>
    <testcase name="__construct() throws an exception when passing a non supported first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;addValidator() adds a validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() returns the string unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if the input value is required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;clean() throws an error for every error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="86" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() only returns the first error if halt_on_error option is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if invalid message is not empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if invalid message is not empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorAndTest.php" line="131" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorBaseTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" failures="0" errors="0" skipped="0" tests="47" assertions="47">
    <testcase name="-&gt;configure() can add some options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;configure() takes an options array as its first argument and values override default option values" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;configure() can add some message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;configure() takes a messages array as its second argument and values override default message values" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="56" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException if you pass some non existant options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="66" assertions="1"/>
    <testcase name="The exception contains the non existant option names" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="67" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException if you pass some non existant error codes" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="78" assertions="1"/>
    <testcase name="The exception contains the non existant error codes" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;getRequiredOptions() returns an array of required option names" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="85" assertions="1"/>
    <testcase name="__construct() throws an RuntimeException if you don't pass a required option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;clean() returns a cleanup version of the data to validate" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError exception if the data does not validate" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="111" assertions="1"/>
    <testcase name="-&gt;clean() does not trim whitespaces by default" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="113" assertions="1"/>
    <testcase name="null value isEmpty()" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="117" assertions="1"/>
    <testcase name="empty string value isEmpty()" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="118" assertions="1"/>
    <testcase name="empty array value isEmpty()" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="119" assertions="1"/>
    <testcase name="false value not isEmpty()" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;getEmptyValue() returns the representation of an empty value for this validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;setOption() changes options (required for example)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;setOption() can turn on whitespace trimming" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;setOption() throws an InvalidArgumentException if the option is not registered" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="142" assertions="1"/>
    <testcase name="-&gt;hasOption() returns true if the validator has the option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="147" assertions="1"/>
    <testcase name="-&gt;hasOption() returns false if the validator does not have the option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;getOption() returns the value of an option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;getOption() returns null if the option does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;addOption() adds a new option to a validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="159" assertions="1"/>
    <testcase name="-&gt;setOptions() changes all options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;getMessages() returns an array of all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;getMessage() returns an error message string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="172" assertions="1"/>
    <testcase name="-&gt;getMessage() returns an empty string if the message does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;setMessage() changes the default error message string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;setMessage() throws an InvalidArgumentException if the message is not registered" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;setMessages() changes all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="201" assertions="1"/>
    <testcase name="-&gt;addMessage() adds a new error code" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;getErrorCodes() returns an array of error codes the validator can use" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="211" assertions="1"/>
    <testcase name="::getCharset() returns the charset to use for validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="215" assertions="1"/>
    <testcase name="::setCharset() changes the charset to use for validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="217" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="228" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="232" assertions="1"/>
    <testcase name="::setDefaultMessage() sets the default message for an error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="240" assertions="1"/>
    <testcase name="::setDefaultMessage() sets the default message for an error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="241" assertions="1"/>
    <testcase name="::setDefaultMessage() sets the default message for an error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="242" assertions="1"/>
    <testcase name="::setDefaultMessage() is ignored if the validator explicitly overrides the message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="245" assertions="1"/>
    <testcase name="::setDefaultMessage() is ignored if the validator explicitly overrides the message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBaseTest.php" line="246" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorBooleanTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" failures="0" errors="0" skipped="0" tests="17" assertions="17">
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns true if the value is in the true_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is in the false_values option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() returns false if the value is null" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;clean() throws an error if the input value is not a true or a false value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() returns false if no value is given" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;clean() returns the value of the empty_value option if no value is given" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorBooleanTest.php" line="54" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorCSRFTokenTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="__construct() throws an RuntimeException if you don't pass a token option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() checks that the token is valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the token is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCSRFTokenTest.php" line="47" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorCallbackTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="__construct() throws an RuntimeException if you don't pass a callback option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;configure() switch required to false by default" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;clean() calls our validator callback" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;configure() can take an arguments option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorCallbackTest.php" line="65" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorChoiceTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" failures="0" errors="0" skipped="0" tests="13" assertions="13">
    <testcase name="__construct() throws an RuntimeException if you don't pass an expected option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is an expected value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is an expected value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not an expected value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="53" assertions="1"/>
    <testcase name="__construct() can take a sfCallable object as a choices option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not strictly an expected value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the minimum number of values are not selected" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if more than the maximum number of values are selected" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorChoiceTest.php" line="97" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorDateRangeTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="__construct() throws a sfValidatorError if you don't pass a from_date and a to_date option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;clean() returns the from and to values" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the from date is after the to date" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() take into account custom fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;clean() returns the from and to values for custom field names" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateRangeTest.php" line="71" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorDateTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" failures="0" errors="0" skipped="0" tests="52" assertions="52">
    <testcase name="-&gt;clean() returns null if not required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;clean() accepts dates parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() accepts dates parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the date is a string and is not parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;clean() accepts timestamps as input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;clean() recognises a leapyear" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the date is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the date is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the date is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;clean() accepts a regular expression to match dates" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;clean() accepts a regular expression when cleaning an array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the date does not match the regex" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() returns the expected date format in the error message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;clean() returns the expected date format error if provided" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="124" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="129" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="130" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;clean() can accept date time with the with_time option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;clean() can accept date time with the with_time option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="142" assertions="1"/>
    <testcase name="-&gt;clean() can accept date time with the with_time option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;clean() can accept date time with the with_time option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="146" assertions="1"/>
    <testcase name="-&gt;clean() output format can be change with the date_output option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;clean() output format can be change with the date_output option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;clean() can accept a max/min option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="182" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is not within the range provided by the min/max options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="190" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is not within the range provided by the min/max options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;clean() can accept a max/min option string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="206" assertions="1"/>
    <testcase name="-&gt;clean() can accept a max/min option array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="207" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is not within the range provided by the min/max options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="215" assertions="1"/>
    <testcase name="-&gt;clean() check exception message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="216" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the date is not within the range provided by the min/max options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;clean() check exception message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="226" assertions="1"/>
    <testcase name="-&gt;clean() respects incoming and default timezones" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTest.php" line="246" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorDateTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTimeTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTimeTest.php" line="17" assertions="1"/>
    <testcase name="-&gt;clean() validates date with time" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTimeTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;clean() validates date with time" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTimeTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;clean() validates date with time" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDateTimeTest.php" line="23" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorDecoratorTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" failures="0" errors="0" skipped="0" tests="20" assertions="20">
    <testcase name="__construct() options override the embedded validator options" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the value is required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="36" assertions="1"/>
    <testcase name="__construct() messages override the embedded validator messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;getErrorCodes() is a proxy to the embedded validator method" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;asString() is a proxy to the embedded validator method" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;getDefaultMessages() is a proxy to the embedded validator method" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;getDefaultOptions() is a proxy to the embedded validator method" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;getMessage() returns a message from the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;getMessages() returns messages from the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;setMessages() sets all messages for the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;getOption() returns an option from the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;getOptions() returns an array of options from the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;hasOption() returns true if the embedded validator has a given option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;setOptions() sets all options for the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the value is required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the wrapped validator failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() cleans the value by executing the clean() method from the wrapped validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;clean() throws a RuntimeException if getValidator() does not return a sfValidator instance" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorDecoratorTest.php" line="121" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorEmailTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="-&gt;clean() checks that the value is a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid email" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorEmailTest.php" line="44" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorErrorSchemaTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" failures="0" errors="0" skipped="0" tests="33" assertions="33">
    <testcase name="__construct() takes a sfValidator as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="25" assertions="1"/>
    <testcase name="__construct() can take an array of sfValidatorError as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;addError() adds an error to the error schema" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;addErrors() adds an array of errors to the current error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;addErrors() merges a sfValidatorErrorSchema to the current error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;getGlobalErrors() returns all globals/non named errors" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;getNamedErrors() returns all named errors" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;getValue() always returns null" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getArguments() always returns an empty array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;getArguments() always returns an empty array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;getMessageFormat() always returns an empty string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;getMessage() returns the error message string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;getCode() returns the error code" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="95" assertions="1"/>
    <testcase name="&quot;sfValidatorError&quot; implements Countable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="100" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the Iterator interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="111" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="118" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="119" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="120" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="121" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements the ArrayAccess interface" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="129" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="158" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="167" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="168" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="169" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="170" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="171" assertions="1"/>
    <testcase name="sfValidatorErrorSchema implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorSchemaTest.php" line="172" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorErrorTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" failures="0" errors="0" skipped="0" tests="14" assertions="14">
    <testcase name="-&gt;getValue() returns the value that has been validated with the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;getValue() returns null if there is no value key in arguments" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;getValidator() returns the validator that triggered this exception" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="28" assertions="1"/>
    <testcase name="-&gt;getArguments() returns the arguments needed to format the error message, escaped according to the current charset" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;getArguments() takes a Boolean as its first argument to return the raw arguments" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;getMessageFormat()" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;getMessage() returns the error message string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;getCode() returns the error code" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;__toString() returns the error message string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="49" assertions="1"/>
    <testcase name="sfValidatorError implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="80" assertions="1"/>
    <testcase name="sfValidatorError implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="88" assertions="1"/>
    <testcase name="sfValidatorError implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="89" assertions="1"/>
    <testcase name="sfValidatorError implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="90" assertions="1"/>
    <testcase name="sfValidatorError implements Serializable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorErrorTest.php" line="91" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorFileTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" failures="0" errors="0" skipped="0" tests="69" assertions="69">
    <testcase name="-&gt;getMimeTypesFromCategory() throws an InvalidArgumentException if the category does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;getMimeTypesFromCategory() returns an array of mime types for a given category" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;getMimeTypesFromCategory() returns an array of mime types for a given category" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;guessFromFileinfo() guesses the type of a given file" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;guessFromFileinfo() returns null if the file type is not guessable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;guessFromMimeContentType() guesses the type of a given file" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;guessFromMimeContentType() returns null if the file type is not guessable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;guessFromFileBinary() guesses the type of a given file" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;guessFromFileBinary() returns null if the file type is not guessable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;guessFromFileBinary() returns correct type if file is guessable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;getMimeType() guesses the type of a given file" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;getMimeType() returns the default type if the file type is not guessable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;getMimeType() takes all guessers from the mime_type_guessers option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the given value is not well formatted" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;clean() returns a sfValidatedFile instance" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;clean() returns a sfValidatedFile with an empty original name if the name is not passed in the initial value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;clean() returns a sfValidatedFile with a computed file size if the size is not passed in the initial value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;clean() returns a sfValidatedFile with a guessed content type" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="129" assertions="1"/>
    <testcase name="-&gt;clean() can take a &quot;validated_file_class&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="137" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of max_size" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of max_size" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of partial" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of no_tmp_dir" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of cant_write" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the error code is not UPLOAD_ERR_OK (0)" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="149" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of extension" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the file size is too large" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="164" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of max_size" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the file mime type is not in mime_types option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="179" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of mime_types" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="180" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the file is required and no file is uploaded" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="194" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the file is required and no file is uploaded" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="205" assertions="1"/>
    <testcase name="-&gt;clean() throws an error code of required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="206" assertions="1"/>
    <testcase name="-&gt;clean() handles the required option correctly" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="209" assertions="1"/>
    <testcase name="-&gt;getOriginalName() returns the original name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="221" assertions="1"/>
    <testcase name="-&gt;getTempName() returns the temp name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="222" assertions="1"/>
    <testcase name="-&gt;getType() returns the content type" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="223" assertions="1"/>
    <testcase name="-&gt;getSize() returns the size of the uploaded file" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="224" assertions="1"/>
    <testcase name="-&gt;isSaved() returns false if the file has not been saved" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="229" assertions="1"/>
    <testcase name="-&gt;getSavedName() returns null if the file has not been saved" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="230" assertions="1"/>
    <testcase name="-&gt;save() returns the saved filename" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;save() saves the file to the given path" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="233" assertions="1"/>
    <testcase name="-&gt;isSaved() returns true if the file has been saved" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="234" assertions="1"/>
    <testcase name="-&gt;getSavedName() returns the saved file name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="235" assertions="1"/>
    <testcase name="-&gt;save() returns the saved filename relative to the path given" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="239" assertions="1"/>
    <testcase name="-&gt;save() saves the file to the given path" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="240" assertions="1"/>
    <testcase name="-&gt;getSavedName() returns the saved file name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="241" assertions="1"/>
    <testcase name="-&gt;save() returns the saved filename relative to the path given" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="244" assertions="1"/>
    <testcase name="-&gt;save() saves the file to the given path and uses the path if the file is not absolute" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="245" assertions="1"/>
    <testcase name="-&gt;getSavedName() returns the saved file name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="246" assertions="1"/>
    <testcase name="-&gt;save() returns the generated file name is none was given" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="249" assertions="1"/>
    <testcase name="-&gt;getSavedName() returns the saved file name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;save() throws an Exception if you don't give a filename and the path is empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="260" assertions="1"/>
    <testcase name="-&gt;save() throws an Exception if the directory already exists and is not a directory" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="270" assertions="1"/>
    <testcase name="-&gt;getExtension() returns file extension based on the content type" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="276" assertions="1"/>
    <testcase name="-&gt;getExtension() returns file extension based on the content type" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="278" assertions="1"/>
    <testcase name="-&gt;getExtension() returns an empty string if it does not know the content type" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="280" assertions="1"/>
    <testcase name="-&gt;getExtension() returns an empty string if the content type is empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="282" assertions="1"/>
    <testcase name="-&gt;getExtension() takes a default extension as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="283" assertions="1"/>
    <testcase name="-&gt;getOriginalExtension() returns the extension based on the uploaded file name" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="288" assertions="1"/>
    <testcase name="-&gt;getOriginalExtension() returns an empty extension if the uploaded file name has no extension" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="290" assertions="1"/>
    <testcase name="-&gt;getOriginalExtension() takes a default extension as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFileTest.php" line="291" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorFromDescriptionTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" failures="0" errors="0" skipped="0" tests="98" assertions="98">
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer({min: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer({min: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer(  {  min:  18  }  )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer(  {  min:  18  }  )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer({min: 18}, {required: &quot;This is required&quot;})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer({min: 18}, {required: &quot;This is required&quot;})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(Integer)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(Integer)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (Integer)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (Integer)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    Integer\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    Integer\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer and String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer and String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer or String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer or String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer and (String or Email)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;Integer and (String or Email)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer({min: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer({min: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer({min: 18}, {required: &quot;This is required&quot;})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer({min: 18}, {required: &quot;This is required&quot;})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age:Integer)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age:Integer)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    age:Integer\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    age:Integer\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age == password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age == password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==() password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==() password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({}, {invalid: &quot;Not equal.&quot;}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({}, {invalid: &quot;Not equal.&quot;}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==(  {  },  {  invalid:  &quot;Not equal.&quot;  }  ) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==(  {  },  {  invalid:  &quot;Not equal.&quot;  }  ) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({required: true}, {invalid: &quot;Not equal.&quot;}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({required: true}, {invalid: &quot;Not equal.&quot;}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age ==({}) password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age\n   ==\n   password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age\n   ==\n   password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age == password)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age == password)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age == password)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age == password)\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    age == password\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n    age == password\n   )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age != password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age != password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt; password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt; password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt;= password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt;= password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &lt;= password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &lt;= password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt; password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age &gt; password&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and() password:String()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and() password:String()&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({}, {invalid: &quot;This is invalid.&quot;}) password:String({required: true}, {min_length: Min length error message.})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({}, {invalid: &quot;This is invalid.&quot;}) password:String({required: true}, {min_length: Min length error message.})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({required: true}, {invalid: &quot;This is invalid.&quot;}) password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({required: true}, {invalid: &quot;This is invalid.&quot;}) password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({}) password:String({}, {})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer and({}) password:String({}, {})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer\n   and\n   password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer\n   and\n   password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer and password:String)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer and password:String)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer or password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;age:Integer or password:String&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age:Integer or password:String)\n   &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n    (age:Integer or password:String)\n   &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer or password:String)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(age:Integer or password:String)&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n     age:Integer or password:String\n    )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(\n     age:Integer or password:String\n    )&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (\n    age:Integer\n     or\n    password:String\n   )\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (\n    age:Integer\n     or\n    password:String\n   )\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (first_name:String or age:Integer)\n    and\n   age:Integer({min: 18}, {required: &quot;This is required.&quot;})\n    or\n   (\n     age:Integer({max: 18})\n      and\n     is_young:Boolean({required: true})\n   )\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;\n   (first_name:String or age:Integer)\n    and\n   age:Integer({min: 18}, {required: &quot;This is required.&quot;})\n    or\n   (\n     age:Integer({max: 18})\n      and\n     is_young:Boolean({required: true})\n   )\n  &quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;email:Email and (age:Integer({min: 18}) or (age:Integer({max: 18}) and is_young:Boolean({required: true})))&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;email:Email and (age:Integer({min: 18}) or (age:Integer({max: 18}) and is_young:Boolean({required: true})))&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(password == password_bis) and begin_date &lt;= end_date and password:String({min_length: 4, max_length: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;(password == password_bis) and begin_date &lt;= end_date and password:String({min_length: 4, max_length: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;countries:Choice({choices: [France, USA, Italy, Spain]}) and password ==({}, {invalid: &quot;Passwords must be the same (%left_field% != %right_field%)&quot;}) password_bis and begin_date &lt;= end_date and password:String({min_length: 4, max_length: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="117" assertions="1"/>
    <testcase name="sfValidatorFromDescription is able to parse &quot;countries:Choice({choices: [France, USA, Italy, Spain]}) and password ==({}, {invalid: &quot;Passwords must be the same (%left_field% != %right_field%)&quot;}) password_bis and begin_date &lt;= end_date and password:String({min_length: 4, max_length: 18})&quot;" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorFromDescriptionTest.php" line="124" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorIntegerTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" failures="0" errors="0" skipped="0" tests="15" assertions="15">
    <testcase name="-&gt;clean() returns the numbers unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clean() converts strings to integers" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the value is not an integer" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the value is not an integer" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() returns null for null values" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() checks the maximum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="50" assertions="1"/>
    <testcase name="&quot;max&quot; option set the maximum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="60" assertions="1"/>
    <testcase name="&quot;max&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;clean() checks the minimum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="77" assertions="1"/>
    <testcase name="&quot;min&quot; option set the minimum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="86" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="87" assertions="1"/>
    <testcase name="&quot;min&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorIntegerTest.php" line="98" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorNumberTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" failures="0" errors="0" skipped="0" tests="13" assertions="13">
    <testcase name="-&gt;clean() returns the numbers unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clean() converts strings to numbers" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;clean() returns the numbers unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;clean() converts strings to numbers" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the value is not a number" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;clean() returns null for null values" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() checks the maximum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="39" assertions="1"/>
    <testcase name="&quot;max&quot; option set the maximum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="47" assertions="1"/>
    <testcase name="&quot;max&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;clean() checks the minimum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="64" assertions="1"/>
    <testcase name="&quot;min&quot; option set the minimum number allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="74" assertions="1"/>
    <testcase name="&quot;min&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorNumberTest.php" line="85" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorOrTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" failures="0" errors="0" skipped="0" tests="18" assertions="18">
    <testcase name="-&gt;__construct() can take no argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;__construct() can take a validator as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;__construct() can take an array of validators as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="27" assertions="1"/>
    <testcase name="_construct() throws an exception when passing a non supported first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;addValidator() adds a validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;clean() returns the string unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if the input value is required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if all the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorSchemaError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if invalid message is not empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if invalid message is not empty" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() returns the string unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="94" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorOrTest.php" line="106" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorPassTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorPassTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;clean() always returns the value unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorPassTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clean() always returns the value unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorPassTest.php" line="20" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorRegexTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" failures="0" errors="0" skipped="0" tests="11" assertions="11">
    <testcase name="__construct() throws an RuntimeException if you don't pass a pattern option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="29" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value match the regex" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value does not match the pattern" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value does not match the regex if must_match is false" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value matches the pattern if must_match is false" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;clean() uses the pattern returned by a sfCallable pattern option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;getPattern() returns the regular expression" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;getPattern() returns a regular expression from a sfCallable" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorRegexTest.php" line="89" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorSchemaCompareTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" failures="0" errors="0" skipped="0" tests="114" assertions="114">
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() checks that the values match the comparison" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is the comparison failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;clean() throws an InvalidArgumentException exception if the first argument is not an array of value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() throws an InvalidArgumentException exception if the operator does not exist" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="118" assertions="1"/>
    <testcase name="-&gt;asString() returns a string representation of the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaCompareTest.php" line="121" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorSchemaFilterTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" failures="0" errors="0" skipped="0" tests="6" assertions="6">
    <testcase name="-&gt;clean() executes the embedded validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;clean() throws a InvalidArgumentException if the input value is not an array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the embedded validator failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the embedded validator failed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaFilterTest.php" line="54" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorSchemaForEachTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="-&gt;__construct() takes a sfValidator object as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;__construct() takes a number of times to duplicate the validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;clean() does not throw global errors" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() throws named errors" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaForEachTest.php" line="37" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorSchemaTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" failures="0" errors="0" skipped="0" tests="84" assertions="84">
    <testcase name="-&gt;__construct() can take no argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;__construct() can take an array of named sfValidator objects" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="57" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException when passing a non supported first argument" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="65" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="73" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="82" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="86" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="87" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="90" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="91" assertions="1"/>
    <testcase name="sfValidatorSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;configure() sets &quot;allow_extra_fields&quot; option to false by default" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;configure() sets &quot;filter_extra_fields&quot; option to true by default" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;configure() has a default error message for the &quot;extra_fields&quot; error" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;__construct() can override the default value for the &quot;allow_extra_fields&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;__construct() can override the default value for the &quot;filter_extra_fields&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;__construct() can override the default message for the &quot;extra_fields&quot; error message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;clean() converts null to empty array before validation" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;clean() throws an InvalidArgumentException exception if the first argument is not an array of value" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="125" assertions="1"/>
    <testcase name="-&gt;clean() returns the string unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if a you give a non existant field" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="138" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if a required field is not provided" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;getPreValidator() returns the current pre validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="163" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if a pre-validator fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="172" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;getPostValidator() returns the current post validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;clean() executes post validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="184" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if a post-validator fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="196" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="197" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="198" assertions="1"/>
    <testcase name="-&gt;clean() returns null values for fields not present in the input array" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="202" assertions="1"/>
    <testcase name="-&gt;clean() filters non existant fields if &quot;allow_extra_fields&quot; is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="208" assertions="1"/>
    <testcase name="-&gt;clean() filters non existant fields if &quot;allow_extra_fields&quot; is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="212" assertions="1"/>
    <testcase name="-&gt;clean() do not filter non existant fields if &quot;filter_extra_fields&quot; is false" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="216" assertions="1"/>
    <testcase name="-&gt;clean() do not filter non existant fields if &quot;filter_extra_fields&quot; is false" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="220" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="233" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="234" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorErrorSchema exception if one of the validators fails" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="248" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="249" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="251" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="282" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="283" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="284" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="285" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="286" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="287" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="288" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="303" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="304" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="305" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="306" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="307" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="308" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="309" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="328" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="329" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="330" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="341" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="342" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="343" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="368" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="369" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="370" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="371" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="372" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="373" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception with all error messages" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="374" assertions="1"/>
    <testcase name="__clone() clones embedded validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="383" assertions="1"/>
    <testcase name="__clone() clones embedded validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="386" assertions="1"/>
    <testcase name="__clone() clones embedded validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="387" assertions="1"/>
    <testcase name="__clone() clones embedded validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="386" assertions="1"/>
    <testcase name="__clone() clones embedded validators" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="387" assertions="1"/>
    <testcase name="__clone() clones the pre validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="389" assertions="1"/>
    <testcase name="__clone() clones the post validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="390" assertions="1"/>
    <testcase name="__clone() clones the pre validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="395" assertions="1"/>
    <testcase name="__clone() clones the pre validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="396" assertions="1"/>
    <testcase name="__clone() clones the post validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="397" assertions="1"/>
    <testcase name="__clone() clones the post validator" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorSchemaTest.php" line="398" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorStringTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" failures="0" errors="0" skipped="0" tests="12" assertions="12">
    <testcase name="-&gt;clean() returns the string unmodified" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;clean() converts the value to a string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;clean() converts the value to a string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;clean() checks the maximum length allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="26" assertions="1"/>
    <testcase name="&quot;max_length&quot; option set the maximum length of the string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="36" assertions="1"/>
    <testcase name="&quot;max_length&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() checks the minimum length allowed" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="53" assertions="1"/>
    <testcase name="&quot;min_length&quot; option set the minimum length of the string" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="63" assertions="1"/>
    <testcase name="&quot;min_length&quot; error message customization" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="74" assertions="1"/>
    <testcase name="&quot;sfValidatorString&quot; supports UTF-8" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorStringTest.php" line="87" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" failures="0" errors="0" skipped="0" tests="27" assertions="27">
    <testcase name="-&gt;clean() returns null if not required" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;clean() accepts times parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;clean() accepts times parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time is a string and is not parsable by strtotime" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;clean() accepts timestamps as input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;clean() accepts an array as an input" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time is not valid" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;clean() accepts a regular expression to match times" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError if the time does not match the regex" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;clean() returns the expected time format in the error message" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;clean() returns the expected time format error if provided" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;clean() output format can be change with the time_output option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the time is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the time is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the time is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;clean() throws an exception if the time is empty and required is true" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorTimeTest.php" line="140" assertions="1"/>
  </testsuite>
  <testsuite name="sfValidatorUrlTest" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" failures="0" errors="0" skipped="0" tests="15" assertions="15">
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() checks that the value is a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;clean() throws an sfValidatorError if the value is not a valid URL" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;clean() throws a sfValidatorError" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;clean() only allows protocols specified in the protocols option" file="/mnt/hgfs/www/symfony1/test/unit/validator/sfValidatorUrlTest.php" line="60" assertions="1"/>
  </testsuite>
  <testsuite name="sfViewCacheManagerTest" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" failures="0" errors="0" skipped="0" tests="41" assertions="41">
    <testcase name="-&gt;initialize() takes a sfCache object as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() creates a simple cache key from an internal URI" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() can take a hostName as second parameter" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="155" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() can take a serialized set of vary headers as third parameter" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() includes request parameters as key/value pairs" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="158" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() reorders request parameters alphabetically" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="159" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() throws an sfException when passed an internal URI with a rule" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() does not throw an sfException when passed an internal URI with a @sf_cache_partial rule" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="173" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() throws an sfException when passed an internal URI with a @sf_cache_partial rule with no module or action param" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="186" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() can deal with internal URIs to partials" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="189" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() can deal with internal URIs to contextual partials" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="193" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() can take a prefix for contextual partials as fourth parameter" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="195" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() creates a directory friendly vary cache key" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="199" assertions="1"/>
    <testcase name="-&gt;addCache() register a cache configuration for an action" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="209" assertions="1"/>
    <testcase name="-&gt;addCache() register a cache configuration for an action" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="213" assertions="1"/>
    <testcase name="-&gt;set() returns false if the action is not cacheable" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="218" assertions="1"/>
    <testcase name="-&gt;set() returns true if the action is cacheable" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="220" assertions="1"/>
    <testcase name="-&gt;set() stores the first parameter in a key computed from the second parameter" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="225" assertions="1"/>
    <testcase name="-&gt;set() works with URIs with parameters" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="230" assertions="1"/>
    <testcase name="-&gt;set() stores a different version for each set of parameters" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="231" assertions="1"/>
    <testcase name="-&gt;set() stores a different version for each set of parameters" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;set() accepts keys to partials" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="237" assertions="1"/>
    <testcase name="-&gt;set() accepts keys to contextual partials" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="242" assertions="1"/>
    <testcase name="-&gt;get() returns null if the action is not cacheable" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="247" assertions="1"/>
    <testcase name="-&gt;get() returns the saved content if the action is cacheable" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="250" assertions="1"/>
    <testcase name="-&gt;has() returns false if the action is not cacheable" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="255" assertions="1"/>
    <testcase name="-&gt;has() returns the cache does not exist for the action" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="257" assertions="1"/>
    <testcase name="-&gt;get() returns true if the action is in cache" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="259" assertions="1"/>
    <testcase name="-&gt;remove() removes cache content for an action" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="267" assertions="1"/>
    <testcase name="-&gt;remove() removes accepts an internal URI as first parameter" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="272" assertions="1"/>
    <testcase name="-&gt;remove() does not remove cache content for keys not matching the internal URI" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="273" assertions="1"/>
    <testcase name="-&gt;remove() accepts wildcards in URIs and then removes all keys matching the pattern" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="281" assertions="1"/>
    <testcase name="-&gt;remove() accepts wildcards in URIs and then removes all keys matching the pattern" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="282" assertions="1"/>
    <testcase name="-&gt;remove() accepts wildcards in URIs and lets keys not matching the pattern unchanged" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="283" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() uses &quot;cache_key_use_vary_headers&quot; option to know if vary headers changes cache key." file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="287" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() uses &quot;cache_key_use_host_name&quot; option to know if vary headers changes cache key." file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="290" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() allows the use of both &quot;cache_key_use_host_name&quot; and &quot;cache_key_use_vary_headers&quot; options." file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="293" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() prevents directory traversal" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="296" assertions="1"/>
    <testcase name="-&gt;generateCacheKey() prevents directory traversal" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="297" assertions="1"/>
    <testcase name="-&gt;getCurrentCacheKey() appends GET parameters to an existing query string" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="302" assertions="1"/>
    <testcase name="-&gt;getCurrentCacheKey() adds a query string of GET parameters if none is there" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewCacheManagerTest.php" line="304" assertions="1"/>
  </testsuite>
  <testsuite name="sfViewParameterHolderTest" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" failures="0" errors="0" skipped="0" tests="21" assertions="21">
    <testcase name="-&gt;initialize() initializes the parameters as an empty array" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of default parameters as its second argument" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="45" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of options as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;initialize() takes an array of options as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;isEscaped() returns true if data will be escaped" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;isEscaped() returns false if data won't be escaped" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;setEscaping() changes the escaping strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;setEscapingMethod() changes the escaping method" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;getEscapingMethod() returns an empty value if the method is empty" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;getEscapingMethod() throws an InvalidArgumentException if the escaping method does not exist" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;toArray() returns an array representation of the parameter holder" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;toArray() throws an InvalidArgumentException if the escaping strategy does not exist" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;on&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;on&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;on&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;on&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;off&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;on&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;off&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;toArray() knows about the &quot;off&quot; strategy" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="117" assertions="1"/>
    <testcase name="sfViewParameterHolder implements the Serializable interface" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewParameterHolderTest.php" line="123" assertions="1"/>
  </testsuite>
  <testsuite name="sfViewTest" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" failures="0" errors="0" skipped="0" tests="19" assertions="19">
    <testcase name="-&gt;isDecorator() returns true if the current view have to be decorated" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;setDecorator() sets the decorator status for the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;initialize() uses the format to configure the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;initialize() uses the format to configure the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="54" assertions="1"/>
    <testcase name="-&gt;initialize() uses the format to configure the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="55" assertions="1"/>
    <testcase name="-&gt;initialize() uses the format to configure the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;initialize() uses the format to configure the view" file="/mnt/hgfs/www/symfony1/test/unit/view/sfViewTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;getParameterHolder() returns a parameter holder instance" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="34" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns false if the parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="35" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the default value if parameter does not exist" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="36" assertions="1"/>
    <testcase name="-&gt;hasParameter() returns true if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="38" assertions="1"/>
    <testcase name="-&gt;hasParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="39" assertions="1"/>
    <testcase name="-&gt;getParameter() returns the value of the parameter" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="40" assertions="1"/>
    <testcase name="-&gt;getParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="41" assertions="1"/>
    <testcase name="-&gt;getParameter() does not return the default value if the parameter exists" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="42" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="54" assertions="1"/>
    <testcase name="-&gt;setParameter() is a proxy method" file="/mnt/hgfs/www/symfony1/test/unit/sfParameterHolderTest.class.php" line="55" assertions="1"/>
    <testcase name="__call() accepts new methods via sfEventDispatcher" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="25" assertions="1"/>
    <testcase name="__call() throws an exception if the method does not exist as a sfEventDispatcher listener" file="/mnt/hgfs/www/symfony1/test/unit/sfEventDispatcherTest.class.php" line="34" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nChoiceCountryTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" failures="0" errors="0" skipped="0" tests="8" assertions="8">
    <testcase name="-&gt;configure() throws an InvalidArgumentException if a country does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;configure() can restrict the number of countries with the countries option" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;render() renders all countries as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders all countries as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() does not contain dummy data" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;render() does not contain region data" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCountryTest.php" line="56" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nChoiceCurrencyTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;configure() throws an InvalidArgumentException if a currency does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;configure() can restrict the number of currencies with the currencies option" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;render() renders all currencies as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders all currencies as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() does not output ICU dummy data" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceCurrencyTest.php" line="55" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nChoiceLanguageTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" failures="0" errors="0" skipped="0" tests="6" assertions="6">
    <testcase name="-&gt;configure() throws an InvalidArgumentException if a language does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="27" assertions="1"/>
    <testcase name="-&gt;configure() can restrict the number of languages with the languages option" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;render() renders all languages as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders all languages as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="46" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceLanguageTest.php" line="51" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nChoiceTimezoneTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceTimezoneTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="-&gt;render() renders all timezones as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceTimezoneTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;render() renders all timezones as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceTimezoneTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceTimezoneTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;render() renders an empty option if add_empty is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nChoiceTimezoneTest.php" line="36" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nDateTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="30" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;configure() throws an InvalidArgumentException if the month_format type does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTest.php" line="47" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nDateTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTimeTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nDateTimeTest.php" line="22" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormI18nTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nTimeTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nTimeTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nTimeTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nTimeTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;configure() automatically changes the date format for the given culture" file="/mnt/hgfs/www/symfony1/test/unit/widget/i18n/sfWidgetFormI18nTimeTest.php" line="27" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormChoiceTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" failures="0" errors="0" skipped="0" tests="19" assertions="19">
    <testcase name="-&gt;getRenderer() guesses the renderer class to use" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;getRenderer() guesses the renderer class to use" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;getRenderer() guesses the renderer class to use" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;getRenderer() guesses the renderer class to use" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;getRenderer() uses the renderer_class as the widget class if provided" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;getRenderer() uses the renderer as the widget if provided" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag by default" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="67" assertions="1"/>
    <testcase name="-&gt;render() uses the id format specified" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;render() adds a multiple attribute for multiple selects" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;render() uses a checkbox list when expanded and multiple are true" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;render() uses a checkbox list when expanded is true and multiple is false" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;getJavaScripts() returns the stylesheets of the renderer widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;getStylesheets() returns the JavaScripts of the renderer widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="109" assertions="1"/>
    <testcase name="__clone() changes the choices is a callable and the object is an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="116" assertions="1"/>
    <testcase name="__clone() changes nothing if the choices is a callable and the object is not an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormChoiceTest.php" line="121" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormDateRangeTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateRangeTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;render() remplaces %from_date% and %to_date%" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateRangeTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;render() translates the template option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateRangeTest.php" line="48" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormDateTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" failures="0" errors="0" skipped="0" tests="43" assertions="43">
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 10 years around the current one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 12 months in a year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="79" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 31 days in a month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 10 years around the current one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 12 months in a year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 31 days in a month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="98" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default / as a separator" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="104" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default / as a separator" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="105" assertions="1"/>
    <testcase name="__construct() can change the default date format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="110" assertions="1"/>
    <testcase name="__construct() can change the default date format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="111" assertions="1"/>
    <testcase name="__construct() can change the default date format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="116" assertions="1"/>
    <testcase name="__construct() can change the default array used for years" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="125" assertions="1"/>
    <testcase name="__construct() can change the default array used for months" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="126" assertions="1"/>
    <testcase name="__construct() can change the default array used for days" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="127" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the three embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="132" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the three embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="136" assertions="1"/>
    <testcase name="-&gt;render() uses the id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="142" assertions="1"/>
    <testcase name="-&gt;render() uses the id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;render() uses the id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTest.php" line="144" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormDateTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" failures="0" errors="0" skipped="0" tests="64" assertions="64">
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="36" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="37" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="38" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="48" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="62" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="69" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 10 years around the current one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 12 months in a year" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 31 days in a month" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 24 hours in a day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 minutes in an hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 seconds in a minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default / as a format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default / as a format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default : as a format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default : as a format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="92" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="99" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="100" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="101" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="102" assertions="1"/>
    <testcase name="-&gt;render() does not render the time if the with_time option is disabled" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="110" assertions="1"/>
    <testcase name="__construct() throws a InvalidArgumentException if the date/time options is not an array" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the five embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="129" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the five embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;render() month considers id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="141" assertions="1"/>
    <testcase name="-&gt;render() day considers id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="142" assertions="1"/>
    <testcase name="-&gt;render() year considers id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;render() hour considers id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;render() minute considers id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;render() month does not override subwidget id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;render() day does not override subwidget id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;render() year does not override subwidget id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="152" assertions="1"/>
    <testcase name="-&gt;render() hour does not override subwidget id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="153" assertions="1"/>
    <testcase name="-&gt;render() minute does not override subwidget id_format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormDateTimeTest.php" line="154" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormFilterDateTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormFilterDateTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;render() translates the empty_label option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormFilterDateTest.php" line="48" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormFilterInputTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormFilterInputTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;render() translates the empty_label option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormFilterInputTest.php" line="38" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputCheckboxTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="22" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="25" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputCheckboxTest.php" line="27" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputFileEditableTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" failures="0" errors="0" skipped="0" tests="7" assertions="7">
    <testcase name="-&gt;render() throws an exception if you don' pass a &quot;file_src&quot; option." file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="56" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileEditableTest.php" line="80" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputFileTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputFileTest.php" line="19" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputHiddenTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputHiddenTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputHiddenTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;isHidden() returns true" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputHiddenTest.php" line="23" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputPasswordTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputPasswordTest.php" failures="0" errors="0" skipped="0" tests="3" assertions="3">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputPasswordTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputPasswordTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputPasswordTest.php" line="24" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormInputTextTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" failures="0" errors="0" skipped="0" tests="5" assertions="5">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;render() can take a value for the input" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;render() can take HTML attributes as its third argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" line="21" assertions="1"/>
    <testcase name="__construct() can take default HTML attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" line="24" assertions="1"/>
    <testcase name="-&gt;render() can override default attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormInputTextTest.php" line="25" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaDecoratorTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" failures="0" errors="0" skipped="0" tests="16" assertions="16">
    <testcase name="-&gt;getWidget() returns the decorated widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="23" assertions="1"/>
    <testcase name="-&gt;render() decorates the widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="35" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="41" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="42" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="51" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="55" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="56" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="57" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="58" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="61" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="62" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="63" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="64" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="68" assertions="1"/>
    <testcase name="sfWidgetFormSchemaDecorator implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="69" assertions="1"/>
    <testcase name="__clone() clones the embedded widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaDecoratorTest.php" line="74" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaForEachTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaForEachTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="__construct() takes a sfWidgetFormSchema as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaForEachTest.php" line="23" assertions="1"/>
    <testcase name="__construct() takes a sfWidgetFormSchema as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaForEachTest.php" line="24" assertions="1"/>
    <testcase name="__construct() takes a sfWidgetFormSchema as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaForEachTest.php" line="25" assertions="1"/>
    <testcase name="__construct() takes a sfWidgetFormSchema as its first argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaForEachTest.php" line="26" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaFormatterListTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterListTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;formatRow() formats a field in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterListTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;formatErrorRow() formats an array of errors in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterListTest.php" line="40" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaFormatterTableTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTableTest.php" failures="0" errors="0" skipped="0" tests="2" assertions="2">
    <testcase name="-&gt;formatRow() formats a field in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTableTest.php" line="26" assertions="1"/>
    <testcase name="-&gt;formatErrorRow() formats an array of errors in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTableTest.php" line="40" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaFormatterTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" failures="0" errors="0" skipped="0" tests="28" assertions="28">
    <testcase name="-&gt;formatRow() formats a field in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="47" assertions="1"/>
    <testcase name="-&gt;formatErrorRow() formats an array of errors in a row" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;unnestErrors() returns an array of formatted errors" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="68" assertions="1"/>
    <testcase name="-&gt;unnestErrors() unnests errors" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;getRowFormat() -&gt;setRowFormat()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getErrorRowFormat() -&gt;setErrorRowFormat()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getErrorListFormatInARow() -&gt;setErrorListFormatInARow()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getErrorRowFormatInARow() -&gt;setErrorRowFormatInARow()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getNamedErrorRowFormatInARow() -&gt;setNamedErrorRowFormatInARow()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;getDecoratorFormat() -&gt;setDecoratorFormat()" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="78" assertions="1"/>
    <testcase name="get18nCallable() retrieves i18n callable correctly" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="96" assertions="1"/>
    <testcase name="get18nCallable() retrieves i18n sfCallable correctly" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="99" assertions="1"/>
    <testcase name="setTranslationCallable() throws InvalidException if i18n callable is not a valid callable" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="108" assertions="1"/>
    <testcase name="translate() call i18n sfCallable as expected" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="117" assertions="1"/>
    <testcase name="translate() call i18n callable as expected" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;generateLabelName() generates a label value from a label name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="130" assertions="1"/>
    <testcase name="-&gt;generateLabelName() removes _id from auto-generated labels" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="131" assertions="1"/>
    <testcase name="-&gt;setLabels() changes all current labels" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="134" assertions="1"/>
    <testcase name="-&gt;setLabel() sets a label value" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="137" assertions="1"/>
    <testcase name="-&gt;generateLabel() returns an empty string if the label is false" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="140" assertions="1"/>
    <testcase name="-&gt;generateLabelName() returns a label tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;generateLabelName() returns a label tag with optional HTML attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="144" assertions="1"/>
    <testcase name="-&gt;generateLabelName() returns a label tag with specified for-id" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="145" assertions="1"/>
    <testcase name="-&gt;generateLabelName() returns a label tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;generateLabelName() returns a i18ned label tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="150" assertions="1"/>
    <testcase name="setTranslationCatalogue() has set the i18n catalogue correctly" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="160" assertions="1"/>
    <testcase name="setTranslationCatalogue() throws an exception when catalogue name is incorrectly typed" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="169" assertions="1"/>
    <testcase name="translate() passes back the catalogue to the translation callable" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaFormatterTest.php" line="180" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSchemaTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" failures="0" errors="0" skipped="0" tests="95" assertions="95">
    <testcase name="__construct() can take no argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="21" assertions="1"/>
    <testcase name="__construct() can take an array of named sfWidget objects" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="24" assertions="1"/>
    <testcase name="__construct() throws an exception when passing a non supported first argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="32" assertions="1"/>
    <testcase name="__construct() sets &quot;form_formatter&quot; option to &quot;table&quot; by default" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="35" assertions="1"/>
    <testcase name="__construct() can override the default value for the &quot;form_formatter&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="37" assertions="1"/>
    <testcase name="__construct() sets &quot;name_format&quot; option to &quot;table&quot; by default" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="39" assertions="1"/>
    <testcase name="__construct() can override the default value for the &quot;name_format&quot; option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="41" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="49" assertions="1"/>
    <testcase name="The widget schema is associated with the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="50" assertions="1"/>
    <testcase name="The widget schema is associated with the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="51" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="60" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="64" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="65" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="69" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="70" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="74" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="75" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="80" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="81" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="85" assertions="1"/>
    <testcase name="sfWidgetFormSchema implements the ArrayAccess interface for the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="86" assertions="1"/>
    <testcase name="-&gt;getFormFormatter() returns a sfWidgetSchemaFormatter object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;addFormFormatter() associates a name with a sfWidgetSchemaFormatter object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;setFormFormatterName() set the names of the formatter to use when rendering" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;setFormFormatterName() throws a InvalidArgumentException when the form format name is not associated with a formatter" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;getFormFormatters() returns an array of all formatter for this widget schema" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="115" assertions="1"/>
    <testcase name="-&gt;generateName() returns a HTML name attribute value for a given field name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;setNameFormat() changes the name format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;getNameFormat() returns the name format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;generateName() returns the name unchanged if the format is false" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;setNameFormat() throws an InvalidArgumentException if the format does not contain %s" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="135" assertions="1"/>
    <testcase name="-&gt;generateName() returns a HTML name attribute value for a given field name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="147" assertions="1"/>
    <testcase name="-&gt;generateName() returns a HTML name attribute value for a given field name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="148" assertions="1"/>
    <testcase name="-&gt;getParent() returns null if there is no parent widget schema" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="154" assertions="1"/>
    <testcase name="-&gt;getParent() returns the parent widget schema" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="156" assertions="1"/>
    <testcase name="-&gt;getLabels() returns all current labels" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;setLabels() changes all current labels" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="165" assertions="1"/>
    <testcase name="-&gt;setLabel() sets a label value" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="168" assertions="1"/>
    <testcase name="-&gt;setHelps() changes all help messages" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="174" assertions="1"/>
    <testcase name="-&gt;setHelp() changes one help message" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="176" assertions="1"/>
    <testcase name="-&gt;getLabels() returns the labels" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="182" assertions="1"/>
    <testcase name="-&gt;getLabel() returns the label for a given field" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="183" assertions="1"/>
    <testcase name="-&gt;setLabel() sets a label for a given field" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="185" assertions="1"/>
    <testcase name="-&gt;setLabel() can also set the label for the widget schema" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="187" assertions="1"/>
    <testcase name="-&gt;getDefaults() returns the default values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="193" assertions="1"/>
    <testcase name="-&gt;getDefault() returns the default value for a given field" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="194" assertions="1"/>
    <testcase name="-&gt;setDefault() sets a default value for a given field" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="196" assertions="1"/>
    <testcase name="-&gt;needsMultipartForm() returns false if the form schema does not have a widget that needs a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="201" assertions="1"/>
    <testcase name="-&gt;needsMultipartForm() returns true if the form schema does not have a widget that needs a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="203" assertions="1"/>
    <testcase name="-&gt;renderField() renders a field to HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="208" assertions="1"/>
    <testcase name="-&gt;renderField() renders a field to HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="214" assertions="1"/>
    <testcase name="-&gt;renderField() throws an InvalidArgumentException if the field does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="223" assertions="1"/>
    <testcase name="-&gt;setPositions() changes all field positions" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="232" assertions="1"/>
    <testcase name="-&gt;setPositions() changes all field positions" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="234" assertions="1"/>
    <testcase name="-&gt;setPositions() changes all field positions" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="240" assertions="1"/>
    <testcase name="-&gt;setPositions() does not repeat the fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="246" assertions="1"/>
    <testcase name="-&gt;setPositions() throws an InvalidArgumentException if you give it a non existant field name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="255" assertions="1"/>
    <testcase name="-&gt;setPositions() throws an InvalidArgumentException if you miss a field name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="265" assertions="1"/>
    <testcase name="-&gt;moveField() can move a field before another one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="276" assertions="1"/>
    <testcase name="-&gt;moveField() can move a field to the end" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="278" assertions="1"/>
    <testcase name="-&gt;moveField() can move a field to the beginning" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="280" assertions="1"/>
    <testcase name="-&gt;moveField() can move a field before another one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="282" assertions="1"/>
    <testcase name="-&gt;moveField() throws an LogicException if you don't pass a relative field name with AFTER" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="290" assertions="1"/>
    <testcase name="-&gt;moveField() throws an LogicException if you don't pass a relative field name with BEFORE" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="299" assertions="1"/>
    <testcase name="-&gt;moveField() compares field names as strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="306" assertions="1"/>
    <testcase name="-&gt;moveField() compares field names as strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="310" assertions="1"/>
    <testcase name="-&gt;moveField() compares field names as strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="314" assertions="1"/>
    <testcase name="-&gt;moveField() compares field names as strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="318" assertions="1"/>
    <testcase name="-&gt;getGlobalErrors() returns an array of global errors, errors for hidden fields, and errors for non existent fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="339" assertions="1"/>
    <testcase name="-&gt;render() throws an InvalidArgumentException if the second argument is not an array" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="352" assertions="1"/>
    <testcase name="-&gt;render() renders a schema to HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="382" assertions="1"/>
    <testcase name="-&gt;render() is able to render widget schema that only contains hidden fields" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="386" assertions="1"/>
    <testcase name="-&gt;render() is able to render widget schema that only contains hidden fields when the last field is a form" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="408" assertions="1"/>
    <testcase name="__clone() clones embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="420" assertions="1"/>
    <testcase name="__clone() clones embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="423" assertions="1"/>
    <testcase name="The parents hafe been changed" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="424" assertions="1"/>
    <testcase name="__clone() clones embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="427" assertions="1"/>
    <testcase name="__clone() clones embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="423" assertions="1"/>
    <testcase name="The parents hafe been changed" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="424" assertions="1"/>
    <testcase name="__clone() clones embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="427" assertions="1"/>
    <testcase name="__clone() returns a sfWidgetFormSchema that has the Formatters attached" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="431" assertions="1"/>
    <testcase name="__clone() clones formatters, so that changes to the original one have no effect to the cloned formatter." file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="432" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="440" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="443" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="444" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="446" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="447" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="443" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="444" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="446" assertions="1"/>
    <testcase name="__clone() clones form formatters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="447" assertions="1"/>
    <testcase name="setDefaultFormFormatterName() has the &quot;sfWidgetFormSchemaFormatterTable&quot; form formatter by default" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="453" assertions="1"/>
    <testcase name="setDefaultFormFormatterName() changes the default form formatter name correctly" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="457" assertions="1"/>
    <testcase name="-&gt;getJavaScripts() returns an array of stylesheets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="488" assertions="1"/>
    <testcase name="-&gt;getStylesheets() returns an array of JavaScripts" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSchemaTest.php" line="489" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSelectCheckboxTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" failures="0" errors="0" skipped="0" tests="13" assertions="13">
    <testcase name="-&gt;render() renders a checkbox tag with the value checked" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a checkbox tag using extra attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;render() considers false to be an integer 0" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() considers true to be an integer 1" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;render() returns an empty HTML string if no choices" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;render() has support for groups" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;render() accepts a single group" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="78" assertions="1"/>
    <testcase name="__construct() throws an RuntimeException if you don't pass a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;render() accepts a sfCallable as a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="114" assertions="1"/>
    <testcase name="-&gt;render() escapes the choices" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="120" assertions="1"/>
    <testcase name="__clone() changes the choices is a callable and the object is an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="127" assertions="1"/>
    <testcase name="__clone() changes nothing if the choices is a callable and the object is not an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectCheckboxTest.php" line="132" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSelectManyTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectManyTest.php" failures="0" errors="0" skipped="0" tests="1" assertions="1">
    <testcase name="__construct() creates a multiple select tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectManyTest.php" line="21" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSelectRadioTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" failures="0" errors="0" skipped="0" tests="12" assertions="12">
    <testcase name="-&gt;render() renders a radio tag with the value checked" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() renders a radio tag using extra attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;render() considers false to be an integer 0" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() considers true to be an integer 1" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;render() returns an empty HTML string if no choices" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="61" assertions="1"/>
    <testcase name="-&gt;render() has support for groups" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="71" assertions="1"/>
    <testcase name="__construct() throws an RuntimeException if you don't pass a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;render() accepts a sfCallable as a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="93" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;render() escapes the choices" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="113" assertions="1"/>
    <testcase name="__clone() changes the choices is a callable and the object is an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="120" assertions="1"/>
    <testcase name="__clone() changes nothing if the choices is a callable and the object is not an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectRadioTest.php" line="125" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormSelectTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" failures="0" errors="0" skipped="0" tests="22" assertions="22">
    <testcase name="-&gt;render() renders a select tag with the value selected" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;render() renders all choices as option tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;render() always generate a value attribute, even for empty keys" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;render() always generate a value attribute, even for empty keys" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;render() automatically adds a multiple HTML attributes if multiple is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;render() automatically adds a [] at the end of the name if multiple is true" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag with the value selected" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag with the value selected" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;render() automatically does not add a [] at the end of the name if multiple is true and the name already has one" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;render() has support for optgroups tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="65" assertions="1"/>
    <testcase name="__construct() throws an RuntimeException if you don't pass a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="88" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="100" assertions="1"/>
    <testcase name="-&gt;render() translates the options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="101" assertions="1"/>
    <testcase name="-&gt;render() accepts a sfCallable as a choices option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;render() does not pass the select HTML attributes to the option tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="120" assertions="1"/>
    <testcase name="-&gt;render() does not pass the select HTML attributes to the option tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="121" assertions="1"/>
    <testcase name="-&gt;render() does not pass the select HTML attributes to the option tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="126" assertions="1"/>
    <testcase name="-&gt;render() does not pass the select HTML attributes to the option tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="127" assertions="1"/>
    <testcase name="__clone() changes the choices is a callable and the object is an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="134" assertions="1"/>
    <testcase name="__clone() changes nothing if the choices is a callable and the object is not an instance of the current object" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormSelectTest.php" line="139" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" failures="0" errors="0" skipped="0" tests="35" assertions="35">
    <testcase name="__construct() takes a id_format argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="31" assertions="1"/>
    <testcase name="-&gt;render() id attributes takes precedence over auto generated ids" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="32" assertions="1"/>
    <testcase name="__construct() can disable id generation" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="35" assertions="1"/>
    <testcase name="-&gt;getLabel() returns null if no label has been defined" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="40" assertions="1"/>
    <testcase name="-&gt;getLabel() returns the label" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;setLabel() changes the label" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="44" assertions="1"/>
    <testcase name="-&gt;getDefault() returns null if no default value has been defined" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;getDefault() returns the default value" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;setDefault() changes the default value for the widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="53" assertions="1"/>
    <testcase name="-&gt;getParent() returns null if no widget schema has been defined" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;setParent() associates a widget schema to the widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="60" assertions="1"/>
    <testcase name="-&gt;setIdFormat() sets the format for the generated id attribute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;isHidden() returns false if a widget is not hidden" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="70" assertions="1"/>
    <testcase name="-&gt;isHidden() returns true if a widget is hidden" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;needsMultipartForm() returns false if the widget does not need a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;needsMultipartForm() returns false if the widget needs a multipart form" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="78" assertions="1"/>
    <testcase name="-&gt;renderTag() does not add an id if no name is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="83" assertions="1"/>
    <testcase name="-&gt;renderTag() does not add an id if one is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="84" assertions="1"/>
    <testcase name="-&gt;renderTag() adds an id if none is given and a name is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;renderTag() uses the id_format to generate an id" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="87" assertions="1"/>
    <testcase name="-&gt;renderTag() does not close tag if not in XHTML mode" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="89" assertions="1"/>
    <testcase name="-&gt;renderContentTag() does not add an id if no name is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="95" assertions="1"/>
    <testcase name="-&gt;renderContentTag() does not add an id if one is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;renderContentTag() adds an id if none is given and a name is given" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;renderContentTag() uses the id_format to generate an id" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="99" assertions="1"/>
    <testcase name="-&gt;setIdFormat() sets the format of the widget id" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="105" assertions="1"/>
    <testcase name="-&gt;generateId() removes the [] from the name" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="106" assertions="1"/>
    <testcase name="-&gt;generateId() accepts array value" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;generateId() replaces [] with _" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="108" assertions="1"/>
    <testcase name="-&gt;generateId() takes the value into account if provided" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="109" assertions="1"/>
    <testcase name="-&gt;generateId() leaves valid ids" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="110" assertions="1"/>
    <testcase name="-&gt;generateId() returns the name if the id format does not contain %s" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="113" assertions="1"/>
    <testcase name="-&gt;generateId() removes invalid characters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="116" assertions="1"/>
    <testcase name="-&gt;generateId() removes invalid characters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;generateId() removes invalid characters" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTest.php" line="118" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormTextareaTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTextareaTest.php" failures="0" errors="0" skipped="0" tests="4" assertions="4">
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTextareaTest.php" line="19" assertions="1"/>
    <testcase name="-&gt;render() escapes the content" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTextareaTest.php" line="20" assertions="1"/>
    <testcase name="-&gt;render() does not double escape content" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTextareaTest.php" line="21" assertions="1"/>
    <testcase name="-&gt;render() renders the widget as HTML" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTextareaTest.php" line="26" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetFormTimeTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" failures="0" errors="0" skipped="0" tests="43" assertions="43">
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="32" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="33" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="34" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="41" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="42" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="43" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="49" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="50" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="51" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="57" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="58" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="59" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="63" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="64" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="65" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 24 hours in a day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="71" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 minutes in an hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="72" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 seconds in a minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="73" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 24 hours around in a day" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="80" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 minutes in an hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="81" assertions="1"/>
    <testcase name="-&gt;render() renders a select tag for the 60 seconds in a minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="82" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="90" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="91" assertions="1"/>
    <testcase name="-&gt;configure() can change the empty values" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default : as a separator" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="97" assertions="1"/>
    <testcase name="-&gt;render() renders 3 selects with a default : as a separator" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="98" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="103" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="104" assertions="1"/>
    <testcase name="__construct() can change the default time format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="109" assertions="1"/>
    <testcase name="__construct() can change the default array used for hours" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="118" assertions="1"/>
    <testcase name="__construct() can change the default array used for minutes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="119" assertions="1"/>
    <testcase name="__construct() can change the default array used for seconds" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="120" assertions="1"/>
    <testcase name="__construct() can enable or disable the seconds select box with the with_seconds option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="127" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="132" assertions="1"/>
    <testcase name="__construct() can change the default format" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="133" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the three embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="139" assertions="1"/>
    <testcase name="-&gt;render() takes the attributes into account for all the three embedded widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="143" assertions="1"/>
    <testcase name="-&gt;render() uses id_format for hour" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="150" assertions="1"/>
    <testcase name="-&gt;render() uses id_format for minute" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="151" assertions="1"/>
    <testcase name="-&gt;render() uses id_format for second" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetFormTimeTest.php" line="152" assertions="1"/>
  </testsuite>
  <testsuite name="sfWidgetTest" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" failures="0" errors="0" skipped="0" tests="33" assertions="33">
    <testcase name="-&gt;__construct() can take no argument" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="39" assertions="1"/>
    <testcase name="-&gt;__construct() can take an array of default HTML attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="41" assertions="1"/>
    <testcase name="__construct() throws an InvalidArgumentException if you pass some non existant options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="51" assertions="1"/>
    <testcase name="The exception contains the non existant option names" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="52" assertions="1"/>
    <testcase name="-&gt;getRequiredOptions() returns an array of required option names" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="57" assertions="1"/>
    <testcase name="__construct() throws an RuntimeException if you don't pass a required option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="66" assertions="1"/>
    <testcase name="-&gt;setOption() sets an option value" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="74" assertions="1"/>
    <testcase name="-&gt;getOption() returns null if the option does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="75" assertions="1"/>
    <testcase name="-&gt;hasOption() returns true if the option exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="76" assertions="1"/>
    <testcase name="-&gt;hasOption() returns false if the option does not exist" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="77" assertions="1"/>
    <testcase name="-&gt;setOption() throws an InvalidArgumentException if the option is not registered" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="85" assertions="1"/>
    <testcase name="-&gt;addOption() adds a new option" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="92" assertions="1"/>
    <testcase name="-&gt;getOptions() returns an array of all options" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="96" assertions="1"/>
    <testcase name="-&gt;setAttribute() sets a new default attribute for the widget" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="103" assertions="1"/>
    <testcase name="-&gt;getAttributes() returns an array of attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="107" assertions="1"/>
    <testcase name="-&gt;setAttributes() sets attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="112" assertions="1"/>
    <testcase name="-&gt;attributesToHtml() converts an attribute array to an HTML attribute string" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="117" assertions="1"/>
    <testcase name="-&gt;renderTag() renders a HTML tag with attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="122" assertions="1"/>
    <testcase name="-&gt;renderTag() renders an empty string if the tag name is empty" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="123" assertions="1"/>
    <testcase name="-&gt;renderContentTag() renders a HTML tag with content and attributes" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="128" assertions="1"/>
    <testcase name="-&gt;renderContentTag() renders an empty string if the tag name is empty" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="129" assertions="1"/>
    <testcase name="::escapeOnce() escapes an HTML strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="133" assertions="1"/>
    <testcase name="::escapeOnce() does not escape an already escaped string" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="134" assertions="1"/>
    <testcase name="::escapeOnce() does not escape an already escaped string" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="135" assertions="1"/>
    <testcase name="::escapeOnce() accepts array as argument and returns null" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="136" assertions="1"/>
    <testcase name="::escapeOnce() converts objects to string" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="145" assertions="1"/>
    <testcase name="::fixDoubleEscape() fixes double escaped strings" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="149" assertions="1"/>
    <testcase name="::getCharset() returns the charset to use for widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="153" assertions="1"/>
    <testcase name="::setCharset() changes the charset to use for widgets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="155" assertions="1"/>
    <testcase name="::isXhtml() return true if the widget must returns XHTML tags" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="160" assertions="1"/>
    <testcase name="::setXhtml() changes the value of the XHTML tag" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="162" assertions="1"/>
    <testcase name="-&gt;getJavaScripts() returns an array of stylesheets" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="167" assertions="1"/>
    <testcase name="-&gt;getStylesheets() returns an array of JavaScripts" file="/mnt/hgfs/www/symfony1/test/unit/widget/sfWidgetTest.php" line="168" assertions="1"/>
  </testsuite>
</testsuites>
